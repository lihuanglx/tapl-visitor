((\ c : ((Bool -> Bool) -> Bool) . (if b then true else (\ c : Bool . true))) (if (false c) then (\ a : Bool . c) else (\ a : Bool . c)))
((if (a true) then (\ c : (Bool -> Bool) . (\ e : Bool . true)) else (c a)) ((if (if (if c then c else a) then (if true then c else b) else (if c then a else true)) then (if (a c) then false else false) else (\ c : Bool . false)) (\ a : Bool . (false c))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . ((if a then a else a) (\ d : Bool . c)))
(((c a) ((\ a : Bool . true) true)) (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((true false) (if (c c) then (if c then true else b) else true))))
(if (if (if (\ e : Bool . a) then (if false then a else true) else (if (b false) then (if true then false else c) else a)) then (\ e : Bool . (\ e : Bool . false)) else (if (true (if c then a else true)) then (if b then a else b) else (a true))) then ((b b) (if a then b else b)) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ e : Bool . a) then (\ e : Bool . a) else (\ a : Bool . false))))
((\ d : (Bool -> (Bool -> Bool)) . ((if b then false else c) ((if a then a else false) (true false)))) (\ d : (Bool -> Bool) . (\ e : (Bool -> Bool) . true)))
((if ((\ a : Bool . b) b) then (\ c : Bool . false) else (if a then false else (if true then true else b))) (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((if true then b else a) (\ b : Bool . c))))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ c : Bool . b) (if c then false else c)))
(((\ d : Bool . a) (true c)) ((\ c : (Bool -> Bool) . (\ b : Bool . c)) (\ c : (Bool -> Bool) . false)))
(if (\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (\ e : (Bool -> Bool) . (if true then true else c)) then (if (if true then true else true) then (if b then c else b) else (\ a : Bool . a)) else (a true))) then (\ e : (Bool -> Bool) . (if (c a) then (c (\ d : Bool . a)) else (\ e : Bool . a))) else ((a true) (if true then c else a)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (((false true) (c false)) (if (false c) then false else (\ d : Bool . true))))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((if true then c else a) (if b then c else a)))
(if (\ e : (Bool -> Bool) . (\ d : (Bool -> Bool) . (\ d : Bool . false))) then ((\ b : Bool . b) ((if b then b else c) (c b))) else ((\ e : (Bool -> Bool) . (if c then b else c)) (if false then true else c)))
(\ b : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (if (false b) then (\ e : Bool . true) else (if a then c else false)) then (false (b a)) else (if (\ b : Bool . c) then (\ d : Bool . a) else (if true then c else c))))
(((b true) (if b then a else true)) (\ c : (Bool -> Bool) . (if false then false else true)))
((\ b : ((Bool -> Bool) -> Bool) . (if a then a else a)) (\ e : (Bool -> Bool) . ((\ e : Bool . b) (if true then a else c))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (\ c : Bool . c) then (\ b : Bool . c) else (\ b : Bool . c)) (if (true false) then (if c then b else c) else a)))
(\ d : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (if (\ c : Bool . c) then (if (\ d : Bool . c) then (\ e : Bool . false) else (\ b : Bool . a)) else (if a then b else true)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ b : Bool . true) (\ b : (Bool -> (Bool -> Bool)) . (if false then a else true))))
((\ a : (Bool -> Bool) . ((if a then false else b) (if c then false else false))) (if (if true then b else b) then (\ b : Bool . true) else (c a)))
((if (if false then (if false then false else c) else (true true)) then (if (if b then true else a) then (b b) else true) else (c true)) (\ d : (Bool -> Bool) . (a b)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ a : Bool . b) then (if (b c) then (if false then false else c) else b) else (true true)))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (\ c : (Bool -> (Bool -> Bool)) . (if (if b then true else a) then (false true) else a)))
(\ c : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if ((a b) true) then (\ b : (Bool -> Bool) . (if false then true else c)) else (if (\ d : Bool . a) then true else true)))
(((\ c : Bool . b) (if a then (a true) else (\ e : Bool . true))) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (b b)))
(if (\ b : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (if ((true true) (\ e : Bool . false)) then (\ d : Bool . c) else (c (a true)))) then ((\ e : (Bool -> Bool) . (if true then c else a)) ((if b then c else false) c)) else (\ b : (Bool -> Bool) . (if c then false else a)))
(\ e : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> (((Bool -> Bool) -> Bool) -> (Bool -> Bool))) . (if (\ c : (Bool -> Bool) . a) then (\ d : (Bool -> Bool) . (c a)) else ((\ c : Bool . a) (true (if false then b else a)))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then false else false)))
(if ((a (b false)) (\ a : Bool . a)) then ((\ d : (Bool -> Bool) . (\ c : Bool . (\ c : Bool . c))) ((false a) (c true))) else (if (c (true true)) then ((\ c : Bool . b) (c true)) else (true b)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((if b then c else true) (b true)))
(if (if (if (if a then a else true) then true else b) then (a a) else (\ e : Bool . (if c then b else true))) then (((\ c : Bool . a) c) (if (\ c : Bool . c) then (if (b c) then (if c then false else false) else true) else (\ a : (Bool -> Bool) . (\ c : Bool . c)))) else (\ a : (Bool -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (\ c : Bool . (\ c : Bool . false)))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (if a then (\ d : Bool . false) else (\ a : Bool . a)) then (\ c : (Bool -> Bool) . (if true then a else b)) else (if (\ c : Bool . (false b)) then (if (if c then a else false) then true else c) else (b a))))
((if (\ d : (Bool -> Bool) . (a a)) then ((if (\ b : Bool . a) then (\ d : Bool . b) else a) (true a)) else (if (if a then false else a) then (if false then a else a) else ((\ c : Bool . false) true))) (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : Bool . (if c then a else c))))
(((if b then true else a) (a a)) (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : Bool . a) (false a))))
((if (if true then b else c) then (\ e : Bool . true) else (if b then b else false)) (if ((\ d : Bool . false) c) then ((if true then c else true) false) else (if false then c else a)))
(if (if (false (b c)) then (if (c b) then (\ b : Bool . c) else (if c then true else b)) else (\ b : (Bool -> Bool) . (if (if true then c else false) then c else (\ d : Bool . false)))) then (if (\ a : Bool . false) then (if c then c else false) else (if false then true else false)) else (if (if c then a else a) then (c false) else (if (\ e : Bool . b) then (false false) else (if b then c else a))))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : (Bool -> Bool) . (b true)) (\ d : (Bool -> Bool) . (if (\ a : Bool . false) then (if true then c else b) else (\ b : Bool . c)))))
(\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (\ b : Bool . a) then (if true then true else b) else (b b)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if ((\ c : Bool . false) (if a then false else true)) then (\ a : Bool . (if false then c else true)) else (\ d : (Bool -> Bool) . ((if true then a else false) true))))
(if ((true (true b)) (if a then true else (if c then true else false))) then (if (c c) then (\ e : Bool . true) else (if true then b else false)) else (if (if b then b else b) then (\ c : Bool . a) else (a true)))
((if (\ c : ((Bool -> Bool) -> Bool) . (if (b a) then (if c then c else false) else true)) then (a c) else (true (\ c : Bool . a))) (if (if (false (false b)) then (\ e : (Bool -> Bool) . c) else (b false)) then (\ b : (Bool -> Bool) . (c b)) else (\ e : (Bool -> Bool) . ((c b) true))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if c then (c b) else (\ e : Bool . false)) ((true b) b)))
((\ c : (Bool -> Bool) . (b (if a then a else a))) (\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : Bool . b) b)))
((\ e : (Bool -> Bool) . (\ d : (Bool -> Bool) . true)) (((if a then (if a then false else b) else c) (\ e : (Bool -> Bool) . (\ d : Bool . b))) (\ e : (Bool -> Bool) . (\ d : (Bool -> Bool) . (if c then a else a)))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((a c) (\ b : (Bool -> Bool) . c)))
((\ d : (Bool -> Bool) . (\ c : Bool . c)) ((if (\ a : Bool . false) then c else (if a then b else true)) (c c)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (\ a : (Bool -> Bool) . false)))
(if ((if b then true else b) (if c then b else true)) then ((\ d : Bool . b) (if true then a else a)) else (\ b : (Bool -> Bool) . (if false then c else c)))
(if (if (\ d : Bool . b) then (\ a : Bool . a) else (\ e : (Bool -> Bool) . (false c))) then (if (if (\ e : Bool . c) then true else (b c)) then (if c then a else false) else (c a)) else (\ a : ((Bool -> Bool) -> Bool) . (if a then true else b)))
(if (\ e : (Bool -> Bool) . (\ b : Bool . a)) then (if (\ d : Bool . (\ c : Bool . c)) then (if a then (\ e : Bool . b) else b) else ((\ d : Bool . c) (\ c : Bool . false))) else (if (if (true c) then (\ b : Bool . false) else (\ a : (Bool -> Bool) . a)) then ((if false then a else (a true)) (if false then false else true)) else (if b then (a false) else c)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((\ b : Bool . false) (false b)))
((if (\ a : (Bool -> Bool) . (true c)) then (if b then false else c) else (a true)) (((true false) c) (\ c : (Bool -> Bool) . (\ d : Bool . a))))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . b)) then (\ a : (Bool -> (Bool -> Bool)) . ((\ d : Bool . a) (\ d : Bool . (\ b : Bool . b)))) else (\ e : ((Bool -> Bool) -> Bool) . (\ d : Bool . true)))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . ((if c then false else false) (\ c : Bool . c)))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if c then false else false) then (if true then true else false) else (c a)))
(if (\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((\ b : Bool . c) true)) then (if (false c) then (if (b b) then true else (true a)) else (if a then c else b)) else (\ c : (Bool -> Bool) . (if a then false else false)))
(if ((if c then true else false) (b false)) then ((if b then false else b) (if true then true else a)) else (if (\ a : (Bool -> Bool) . (if false then a else true)) then (\ e : (Bool -> Bool) . true) else (\ a : Bool . c)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ a : Bool . (\ b : Bool . c)) (\ b : (Bool -> Bool) . (if c then true else false))))
((\ a : (Bool -> Bool) . (true true)) (\ e : (Bool -> (Bool -> Bool)) . ((if true then true else false) c)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ a : Bool . (\ b : Bool . b)) then (if c then (\ d : Bool . true) else (false b)) else (a (\ d : Bool . c))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ d : Bool . b) then (\ d : (Bool -> Bool) . (c (true b))) else (\ b : ((Bool -> Bool) -> Bool) . (if true then (true a) else (\ b : Bool . false)))))
(\ e : ((((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (\ c : Bool . b) then (\ a : Bool . c) else (c a))))
((if (\ d : (Bool -> Bool) . (\ c : Bool . true)) then (\ d : (Bool -> Bool) . (if b then a else b)) else ((if (b true) then c else (if true then c else a)) (b (\ a : Bool . true)))) (if (if (if false then b else false) then a else (\ b : Bool . a)) then (\ d : (Bool -> Bool) . true) else (\ b : Bool . a)))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((if c then c else b) (\ e : Bool . (true b))))
((\ e : (Bool -> Bool) . (if a then false else false)) (((false (\ d : Bool . false)) (if (if a then false else a) then b else a)) (\ e : (Bool -> Bool) . true)))
(if ((if b then false else b) (false false)) then (\ a : (Bool -> (Bool -> Bool)) . (if b then (if a then c else b) else b)) else ((true true) (c c)))
(if (\ e : (Bool -> Bool) . (if a then false else (a true))) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (false c) then (if a then true else false) else b)) else ((\ e : Bool . true) ((\ b : Bool . true) (c c))))
((\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (\ d : Bool . a) then (\ c : Bool . a) else (\ e : Bool . (false a)))) (if (b c) then (if true then false else (if false then true else a)) else (if false then b else (\ d : Bool . c))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (\ d : Bool . c) then (c b) else (a false)) then (\ a : (Bool -> Bool) . b) else (b (b a))))
(if (\ c : (Bool -> (Bool -> Bool)) . (\ a : Bool . a)) then (\ a : ((Bool -> Bool) -> Bool) . ((\ c : Bool . false) false)) else (\ d : (Bool -> Bool) . (if c then (false true) else a)))
(if ((b true) (if ((\ e : Bool . a) (if a then b else a)) then (b true) else (\ d : (Bool -> Bool) . (false c)))) then (if (\ b : Bool . b) then (b a) else (if (\ d : Bool . b) then false else false)) else (if (\ b : Bool . c) then (if true then false else c) else (if a then c else true)))
(if ((if c then false else b) (if c then a else true)) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then a else false)) else ((if b then (true c) else c) ((a true) (if false then true else c))))
(((if false then b else a) (if a then c else true)) ((if true then c else false) (if b then true else a)))
((if (\ b : Bool . (false a)) then (true b) else (\ c : Bool . a)) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if ((\ b : Bool . b) (true true)) then (if (if false then false else b) then c else (if a then true else false)) else (if false then false else b))))
(if (if (c false) then (if (\ c : Bool . b) then (c a) else (if b then b else c)) else (if b then a else a)) then (\ e : (Bool -> (Bool -> Bool)) . ((if (\ c : Bool . false) then (\ d : Bool . a) else (\ e : Bool . true)) (\ d : Bool . a))) else (((true a) (if true then b else b)) (\ d : (Bool -> Bool) . ((if b then c else false) (if b then false else b)))))
(((if true then false else true) (\ c : Bool . c)) (\ a : (Bool -> Bool) . (if c then (false a) else a)))
(if (if (true (true c)) then (if (if (true false) then (b a) else b) then (if (b false) then a else (\ b : Bool . b)) else (b (if a then true else false))) else (\ b : (Bool -> Bool) . ((if b then false else c) (\ e : Bool . true)))) then (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then false else a)) else (if (\ c : Bool . true) then (\ c : (Bool -> Bool) . c) else (if (\ a : Bool . b) then a else (if true then c else a))))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . ((c a) (b true)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (if (\ a : (Bool -> Bool) . c) then (\ d : Bool . (\ a : Bool . false)) else (if true then true else b)) then (if (if c then a else a) then ((if a then false else b) b) else (if a then (if a then a else false) else (\ d : Bool . c))) else (if b then true else (\ c : Bool . b))))
(if (if (\ e : Bool . c) then (a b) else (\ e : Bool . false)) then (\ e : ((Bool -> Bool) -> Bool) . (\ e : (Bool -> Bool) . (if false then b else false))) else (\ d : (Bool -> Bool) . (if a then b else (\ c : Bool . false))))
((if (if (a b) then (\ a : Bool . false) else (if a then b else b)) then (\ e : (Bool -> Bool) . a) else ((b (true c)) (\ d : Bool . true))) (if (if a then b else b) then (if true then false else c) else (if true then true else c)))
(if ((if (c c) then (if c then (a c) else (\ d : Bool . true)) else (\ c : Bool . true)) (\ d : Bool . (if false then true else false))) then (\ c : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (b true)) else ((if (if b then true else c) then (\ a : Bool . true) else false) (\ c : (Bool -> Bool) . (c (false b)))))
(\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if c then (\ a : Bool . false) else b) then ((if a then false else b) (\ c : Bool . false)) else ((if a then false else false) (\ b : Bool . true))))
(if (\ e : (Bool -> Bool) . ((if c then a else false) c)) then ((if true then a else b) (\ b : Bool . a)) else (if (\ a : Bool . a) then (\ c : Bool . c) else (\ e : Bool . a)))
(((\ a : (Bool -> (Bool -> Bool)) . (if true then false else a)) (true true)) (\ a : (Bool -> Bool) . (if c then (\ d : Bool . false) else true)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if b then (true true) else false)))
(if (if (\ a : Bool . b) then (\ b : Bool . a) else (c b)) then (((c true) (if a then b else a)) (\ c : Bool . b)) else (\ c : ((Bool -> Bool) -> Bool) . (\ c : ((Bool -> Bool) -> Bool) . (true false))))
(\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((\ c : (Bool -> Bool) . (\ d : Bool . false)) (if (if (a c) then (c b) else c) then (if false then false else b) else (if (true b) then b else a))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if (if b then b else a) then (true true) else (b c)) (if a then (if false then true else true) else (true true))))
(if (\ b : (Bool -> Bool) . (\ b : (Bool -> Bool) . (\ d : Bool . a))) then (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (c a))) else ((false a) (if true then (if a then b else true) else b)))
(\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . a)))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . ((if a then (true c) else false) (\ d : (Bool -> Bool) . a)))
(((\ c : Bool . c) (\ b : Bool . b)) ((if (\ d : Bool . b) then false else b) ((b true) (\ b : Bool . false))))
(if (if (\ e : (Bool -> Bool) . a) then (if b then a else a) else (a (\ c : Bool . c))) then (if (b false) then (if false then c else true) else (if false then b else c)) else ((true (a false)) ((if b then c else c) (if (\ d : Bool . c) then c else false))))
(if (\ b : (Bool -> Bool) . (if (if b then b else false) then (\ d : Bool . c) else b)) then ((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (b a) then (\ e : Bool . true) else (false c))) ((if c then true else c) (true c))) else (\ d : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . false)))
(((\ b : Bool . c) (\ c : Bool . (a a))) (((if b then true else c) (\ c : Bool . b)) (\ e : (Bool -> Bool) . (\ e : Bool . false))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if ((true b) a) then (a a) else (if c then a else c)))
(((if (false false) then b else true) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (false true))) (if ((true a) (b b)) then (b false) else (if a then c else b)))
((((c true) true) (c b)) (\ d : (Bool -> Bool) . (\ c : (Bool -> Bool) . (\ d : Bool . b))))
((((b b) b) (\ c : (Bool -> Bool) . (\ d : Bool . a))) ((\ e : (Bool -> Bool) . a) (\ d : (Bool -> Bool) . (if c then (if false then a else true) else b))))
(\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ e : (Bool -> (Bool -> Bool)) . (if ((false true) (true b)) then (\ c : Bool . a) else (\ b : Bool . true))))
((((\ c : Bool . a) false) (\ c : (Bool -> Bool) . ((if a then true else true) (true true)))) (if ((a true) (if true then b else c)) then (if (c c) then a else (\ a : Bool . b)) else (\ e : Bool . b)))
(((\ c : Bool . true) (if a then false else c)) (if (\ e : Bool . c) then (if true then (\ e : Bool . a) else (if b then b else c)) else ((if b then a else c) true)))
(((if (\ c : Bool . true) then (c b) else (\ a : Bool . (if false then false else b))) (\ d : Bool . (\ b : Bool . a))) ((\ c : Bool . b) (if b then a else b)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ d : Bool . a) then (if true then true else false) else (c true)))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ b : Bool . b) then a else (\ c : Bool . true))))
(if ((b b) ((\ a : Bool . b) a)) then (\ b : (Bool -> Bool) . ((c b) (if a then b else c))) else (\ e : (Bool -> Bool) . ((if c then c else true) (b b))))
(((false (if b then false else b)) (\ d : Bool . b)) (\ d : ((Bool -> Bool) -> Bool) . (if (\ c : (Bool -> Bool) . b) then (if (if false then b else false) then c else (false c)) else (\ e : Bool . (if c then c else true)))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ d : (Bool -> Bool) . (c b)) then (if (if b then c else b) then (\ e : (Bool -> Bool) . (a false)) else (if b then b else a)) else ((\ e : Bool . a) (\ e : Bool . true))))
(if ((\ c : (Bool -> Bool) . b) (\ b : Bool . (true b))) then ((c true) (if a then true else c)) else (if ((false (if a then a else true)) (\ a : Bool . true)) then (if (false (if false then false else true)) then (\ d : Bool . (if false then c else false)) else (true b)) else ((a b) false)))
(if (\ a : ((Bool -> Bool) -> Bool) . (a c)) then (if (if (if (true b) then c else (a b)) then (if c then false else a) else (if false then false else false)) then ((false c) (if a then a else c)) else (\ d : (Bool -> Bool) . (b a))) else (\ a : (Bool -> Bool) . (if false then b else a)))
((((if false then b else false) (false true)) (\ c : (Bool -> Bool) . (c c))) ((\ a : Bool . (if c then b else true)) (\ b : (Bool -> Bool) . (\ a : Bool . false))))
((if (if (b a) then (a (\ e : Bool . true)) else (\ e : (Bool -> Bool) . true)) then (\ b : (Bool -> Bool) . (\ d : Bool . true)) else (if (\ d : (Bool -> Bool) . (if b then b else c)) then (\ c : Bool . (false c)) else (\ b : (Bool -> Bool) . (\ d : Bool . b)))) (if (if (false true) then (if a then b else c) else (if (c c) then (true false) else (a false))) then (if ((c a) (if b then a else b)) then (if c then b else b) else (\ a : (Bool -> Bool) . (\ c : Bool . a))) else (c c)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : ((Bool -> Bool) -> Bool) . (true false)) (\ d : (Bool -> Bool) . a)))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool)))) . (if (if a then (false b) else (if c then false else a)) then (false true) else (\ d : (Bool -> Bool) . (\ e : Bool . a))))
(if (((if c then true else true) (if true then b else b)) ((if (if b then true else a) then true else (b b)) (if false then true else true))) then (\ d : (Bool -> (Bool -> Bool)) . (\ b : Bool . b)) else ((true c) (\ c : Bool . false)))
((if (false c) then (if (false true) then false else b) else (true (if a then c else a))) (\ a : (Bool -> Bool) . (\ b : Bool . a)))
(((if b then (if true then false else c) else a) (\ e : (Bool -> Bool) . (if b then c else c))) ((if (if a then true else a) then (\ c : Bool . true) else (b a)) (\ b : (Bool -> Bool) . (false c))))
((if (\ b : Bool . (\ c : Bool . false)) then ((\ e : Bool . c) c) else (true true)) (if (if (\ d : Bool . c) then (if true then c else true) else (b true)) then (if (a b) then ((\ e : Bool . a) (c a)) else (c c)) else (if (c false) then (if a then true else a) else (if b then a else b))))
((if (false a) then (if c then b else c) else (false b)) (\ d : ((Bool -> Bool) -> Bool) . (\ c : Bool . c)))
(if (if (\ a : (Bool -> Bool) . (\ b : Bool . c)) then (\ a : (Bool -> Bool) . (false true)) else (\ d : Bool . false)) then (((c true) (\ b : (Bool -> Bool) . c)) (\ a : (Bool -> Bool) . (false true))) else (if (\ b : (Bool -> Bool) . false) then (if b then false else (if a then a else false)) else ((if a then false else false) (\ d : Bool . false))))
(if (if (if (\ d : Bool . true) then ((a c) a) else (true (\ d : Bool . b))) then ((if b then a else c) false) else (\ d : (Bool -> Bool) . (true false))) then (if (if true then a else b) then (if (if true then c else b) then false else (if b then c else c)) else (if (\ b : Bool . a) then (false a) else (if true then false else a))) else (\ e : (Bool -> Bool) . ((c b) (\ b : Bool . false))))
((if (\ e : (Bool -> Bool) . (\ d : Bool . false)) then (if (\ d : Bool . c) then (\ c : Bool . b) else (if c then true else c)) else (true true)) (if ((if b then c else c) (\ b : Bool . (\ a : Bool . a))) then (\ b : (Bool -> (Bool -> Bool)) . (b false)) else (\ b : (Bool -> Bool) . (\ c : (Bool -> Bool) . (b a)))))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (Bool -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (c a))))
(if ((\ d : Bool . (\ b : Bool . b)) (\ e : Bool . false)) then ((\ d : (Bool -> (Bool -> Bool)) . (\ c : Bool . c)) (a (a c))) else (if (a a) then (\ e : Bool . b) else (false a)))
((((b b) (if true then false else true)) (if (a false) then (if true then false else a) else (\ b : (Bool -> Bool) . (false false)))) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((if b then a else a) (a b))))
(\ c : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (if (\ d : Bool . (true false)) then (if false then b else b) else ((\ a : Bool . false) (\ d : Bool . b))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ a : (Bool -> (Bool -> Bool)) . (if (\ c : Bool . a) then a else (a a))))
(((\ c : Bool . false) (\ e : Bool . true)) ((if (if a then a else false) then (if b then false else false) else (\ e : Bool . a)) (true a)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool))) . (if (if false then a else true) then (if b then a else false) else (\ c : Bool . true)))
(if ((if false then false else (true true)) (a false)) then (if (b a) then (if b then a else true) else (\ c : Bool . (\ d : Bool . b))) else (if (if false then false else false) then (\ b : (Bool -> Bool) . (c false)) else (a true)))
(\ e : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : ((Bool -> Bool) -> Bool) . (if false then a else true)))
((\ e : (Bool -> (Bool -> Bool)) . (if (false true) then true else (\ a : Bool . false))) (if (if (\ c : Bool . c) then b else true) then (c (b b)) else (\ d : Bool . (\ b : Bool . a))))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ d : Bool . (b c)) then ((\ d : Bool . b) false) else (\ e : (Bool -> Bool) . c)))
((((if (c a) then (if c then c else a) else b) (\ e : Bool . false)) (if ((if a then true else false) (if c then false else c)) then (if (a true) then false else (if false then a else c)) else (\ c : Bool . a))) (if (if (\ c : Bool . a) then a else a) then (if ((\ a : Bool . true) b) then (if b then c else a) else (false true)) else (if b then b else a)))
(((\ e : (Bool -> Bool) . c) (\ a : (Bool -> Bool) . (false false))) (((a false) (if (\ b : Bool . true) then (true b) else true)) ((if a then false else false) (false false))))
(\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (if (((if false then b else a) (c false)) (if true then true else b)) then (if (a c) then (\ e : Bool . a) else (false b)) else (\ e : Bool . (\ c : Bool . a))))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if true then c else a) then (\ b : Bool . c) else b)) (\ e : (Bool -> Bool) . (if ((if c then b else b) (c a)) then (if true then a else c) else ((\ c : Bool . true) a))))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . b)))
(\ d : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (false true)))
(((if false then (if c then a else b) else false) (if false then b else c)) ((\ c : (Bool -> Bool) . b) (\ b : Bool . (if c then false else a))))
(if (if (((\ c : Bool . true) (b a)) (b b)) then (\ b : (Bool -> Bool) . (b true)) else (b a)) then ((\ e : Bool . b) (if (\ d : Bool . a) then true else b)) else (\ d : (Bool -> Bool) . (\ e : Bool . (\ d : Bool . c))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((if b then b else true) (c false)))
((\ a : (Bool -> (Bool -> Bool)) . (if false then c else true)) (if (if ((b a) (false false)) then (false true) else (\ d : Bool . true)) then (\ b : Bool . true) else (if (if a then b else b) then c else b)))
(((\ a : (Bool -> Bool) . a) (c true)) ((if false then a else c) (\ c : Bool . b)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (c true) then a else (if false then false else false)) then (\ d : (Bool -> Bool) . (if b then c else false)) else (\ d : Bool . (a true))))
(if ((\ a : (Bool -> (Bool -> Bool)) . (\ c : Bool . true)) (if a then (\ c : Bool . false) else false)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (true false)) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (c true) then (\ a : Bool . true) else b)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (((if false then false else false) (b false)) (if true then true else b)) then (\ d : (Bool -> Bool) . a) else (\ b : (Bool -> Bool) . (if true then false else c))))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then true else (\ c : Bool . b))) (\ d : (Bool -> Bool) . (\ e : Bool . false)))
(\ a : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (\ a : Bool . a) then (if (if false then false else b) then false else (a a)) else (\ a : Bool . true)))
((\ e : (Bool -> Bool) . (if true then a else a)) ((c false) (true (\ d : Bool . false))))
(((if true then true else false) (if false then (\ e : Bool . c) else (true c))) (\ c : (Bool -> Bool) . (if c then (if a then true else c) else (\ c : Bool . a))))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ a : Bool . true) then (if false then a else b) else (\ e : (Bool -> Bool) . (c c)))) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (c (\ e : Bool . a))))
(if (\ c : (Bool -> Bool) . (\ e : ((Bool -> Bool) -> Bool) . (if c then (true a) else (\ b : Bool . a)))) then (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ d : (Bool -> Bool) . (c b))) else ((if (c false) then false else c) ((false false) (if a then a else c))))
(if ((if c then a else c) (if false then b else c)) then ((false (if b then false else false)) (\ e : (Bool -> Bool) . (\ b : Bool . a))) else ((if (true c) then (if b then a else (\ d : Bool . false)) else (\ c : (Bool -> Bool) . true)) (\ b : (Bool -> Bool) . (b a))))
(((if (false b) then (\ e : Bool . b) else (if c then b else true)) (\ b : (Bool -> Bool) . (if (b c) then (\ e : Bool . a) else (true c)))) (if (\ c : Bool . (if c then c else false)) then ((\ a : Bool . b) false) else (false b)))
((\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (a false))) ((false c) (\ d : Bool . (\ d : Bool . true))))
(((if (b true) then (\ b : Bool . b) else a) (c false)) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . (if a then true else c))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . ((\ a : (Bool -> (Bool -> Bool)) . (true c)) (if (if a then true else a) then false else b)))
(if (if (true false) then (true b) else ((if b then a else true) c)) then (if ((b c) b) then (\ e : Bool . c) else (\ e : Bool . c)) else (if (\ a : (Bool -> Bool) . a) then (if (\ b : Bool . c) then (true true) else (a (if b then true else false))) else ((\ e : Bool . a) (a a))))
((((if true then true else true) c) (if (if b then a else b) then (\ e : Bool . false) else (if a then (a true) else b))) (if (if (if c then (\ d : Bool . c) else (if a then c else true)) then (if a then (if c then false else false) else (c c)) else (\ b : Bool . true)) then (\ e : (Bool -> Bool) . (false (\ b : Bool . false))) else (\ a : Bool . (if false then c else true))))
((\ c : ((Bool -> Bool) -> Bool) . (if true then false else (\ d : Bool . false))) ((c c) (if b then true else a)))
((\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (c false) then (if a then b else true) else ((false a) true))) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ c : Bool . true) then (\ b : (Bool -> Bool) . (\ a : Bool . b)) else ((c a) (if false then true else a)))))
(((\ e : Bool . true) (a c)) (\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (if false then (\ c : Bool . c) else (true b)) then (\ d : Bool . b) else ((\ d : Bool . false) (\ c : Bool . b)))))
((\ c : (Bool -> Bool) . (\ a : Bool . true)) (if (c false) then (true (\ a : Bool . true)) else (\ b : Bool . true)))
((((c (if c then c else b)) (false false)) (if true then true else (\ d : Bool . true))) (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . ((\ a : Bool . b) (\ d : Bool . b)))))
(if (if (\ a : Bool . a) then (true false) else (c true)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . (if true then true else b))) else (if (\ a : Bool . true) then (false (if c then false else b)) else (false (a b))))
(\ b : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (false c) then (if (if a then true else a) then (\ e : Bool . false) else (if true then b else false)) else (\ a : (Bool -> Bool) . a)))
(if (\ a : (Bool -> Bool) . (if b then c else true)) then ((\ b : Bool . b) (\ a : Bool . b)) else ((\ b : Bool . true) (if (c a) then (if true then false else a) else a)))
(((if (a b) then a else (if a then b else true)) (if (\ e : Bool . false) then (if b then false else false) else (\ a : Bool . (if c then false else false)))) (if ((\ a : Bool . b) c) then (a b) else (if a then (\ a : Bool . a) else true)))
((\ b : (Bool -> Bool) . (if (if c then (if a then b else b) else (false false)) then (\ a : Bool . c) else ((a true) (if true then false else c)))) (if (if (\ c : Bool . c) then (if true then false else true) else false) then (\ e : Bool . b) else ((false a) c)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ b : (Bool -> Bool) . (a c)) (a c)))
((\ b : (Bool -> Bool) . (c (\ e : Bool . false))) (((false b) a) (if true then false else c)))
(\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ e : Bool . (b false)) (\ e : (Bool -> Bool) . (if a then b else false))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . ((if true then a else (if c then b else a)) (if (if true then false else false) then (c b) else (true (\ d : Bool . c)))))
(if (((\ d : Bool . c) (\ b : Bool . c)) (true (b c))) then ((if (if false then true else c) then b else (\ c : Bool . a)) (if (if (\ c : Bool . c) then false else (\ c : Bool . true)) then (false true) else (false false))) else (if (if ((\ c : Bool . a) false) then (if b then false else (if b then c else false)) else (false a)) then (if (\ a : (Bool -> Bool) . (if b then false else false)) then (if (c a) then (\ c : Bool . false) else (if false then false else c)) else (a false)) else (if (false a) then (\ a : Bool . c) else (\ a : Bool . c))))
(if ((if false then c else a) (if (if (b a) then true else false) then ((\ b : Bool . c) (if true then true else a)) else (if a then b else a))) then (\ e : (Bool -> (Bool -> Bool)) . (false false)) else (if (a b) then (if false then true else c) else (\ b : Bool . (false true))))
(\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : ((Bool -> Bool) -> Bool) . (true a)))
((if (\ c : (Bool -> Bool) . (\ d : Bool . true)) then (if c then (c false) else (if true then c else true)) else (\ a : (Bool -> Bool) . (\ d : Bool . false))) (if (\ d : Bool . (c c)) then (\ c : Bool . a) else (\ a : Bool . b)))
(((if (false false) then (\ b : Bool . false) else (a true)) (if (\ b : Bool . a) then b else (\ b : Bool . a))) (\ a : (Bool -> Bool) . (if (if c then true else false) then false else b)))
(\ b : ((((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (\ b : Bool . (\ c : Bool . true)) then (\ d : Bool . a) else (\ e : (Bool -> Bool) . c)))
((if (if (a b) then (if true then false else true) else (a a)) then (\ e : ((Bool -> Bool) -> Bool) . (\ a : Bool . b)) else ((if true then (if false then false else true) else c) (if false then true else true))) (if (b c) then (b a) else (\ e : Bool . true)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . ((\ d : Bool . (if c then a else true)) (if (\ c : Bool . false) then false else c)))
(((\ e : Bool . false) (true true)) (if (if (if b then a else a) then ((\ a : Bool . a) (if c then true else b)) else (if (\ d : Bool . c) then c else (if b then b else c))) then (\ e : Bool . a) else (if (if c then b else true) then (if b then b else a) else (false b))))
((if (\ a : (Bool -> Bool) . (\ b : Bool . true)) then (\ a : (Bool -> Bool) . (\ e : Bool . b)) else (if c then b else true)) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (true (a true))))
((if (if a then b else true) then (if (\ a : Bool . b) then b else b) else (\ e : (Bool -> Bool) . true)) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . (\ c : Bool . false))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (true (if a then false else c)) then (if (\ a : Bool . a) then (b c) else (a b)) else (((false b) c) (\ a : Bool . false))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (a false) then (\ d : Bool . false) else (if (\ b : Bool . b) then false else (\ b : Bool . true))))
(if (if (if (if b then false else true) then (if c then a else c) else (\ b : Bool . true)) then ((\ c : Bool . true) c) else ((\ c : (Bool -> Bool) . (if false then c else c)) (c false))) then ((false a) (\ d : (Bool -> Bool) . a)) else ((\ d : (Bool -> Bool) . (if b then true else true)) ((\ c : Bool . c) (if true then true else true))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . b) (if (false a) then (\ d : Bool . true) else (\ c : Bool . b))))
((((if false then c else false) (\ b : Bool . b)) (if (if b then c else a) then (\ d : (Bool -> Bool) . c) else (if (b b) then true else (\ d : Bool . true)))) ((if a then a else false) ((\ b : Bool . false) (\ d : Bool . false))))
((\ a : (Bool -> (Bool -> Bool)) . ((false c) false)) ((if (\ b : Bool . false) then ((b false) (\ d : Bool . c)) else (false (if b then c else a))) (a false)))
((((if b then true else b) true) (\ c : (Bool -> Bool) . (a false))) (if (if (\ c : Bool . true) then (if (if a then a else a) then true else (\ b : Bool . a)) else (if true then false else c)) then (if ((if true then c else true) b) then (\ e : Bool . false) else (if (if a then true else true) then c else a)) else (if (false b) then c else (\ b : Bool . c))))
(if (\ e : (Bool -> Bool) . (if c then b else c)) then (if (\ d : (Bool -> (Bool -> Bool)) . ((a a) (false a))) then (\ e : Bool . b) else (\ a : ((Bool -> Bool) -> Bool) . (if true then b else c))) else (\ d : (Bool -> Bool) . (\ d : (Bool -> Bool) . (\ e : Bool . c))))
(if ((if c then false else true) (true c)) then ((if (if a then b else c) then (if (\ a : Bool . true) then c else true) else (c (\ e : Bool . b))) (\ b : (Bool -> Bool) . (c a))) else (\ d : (Bool -> Bool) . (false false)))
((if (if true then b else c) then (\ b : (Bool -> Bool) . (if (if b then true else false) then true else (false b))) else (if (\ c : (Bool -> Bool) . (\ b : Bool . b)) then (\ d : (Bool -> Bool) . (true a)) else ((if c then c else b) (\ a : Bool . c)))) (if ((if b then a else false) (a a)) then (\ c : (Bool -> Bool) . a) else (if (if b then c else false) then b else (true b))))
((((\ e : Bool . true) false) (\ a : Bool . (\ d : Bool . b))) (if (\ b : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ a : Bool . a))) then (b false) else (if (\ e : Bool . true) then (if a then c else c) else (\ a : Bool . true))))
((if (if (if false then true else false) then b else a) then (if a then false else c) else (b c)) (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (true b)))
(if (\ c : (Bool -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (if b then c else false))) then ((\ d : (Bool -> Bool) . (if true then b else false)) (\ c : Bool . (c a))) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (if (b a) then (if true then true else b) else (\ a : Bool . b)))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (if (if (false b) then true else false) then (if c then a else true) else (\ a : Bool . b)))
(\ a : ((Bool -> Bool) -> (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool))) . (((\ a : Bool . true) c) (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . true))))
(if ((\ e : (Bool -> Bool) . c) (\ d : Bool . (\ e : Bool . b))) then ((\ e : (Bool -> Bool) . (if a then false else a)) (\ c : (Bool -> (Bool -> Bool)) . ((b true) (if c then true else b)))) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . (\ a : Bool . b)))))
(if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if false then b else (\ c : Bool . false))) then ((if false then b else (a b)) (\ b : Bool . a)) else (\ b : (Bool -> Bool) . (b (\ b : Bool . b))))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ a : (Bool -> Bool) . (c a)) then (if (\ d : Bool . a) then false else true) else (if (\ e : Bool . true) then true else (\ b : Bool . true))))
(if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ b : Bool . a))) then (\ b : ((Bool -> Bool) -> Bool) . (\ e : Bool . (\ b : Bool . c))) else (\ b : ((Bool -> Bool) -> Bool) . (if false then c else false)))
(\ d : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> (Bool -> (Bool -> Bool))) . ((\ a : Bool . b) ((b c) false)))
(\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ b : ((Bool -> Bool) -> Bool) . (\ d : Bool . false)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (((c true) (b c)) (\ a : Bool . true)))
(if ((if true then false else true) ((b c) true)) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if false then b else (\ d : Bool . b))) else (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((\ c : Bool . (\ e : Bool . a)) (b b))))
((\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if c then b else a)) (if (if false then (true true) else (\ a : Bool . c)) then (\ a : ((Bool -> Bool) -> Bool) . (if b then true else true)) else ((\ d : Bool . b) ((if a then true else c) a))))
((\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ d : Bool . true) then (\ e : Bool . b) else false)) (if (\ d : Bool . b) then (\ a : (Bool -> Bool) . c) else (if c then (\ d : Bool . c) else (if b then c else false))))
((\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (if c then true else c) then (if c then true else true) else (if c then true else false))) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . a))))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ a : Bool . b))) (if (if a then false else false) then ((if b then a else true) c) else (\ d : (Bool -> Bool) . a)))
((\ d : (Bool -> Bool) . (if false then b else false)) (if (\ c : (Bool -> Bool) . (\ e : Bool . c)) then (false (false false)) else (\ b : Bool . true)))
((if ((if b then c else b) true) then (if (\ c : Bool . false) then (if false then a else a) else c) else (\ c : (Bool -> Bool) . (c a))) ((if (\ a : Bool . false) then true else b) (a false)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : (Bool -> Bool) . (\ e : Bool . true)) (if (if c then false else false) then (\ c : (Bool -> Bool) . (if b then true else c)) else (if true then c else b))))
((if ((if false then (if c then a else b) else (b true)) (a (a false))) then (b (\ e : Bool . false)) else (\ c : (Bool -> Bool) . (\ c : Bool . (false a)))) (\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (if c then a else a) then ((\ e : Bool . false) (if true then c else a)) else ((b b) (if false then c else true)))))
(\ b : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((c (if a then a else false)) ((if (\ c : Bool . c) then (if a then c else true) else true) (if (false true) then false else (if false then c else true)))))
(if (if (false b) then (\ c : Bool . (c b)) else (if false then c else c)) then (if (if false then false else b) then (if false then (\ a : Bool . b) else true) else (a (true false))) else ((if (if b then false else a) then b else b) ((if true then a else a) a)))
(if (\ e : ((Bool -> Bool) -> Bool) . (c a)) then (if ((\ b : Bool . true) b) then (\ c : (Bool -> Bool) . a) else (if true then (if true then a else a) else (b a))) else (\ a : (Bool -> (Bool -> Bool)) . (\ e : Bool . b)))
((\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then a else false)) ((if c then c else c) (false false)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ e : Bool . b) (true false))))
(if (if (if (\ d : Bool . a) then (\ e : Bool . a) else b) then (\ d : Bool . false) else (b false)) then ((\ d : (Bool -> Bool) . (if (\ d : Bool . a) then true else (\ d : Bool . b))) ((c a) (\ d : Bool . b))) else (if (if true then true else (if c then c else false)) then (if true then true else c) else (\ c : Bool . a)))
((\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ d : (Bool -> Bool) . c))) ((if (true b) then (\ b : Bool . c) else (true c)) (\ a : ((Bool -> Bool) -> Bool) . (\ b : (Bool -> Bool) . (if c then true else true)))))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . (c a))) then (if (\ c : ((Bool -> Bool) -> Bool) . (a (\ d : Bool . c))) then ((true a) true) else ((c a) (a true))) else (((if a then true else true) (if true then c else c)) (if false then true else b)))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (\ a : (Bool -> Bool) . (\ d : Bool . true)) then (\ c : (Bool -> Bool) . (\ b : Bool . a)) else (a a)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if false then true else true) then (\ d : Bool . a) else (if b then false else false)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . (if b then true else true)))
(\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if ((\ c : Bool . false) ((if b then true else false) (if b then b else c))) then ((\ c : Bool . a) (\ e : Bool . true)) else (if a then false else (\ a : Bool . true))))
(((\ a : (Bool -> Bool) . (false false)) ((if a then false else true) (if false then false else b))) (\ c : (Bool -> Bool) . (if true then c else a)))
(\ a : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . ((if a then false else false) (if false then b else b)))
(if (((if false then c else b) b) (if false then true else c)) then (\ c : (Bool -> Bool) . (\ e : Bool . false)) else ((\ d : Bool . (true false)) (if (\ e : Bool . false) then (if c then c else true) else (if true then a else true))))
(if (if (b c) then (if (true b) then c else true) else ((if c then b else b) c)) then ((if b then (b c) else c) (\ c : (Bool -> Bool) . a)) else ((if (\ c : Bool . a) then (\ d : Bool . true) else (c (if true then b else c))) ((if c then true else c) (if false then c else b))))
(if (if (if (b c) then (\ e : (Bool -> Bool) . c) else (true (if a then a else c))) then ((\ c : Bool . c) (\ a : (Bool -> Bool) . (if a then true else b))) else ((if c then c else true) (\ d : Bool . (b true)))) then (if ((false b) a) then (\ c : (Bool -> Bool) . a) else ((if (\ a : Bool . c) then b else a) (\ c : (Bool -> Bool) . (if false then a else true)))) else (\ e : (Bool -> Bool) . ((b a) ((if a then c else b) (if c then a else true)))))
(((\ d : Bool . (\ c : Bool . true)) (((\ d : Bool . b) c) ((if true then false else true) (false false)))) (if ((true b) (\ e : Bool . a)) then (\ e : (Bool -> Bool) . (c (if false then c else false))) else (if (\ a : (Bool -> Bool) . (\ a : Bool . true)) then (if b then true else c) else (a a))))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ e : Bool . (if b then c else true)) (if (if (c c) then false else true) then (\ a : (Bool -> Bool) . (false a)) else (if b then c else false))))
((if (if true then true else false) then (if (if a then a else true) then (if (if b then true else true) then c else b) else (a c)) else (c c)) (\ e : (Bool -> Bool) . (if b then b else c)))
(\ b : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (((if false then b else c) (if a then false else a)) (\ b : Bool . a)))
(if (\ a : (Bool -> Bool) . ((if b then true else true) (\ c : Bool . c))) then ((\ e : Bool . (true b)) (\ e : (Bool -> (Bool -> Bool)) . (false b))) else (\ b : (Bool -> Bool) . ((if c then false else false) true)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : Bool . true) (if false then (if a then c else b) else false)))
(if (if (false b) then (if (if (\ b : Bool . true) then false else (\ a : Bool . c)) then (\ c : Bool . b) else (false true)) else (\ e : (Bool -> Bool) . (if false then c else c))) then (if (false b) then (\ b : Bool . a) else (b a)) else ((\ c : Bool . false) (\ c : Bool . true)))
(\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if ((true b) (\ e : Bool . c)) then (\ c : (Bool -> Bool) . (c (if c then true else true))) else ((false b) (if true then c else true))))
(if (if (if (c c) then (\ c : Bool . c) else false) then (\ b : Bool . b) else (if (\ d : Bool . c) then (false b) else (\ a : Bool . c))) then (if (c true) then (\ d : Bool . c) else (\ e : (Bool -> Bool) . c)) else (if (\ b : Bool . true) then ((\ a : (Bool -> Bool) . (if false then true else b)) (if (b b) then b else (if true then false else b))) else (if a then (\ b : Bool . b) else false)))
((\ e : (Bool -> Bool) . (\ d : Bool . a)) (if (\ c : Bool . c) then (a c) else (c a)))
(\ c : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((false c) (if (if a then a else c) then ((if b then a else b) c) else (if (b a) then false else (b true)))))
(if (\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (((if false then true else false) (\ b : Bool . a)) (\ d : (Bool -> Bool) . (if a then b else b)))) then (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((if (\ b : Bool . false) then (false b) else c) (a b))) else (if ((if b then a else c) a) then (true b) else (\ a : Bool . true)))
(\ d : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (if false then true else (\ c : Bool . c)) then (if b then false else c) else ((\ d : Bool . c) (false c))) then ((b true) (\ c : Bool . false)) else ((b false) (\ d : Bool . false))))
((if (a true) then (\ b : (Bool -> Bool) . c) else (if false then (true false) else (\ b : Bool . c))) (if ((\ b : Bool . (c c)) (b (\ a : Bool . false))) then (\ d : (Bool -> Bool) . true) else (if (true (false true)) then (if a then (\ b : Bool . false) else (if false then true else b)) else (true b))))
(((\ b : (Bool -> (Bool -> Bool)) . (b false)) (\ e : Bool . (b b))) ((\ d : Bool . (\ d : Bool . b)) (if (if false then a else a) then (\ d : Bool . c) else (if (\ a : Bool . a) then (false b) else true))))
(if (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . false)) then (if (\ c : (Bool -> Bool) . b) then (true false) else ((if b then b else a) b)) else (\ c : (Bool -> Bool) . (b (\ c : Bool . c))))
(((if false then false else false) (if b then b else (\ e : Bool . false))) (\ d : ((Bool -> Bool) -> Bool) . (if (false true) then (true false) else (false c))))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> (Bool -> Bool)) . (c false)))
((((true b) (false true)) ((\ c : Bool . (false true)) (\ a : Bool . b))) (if (\ a : Bool . c) then (if a then false else false) else (if (\ a : Bool . b) then (\ c : Bool . b) else (c false))))
(\ c : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((if ((a b) a) then (false a) else (b a)) (\ a : Bool . (\ c : Bool . c))))
((if ((true (b a)) (true true)) then (\ a : (Bool -> (Bool -> Bool)) . (if a then a else a)) else (\ d : (Bool -> Bool) . (b (b b)))) (if (\ e : Bool . a) then (\ c : (Bool -> Bool) . (a true)) else (\ d : (Bool -> Bool) . (\ c : Bool . true))))
(if ((true a) (true b)) then (if ((c b) (if false then c else a)) then (\ b : (Bool -> Bool) . (false b)) else (\ d : (Bool -> Bool) . (if a then c else b))) else ((\ c : Bool . b) (if c then a else true)))
(if (if (if true then c else false) then (true b) else (\ c : Bool . (\ b : Bool . c))) then (\ c : (Bool -> (Bool -> Bool)) . (\ b : Bool . a)) else (if (b c) then (if a then c else true) else (\ c : (Bool -> Bool) . (false a))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (((if false then c else c) (c a)) (if (\ c : Bool . true) then (false false) else a)))
(if (if (if (\ d : Bool . a) then b else true) then (\ c : Bool . true) else ((c true) b)) then (if (\ d : Bool . c) then (\ b : (Bool -> Bool) . (true c)) else (\ b : Bool . c)) else (if (if (if (b false) then (b false) else (if true then true else false)) then (\ d : Bool . true) else (if true then (\ c : Bool . b) else (\ a : Bool . true))) then (\ c : (Bool -> Bool) . false) else (if a then c else a)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ c : Bool . b) (false b))))
(if ((if (\ d : Bool . c) then true else (c false)) (if a then true else (\ a : Bool . b))) then (if (true c) then (c false) else ((\ c : Bool . b) true)) else (if (if true then b else c) then (if (\ e : (Bool -> Bool) . (if b then false else a)) then (\ b : (Bool -> Bool) . (if b then true else b)) else (if true then a else b)) else (true b)))
((if (b (if c then b else false)) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then c else (b true))) else (if (\ a : (Bool -> Bool) . false) then (\ a : (Bool -> Bool) . (\ d : Bool . false)) else (if c then (\ e : Bool . b) else a))) ((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (false false)) ((false b) (true c))))
(if (if (\ c : (Bool -> (Bool -> Bool)) . (a true)) then ((\ d : (Bool -> Bool) . (\ d : Bool . false)) (true b)) else ((if c then (\ c : Bool . b) else (if c then false else true)) (\ c : (Bool -> Bool) . (if a then b else a)))) then (if (b a) then (\ e : (Bool -> Bool) . (\ d : Bool . a)) else (\ c : Bool . (false false))) else ((if (if c then (true a) else false) then (c c) else (\ c : (Bool -> Bool) . (\ c : Bool . true))) ((if b then a else b) (if false then false else false))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ a : (Bool -> Bool) . (if c then c else false)) ((\ e : Bool . true) (if (\ e : Bool . b) then true else b))))
(if (if (if (b a) then (if a then false else true) else (a b)) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (c (\ d : Bool . a))) else (if (false b) then a else (if false then true else true))) then (\ d : (Bool -> Bool) . (\ e : Bool . true)) else (((if a then b else false) (if false then a else true)) ((c (\ c : Bool . a)) (if (\ b : Bool . a) then (\ e : Bool . true) else a))))
(if (\ c : (Bool -> Bool) . (\ d : Bool . b)) then (((\ e : Bool . b) (a c)) ((if a then b else true) (c a))) else (if (false (if false then false else false)) then (false (false b)) else (\ a : Bool . b)))
(((true b) (\ c : Bool . c)) (if (if (\ e : Bool . false) then (c b) else c) then (\ a : Bool . (\ d : Bool . true)) else (c b)))
((if (if a then (c a) else (\ a : Bool . true)) then (if (if true then a else b) then (c a) else c) else (if (if c then c else b) then (if b then b else c) else (false a))) (if (\ c : (Bool -> Bool) . (b true)) then (\ b : (Bool -> Bool) . (c false)) else (if false then false else (true a))))
(\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if (true a) then b else (if c then b else false)) (\ d : Bool . false)))
(((\ e : Bool . a) (if (a c) then (if c then false else c) else (if true then c else (if a then c else false)))) (if (if a then a else (if b then true else a)) then (if a then (c false) else (\ d : Bool . c)) else (b (\ d : Bool . false))))
(if (\ e : (Bool -> (Bool -> Bool)) . (if false then (true b) else (\ b : Bool . a))) then (\ d : (Bool -> (Bool -> Bool)) . (b b)) else (\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (((\ e : Bool . false) true) (a false))))
((\ d : (Bool -> Bool) . (if (if false then b else false) then a else c)) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (true b) then (c false) else b)))
(if (if ((c (\ b : Bool . c)) (\ a : Bool . (\ a : Bool . c))) then (if (\ b : (Bool -> Bool) . false) then (a false) else (if false then false else b)) else (\ c : Bool . c)) then (\ e : ((Bool -> Bool) -> Bool) . ((a a) a)) else (\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (if c then c else true) then ((a a) b) else (a b))))
(if ((\ d : Bool . b) (true true)) then (if (if true then c else (\ a : Bool . true)) then (if (b true) then (true a) else (if true then c else b)) else (\ d : (Bool -> Bool) . (\ c : Bool . a))) else (\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ c : Bool . (true b))))
((if (if (b b) then (if b then b else a) else false) then (if c then false else true) else (if false then c else (true true))) (if (c (b c)) then (if (if a then b else true) then (if true then a else a) else (c a)) else ((\ a : Bool . false) c)))
((if (if (true b) then (\ d : Bool . a) else (\ a : (Bool -> Bool) . true)) then (\ c : Bool . c) else (\ b : (Bool -> Bool) . a)) ((\ e : (Bool -> Bool) . (c true)) (a (false false))))
((\ c : (Bool -> Bool) . (\ c : ((Bool -> Bool) -> Bool) . ((\ b : Bool . b) (if true then true else a)))) (\ a : (Bool -> Bool) . (\ a : (Bool -> Bool) . (b c))))
(((\ a : (Bool -> Bool) . (if c then b else c)) (if (a a) then (if b then false else (\ e : Bool . a)) else (if (a a) then (false false) else (true b)))) (if (\ c : (Bool -> Bool) . a) then (if (false false) then a else true) else (if (\ d : Bool . (c c)) then (if b then (\ b : Bool . a) else (if false then true else b)) else (if c then b else b))))
(((true (false true)) (a (\ b : Bool . b))) (\ a : (Bool -> Bool) . (if (true b) then (\ d : Bool . true) else c)))
(((\ a : (Bool -> Bool) . true) (\ b : (Bool -> Bool) . (\ d : Bool . a))) (if ((if false then c else b) b) then ((\ c : Bool . true) false) else (\ c : ((Bool -> Bool) -> Bool) . (\ a : Bool . b))))
(\ e : (((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (if (if c then b else c) then (\ b : (Bool -> Bool) . (true b)) else (a a)) then (\ d : (Bool -> Bool) . true) else (if (c a) then (b c) else a)))
(if (if (if (\ b : (Bool -> Bool) . (if a then true else false)) then (if b then true else false) else (\ d : Bool . a)) then ((\ d : Bool . true) c) else (if (a false) then (\ c : Bool . true) else (\ d : (Bool -> Bool) . (if c then c else false)))) then ((\ c : (Bool -> Bool) . (c true)) (if (a a) then (\ d : Bool . c) else true)) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((b b) (false true))))
((\ b : (Bool -> Bool) . (if true then b else b)) ((if (if true then c else b) then (b a) else (\ c : Bool . a)) (b false)))
(if ((if true then (b a) else (false c)) (if c then (if c then false else true) else (b false))) then (if (if (b b) then (\ d : Bool . c) else (\ b : Bool . (a true))) then (false (b true)) else (\ e : Bool . true)) else (if ((\ b : Bool . b) (\ a : Bool . b)) then (\ c : (Bool -> Bool) . (\ c : Bool . (\ a : Bool . b))) else (if (\ b : Bool . true) then (\ b : Bool . c) else ((true b) true))))
((if (if (c false) then (if true then true else c) else (\ e : Bool . b)) then ((if c then b else b) (\ e : Bool . false)) else (if (if false then (\ b : Bool . b) else (c c)) then (if a then true else b) else (\ c : (Bool -> Bool) . (true b)))) (\ e : ((Bool -> Bool) -> Bool) . (if true then a else c)))
(\ b : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if c then true else a) then (\ e : Bool . (c a)) else (if c then (\ e : Bool . false) else (if c then b else c))))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (true (true a))) (\ b : (Bool -> (Bool -> Bool)) . (a c)))
(if (((if true then c else b) (\ c : Bool . true)) (\ d : (Bool -> Bool) . (false b))) then ((if (if c then c else b) then a else false) ((c (if true then true else b)) (\ b : Bool . c))) else (\ b : ((Bool -> Bool) -> Bool) . (\ d : (Bool -> Bool) . true)))
(if ((if (if b then b else c) then false else (\ c : Bool . false)) (if (if (true c) then true else (b c)) then (\ a : Bool . b) else (b true))) then ((c b) (\ d : Bool . (if c then c else c))) else (if (\ c : Bool . a) then (false (c a)) else (if (\ e : Bool . a) then true else b)))
(if (if (false (\ c : Bool . c)) then (if b then b else (if a then true else false)) else ((\ d : Bool . c) (if true then b else true))) then ((true false) ((\ b : Bool . true) true)) else (\ e : (Bool -> (Bool -> Bool)) . (\ e : Bool . c)))
((if (if (if c then false else true) then (true true) else (b false)) then (if false then true else b) else (true c)) ((b c) (\ a : Bool . true)))
(if (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (true c))) then ((\ c : (Bool -> Bool) . ((c c) (if c then true else c))) (if (\ b : Bool . true) then (c true) else c)) else (((a a) (if c then c else c)) (\ b : Bool . a)))
(if (\ e : (Bool -> (Bool -> Bool)) . ((\ a : Bool . true) (true a))) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (false (if a then false else true))) else (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if true then false else a) (false c))))
((if (\ d : (Bool -> Bool) . (if (c false) then (\ a : Bool . true) else a)) then ((false b) false) else ((if (false false) then (\ d : Bool . false) else true) (c false))) (if (if (\ c : Bool . c) then (\ d : Bool . (\ b : Bool . false)) else (\ b : (Bool -> Bool) . (\ b : Bool . false))) then (\ b : Bool . false) else (false true)))
(if ((\ b : Bool . a) (\ c : Bool . true)) then ((\ a : Bool . a) (b true)) else ((\ a : Bool . c) (c false)))
((\ d : ((Bool -> Bool) -> Bool) . (c false)) (\ c : ((Bool -> Bool) -> Bool) . (\ a : (Bool -> Bool) . (if false then true else false))))
((\ e : (Bool -> Bool) . (if (b c) then (if b then false else b) else (\ c : Bool . c))) (if (\ a : (Bool -> Bool) . (if c then false else (if a then true else false))) then (\ d : (Bool -> Bool) . (if b then c else (b c))) else (\ e : Bool . a)))
(if (if (if (if b then (if true then c else true) else (if true then a else true)) then (if b then false else false) else ((c false) a)) then (\ d : (Bool -> (Bool -> Bool)) . (\ a : Bool . false)) else (\ b : (Bool -> Bool) . b)) then (\ a : (Bool -> (Bool -> Bool)) . (\ e : Bool . true)) else (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if false then false else true) then (a b) else true))))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((c b) (\ d : Bool . a))))
((if (if (\ d : (Bool -> Bool) . (\ d : Bool . c)) then (c false) else ((if c then b else false) b)) then (\ b : Bool . (if true then true else a)) else (\ a : (Bool -> Bool) . (true a))) (\ c : (Bool -> Bool) . (\ c : (Bool -> Bool) . c)))
(((if a then (\ e : Bool . a) else c) ((\ a : (Bool -> Bool) . c) (\ d : Bool . true))) (if (b true) then (if b then true else b) else (b (\ e : Bool . b))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then c else b)))
(if (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ b : Bool . a) then b else (a b))) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . c)) else (if (if b then c else a) then (\ a : Bool . c) else (if c then c else false)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . ((if true then true else b) (\ e : Bool . false)))
(if (if (if (if b then false else a) then (if b then c else c) else (false true)) then (((if true then c else c) c) ((true b) true)) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . b))) then (if (if a then (\ e : Bool . c) else (\ e : Bool . b)) then (if c then (if a then true else b) else (false false)) else (if false then (\ c : Bool . a) else false)) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . false)))
(\ c : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if (if (b b) then true else (\ e : Bool . b)) then (if (if c then c else false) then (if true then a else false) else (if b then c else a)) else (if a then a else (\ e : Bool . b))) (false a)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (((\ c : Bool . a) (if false then c else false)) (if a then (true b) else false)))
(if ((if (\ d : Bool . b) then false else (\ c : Bool . b)) ((c false) (\ e : Bool . c))) then (if ((if b then a else a) (b b)) then (b a) else (c b)) else ((\ c : Bool . a) (true false)))
(if ((if a then b else a) (true b)) then (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (if (if c then c else c) then (if (c b) then (\ c : Bool . true) else (true true)) else (if false then true else a))) else (if (false a) then (\ b : (Bool -> Bool) . b) else (if false then a else b)))
(if (if ((\ a : Bool . false) (\ a : (Bool -> Bool) . a)) then (\ d : (Bool -> Bool) . true) else ((if b then false else c) (\ b : Bool . b))) then (if (\ d : Bool . b) then (b true) else (if a then (\ b : Bool . b) else a)) else ((\ e : (Bool -> Bool) . (\ c : Bool . false)) (\ d : Bool . (if b then a else a))))
((\ e : (Bool -> Bool) . (false b)) ((\ e : Bool . (if c then c else true)) (\ a : (Bool -> Bool) . (false a))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ b : Bool . c) (\ d : Bool . (\ c : Bool . false))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (\ e : (Bool -> Bool) . (\ c : (Bool -> Bool) . true)) then ((if b then (if a then false else true) else (\ c : Bool . false)) (\ a : (Bool -> Bool) . (\ a : Bool . false))) else (if (\ b : Bool . a) then c else (b c))))
(if (((\ e : Bool . false) false) (\ b : (Bool -> (Bool -> Bool)) . (a false))) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if a then false else true)) else (\ b : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . ((\ b : Bool . b) (if a then b else b))))
((\ c : (Bool -> Bool) . (\ e : Bool . false)) (if ((a true) b) then (\ b : (Bool -> Bool) . (if (false true) then (if true then true else b) else (true false))) else (\ c : Bool . (if a then a else b))))
(if (if (if (if b then c else a) then b else a) then ((if (if c then c else a) then (if true then c else false) else a) (\ c : Bool . true)) else ((if a then false else c) (\ c : Bool . a))) then (\ c : ((Bool -> Bool) -> Bool) . ((a true) (\ c : Bool . b))) else ((b c) (if false then b else (if true then true else b))))
(((false (true true)) (\ a : (Bool -> Bool) . b)) (\ c : (Bool -> (Bool -> Bool)) . (\ a : Bool . c)))
((if (\ e : Bool . b) then ((if c then false else c) false) else (if c then c else true)) (if (if true then (if b then true else false) else c) then (c (if a then c else true)) else (if (if a then c else c) then (\ d : Bool . false) else (if c then a else b))))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (b b) then (\ c : (Bool -> Bool) . a) else (if c then b else c)))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if ((if b then false else true) false) then (\ a : Bool . b) else (if b then a else b)))
(if (if (if (\ b : (Bool -> Bool) . false) then (false false) else (if b then b else false)) then (b (\ c : Bool . true)) else (\ d : Bool . false)) then ((\ e : Bool . (if false then c else a)) (\ e : (Bool -> Bool) . (\ b : Bool . b))) else (if (if (\ e : (Bool -> Bool) . true) then (if (c c) then b else false) else (false b)) then (\ d : Bool . c) else (a b)))
(((c b) (\ e : Bool . a)) ((\ b : Bool . c) (c b)))
((\ c : (Bool -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . ((if c then b else c) b))) (((if c then c else a) (\ a : Bool . (if b then a else b))) (((\ e : Bool . true) (if b then b else c)) (c a))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> (Bool -> Bool)) . (b c)))
((\ b : (Bool -> Bool) . (if (c false) then (if c then b else false) else b)) (if (if a then c else false) then ((\ e : Bool . a) c) else (if c then c else true)))
(((if (false b) then ((if false then true else a) false) else (\ e : (Bool -> Bool) . a)) (\ a : ((Bool -> Bool) -> Bool) . (\ d : Bool . (if c then a else false)))) (if (\ e : (Bool -> Bool) . (false false)) then ((\ b : Bool . a) (a a)) else (\ d : (Bool -> Bool) . (\ d : (Bool -> Bool) . true))))
((if (a true) then (\ a : Bool . b) else ((if false then true else b) (if a then false else a))) (((\ a : Bool . false) a) (c true)))
(((if true then (if c then c else c) else (if c then false else a)) (if a then (\ a : Bool . b) else (if true then b else c))) (\ a : (Bool -> Bool) . (false (false b))))
(if ((if (c true) then (if b then a else a) else true) (false true)) then (\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : (Bool -> Bool) . (\ b : Bool . a))) else ((if (\ e : Bool . false) then (c b) else (\ b : Bool . c)) (\ b : (Bool -> Bool) . true)))
(if (((\ b : Bool . c) (false a)) (if (if (\ c : Bool . b) then (b false) else (c false)) then (\ e : Bool . c) else (\ e : Bool . a))) then (if (\ b : ((Bool -> Bool) -> Bool) . (if true then b else a)) then ((if false then c else true) (true (if false then a else a))) else (if (\ d : (Bool -> Bool) . (\ e : Bool . false)) then (if a then a else false) else (if a then b else c))) else ((true b) (\ a : (Bool -> Bool) . a)))
(if (\ d : (Bool -> Bool) . ((\ c : Bool . b) true)) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ e : Bool . false) then (c a) else (\ c : Bool . true))) else (if (\ c : Bool . true) then ((true c) b) else (\ e : Bool . false)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . (\ b : Bool . false)) ((if true then c else true) (\ e : Bool . false))))
((\ c : (Bool -> Bool) . (true false)) (if ((if c then c else (\ d : Bool . true)) (\ a : Bool . (b b))) then (\ a : (Bool -> Bool) . c) else (c c)))
(if (if (\ c : (Bool -> Bool) . (\ a : (Bool -> Bool) . false)) then (if (if (\ c : Bool . c) then (\ b : Bool . false) else true) then (if (false false) then b else (if true then b else false)) else (true b)) else (\ c : (Bool -> Bool) . (if a then false else true))) then (if (\ c : ((Bool -> Bool) -> Bool) . ((a true) b)) then ((if (\ c : Bool . true) then (if b then true else true) else false) (a (if true then true else a))) else ((false a) (false true))) else ((b (if c then c else b)) (\ d : (Bool -> Bool) . (if false then (if a then c else a) else (if a then c else c)))))
(if (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (if (if b then a else a) then (\ a : Bool . false) else a))) then (if (\ e : (Bool -> Bool) . b) then ((\ d : Bool . b) a) else (if a then true else (if true then b else a))) else ((\ b : Bool . c) (if false then true else c)))
((if (if (\ c : Bool . true) then (\ b : Bool . a) else false) then (\ e : (Bool -> Bool) . (\ e : Bool . c)) else (if (\ c : (Bool -> Bool) . (false c)) then (\ b : Bool . c) else (\ b : Bool . true))) (if (\ b : (Bool -> Bool) . (if true then true else b)) then ((if b then (c c) else b) (\ a : Bool . false)) else ((\ e : (Bool -> Bool) . (if c then c else b)) (true false))))
((\ e : (Bool -> Bool) . (if (\ b : Bool . true) then (\ c : Bool . b) else true)) (\ e : (Bool -> (Bool -> Bool)) . (a false)))
((\ d : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (if (if c then c else true) then (if a then true else b) else ((if a then true else true) (\ e : Bool . c)))) ((a (b true)) (if false then b else false)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (\ d : Bool . true) then (\ c : (Bool -> Bool) . (c b)) else (true true)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . ((c false) (a b)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if (if true then false else true) then (if a then true else (c false)) else (if c then (\ b : Bool . false) else (\ a : Bool . a))) then ((if (if a then c else true) then b else (\ a : Bool . a)) (if false then false else b)) else (if (if false then a else false) then (\ d : Bool . true) else (\ d : Bool . a))))
(if (\ b : (Bool -> Bool) . (\ a : Bool . b)) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . b) (\ d : Bool . a))) else (if (\ c : (Bool -> Bool) . false) then (\ c : Bool . false) else (a b)))
((\ d : ((Bool -> Bool) -> Bool) . (if (if a then c else a) then (if a then false else b) else (if c then a else a))) (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . (\ c : Bool . true))))
(if (\ a : (Bool -> Bool) . (\ c : Bool . (true c))) then (if (true a) then (\ a : (Bool -> Bool) . (\ b : (Bool -> Bool) . (if b then a else true))) else (\ e : ((Bool -> Bool) -> Bool) . (\ a : Bool . (if true then b else b)))) else (if (\ e : (Bool -> Bool) . (\ b : Bool . b)) then (\ e : (Bool -> Bool) . (c a)) else (if (a b) then a else (false false))))
(if (if (b a) then (\ b : (Bool -> Bool) . (if false then false else a)) else (\ c : Bool . true)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (if true then false else false))) else (\ a : (Bool -> Bool) . (\ e : Bool . a)))
((((c a) (\ e : Bool . b)) (if (b false) then (true c) else true)) ((if (if c then c else true) then (\ a : Bool . a) else (\ b : Bool . true)) (\ d : Bool . c)))
((\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then (b a) else (if c then true else b))) (if ((if b then true else b) (\ d : Bool . b)) then (if (if true then b else a) then (if a then (\ d : Bool . c) else false) else (a a)) else (if (a b) then (a b) else true)))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> Bool) . (if (\ c : Bool . false) then false else b))) (if (if (\ d : Bool . true) then (\ a : Bool . true) else (\ c : Bool . b)) then (if b then (if c then b else a) else false) else ((\ b : (Bool -> Bool) . a) (if (\ e : Bool . c) then (if b then false else a) else false))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (if (\ d : Bool . true) then (if b then b else b) else (if true then true else b))))
(((\ b : Bool . c) (false (if b then b else c))) (if (if false then false else (\ c : Bool . a)) then (c (\ a : Bool . a)) else (\ d : Bool . (true b))))
(if ((true b) (true b)) then (if (if (\ d : Bool . a) then (if a then a else c) else (c a)) then (if (if a then b else a) then c else (b false)) else (if true then a else a)) else ((if true then (if c then false else false) else c) ((a b) (\ c : Bool . a))))
(\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ d : (Bool -> Bool) . (\ a : Bool . c)))
(if (\ d : ((Bool -> Bool) -> Bool) . (if c then b else false)) then (\ d : ((Bool -> Bool) -> Bool) . (\ d : Bool . a)) else (if ((true b) (if true then true else a)) then ((true c) (if c then b else b)) else (if (if true then false else true) then (if c then b else b) else ((false true) (\ d : Bool . b)))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((if c then a else b) (c false)))
((\ b : ((Bool -> Bool) -> Bool) . (if a then b else false)) (\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . true)))
(if (\ e : ((Bool -> Bool) -> Bool) . (true a)) then ((a true) (\ b : Bool . (\ c : Bool . false))) else ((c c) ((if b then a else a) b)))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if c then (\ e : Bool . a) else (\ a : Bool . false)) (\ a : (Bool -> Bool) . (a a))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (true (c true))))
(if (\ b : ((Bool -> Bool) -> Bool) . ((if b then c else true) (\ e : (Bool -> Bool) . true))) then ((\ b : ((Bool -> Bool) -> Bool) . (\ e : Bool . (\ a : Bool . false))) (if (\ e : (Bool -> Bool) . b) then (\ c : (Bool -> Bool) . b) else (if c then true else false))) else (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . c)))
((\ c : (Bool -> Bool) . (if c then true else true)) (\ c : (Bool -> Bool) . (if a then (true a) else (if b then false else false))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((b c) (\ c : Bool . c)))
(((\ c : (Bool -> Bool) . (true (\ b : Bool . a))) ((if b then false else true) false)) (\ b : (Bool -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (if (\ c : Bool . true) then b else (\ b : Bool . b)))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ b : (Bool -> Bool) . (if (if true then false else c) then c else (if true then a else true))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if false then (c false) else (true c)) then (a c) else (\ e : (Bool -> Bool) . true)))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . (\ c : (Bool -> Bool) . ((\ d : Bool . false) a))))
(((\ c : Bool . b) (if c then (\ b : Bool . a) else b)) (if (c c) then (false false) else (\ e : Bool . false)))
((((\ b : Bool . c) (a (c true))) (\ b : (Bool -> Bool) . (false a))) ((if (\ a : Bool . true) then b else (b false)) (if ((\ c : Bool . b) c) then (if a then a else false) else (if (\ a : Bool . true) then (a false) else true))))
(if ((if true then true else b) ((\ a : Bool . a) false)) then (((false b) (\ b : Bool . false)) (\ b : (Bool -> Bool) . (c a))) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . a)))
(if (if (if false then (false c) else a) then (\ b : (Bool -> Bool) . true) else (\ d : (Bool -> Bool) . a)) then (\ a : (Bool -> Bool) . (c true)) else (((if c then false else c) (\ d : Bool . (\ b : Bool . b))) (if (if c then a else c) then (\ c : Bool . b) else (\ d : Bool . false))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ d : (Bool -> Bool) . (\ b : (Bool -> Bool) . (if true then b else b))))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if a then (\ c : Bool . false) else (\ a : Bool . false))) (if (if c then (\ a : Bool . a) else (false b)) then (\ d : (Bool -> Bool) . (true (\ c : Bool . false))) else (c b)))
(\ d : (((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) -> (Bool -> (Bool -> Bool))) . ((\ d : Bool . false) (b a)))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (c c)) then ((\ a : Bool . true) (\ d : Bool . c)) else ((c c) (false a))))
(if (if (\ c : Bool . false) then (\ a : Bool . (a c)) else (\ d : (Bool -> Bool) . false)) then ((\ e : Bool . (if c then a else b)) (if a then (\ a : Bool . a) else (\ e : Bool . true))) else (if ((if (a true) then true else (\ d : Bool . c)) (\ b : Bool . true)) then (if (\ b : Bool . true) then (\ c : Bool . a) else c) else (if (true a) then (c true) else (if (if a then b else false) then (a true) else (false a)))))
(if (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if true then c else b) then b else (false a))) then ((a (\ e : Bool . b)) (if (c false) then a else (if b then c else b))) else (if (a b) then (c b) else (\ e : Bool . c)))
(if ((\ b : Bool . false) (\ d : Bool . a)) then ((\ e : (Bool -> Bool) . a) (if a then a else c)) else (\ b : (Bool -> Bool) . (\ d : Bool . (if c then false else b))))
((if (\ e : (Bool -> Bool) . (\ c : Bool . false)) then (c (\ a : Bool . a)) else ((if b then true else true) b)) ((if (\ b : Bool . false) then true else b) (true (if b then true else a))))
(\ e : ((((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ b : Bool . a) then (\ e : ((Bool -> Bool) -> Bool) . (if (\ c : Bool . true) then true else (c a))) else ((if (if c then a else a) then (if false then a else b) else c) (\ b : Bool . b))))
(if (\ e : (Bool -> Bool) . (if a then true else false)) then (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : Bool . (\ b : Bool . c)) (\ c : Bool . c))) else (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((if c then a else true) c)))
(\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ e : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ a : (Bool -> Bool) . (\ a : Bool . c))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if b then (\ a : Bool . true) else (if false then a else a))))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : Bool . b)) then (if (if (false a) then (\ c : Bool . a) else (\ e : (Bool -> Bool) . a)) then (a true) else (\ d : (Bool -> Bool) . false)) else (if ((if (\ d : Bool . b) then (if b then a else b) else (false false)) (\ b : Bool . true)) then (if (if a then true else false) then (if a then true else true) else (c (\ c : Bool . b))) else (if (\ d : Bool . true) then (true b) else (a c))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> (Bool -> Bool)) . (if b then (true true) else (\ b : Bool . b))))
(if (if (\ d : Bool . a) then (if true then b else a) else (\ c : (Bool -> Bool) . (\ b : Bool . c))) then (if (\ d : (Bool -> Bool) . (if false then true else c)) then (if (if c then c else c) then (if b then b else false) else a) else ((c b) (if false then b else c))) else (\ c : (Bool -> Bool) . (\ d : Bool . a)))
(\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if ((if c then b else b) a) then (true true) else (if a then true else false)) then (if (\ c : Bool . true) then (if true then true else b) else (false true)) else (if (true (a true)) then (\ b : (Bool -> Bool) . a) else (a (b a)))))
(if (\ a : (Bool -> Bool) . ((if a then true else true) (\ b : Bool . true))) then (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((\ a : Bool . c) (\ b : Bool . c))) else (\ b : (Bool -> (Bool -> Bool)) . (false b)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . b)))
((\ e : (Bool -> Bool) . (a false)) (if (\ a : (Bool -> Bool) . (if b then true else false)) then (if (true a) then (a c) else (if c then a else false)) else (if (\ c : Bool . a) then (\ a : Bool . false) else (if (if b then a else a) then (false c) else (if c then false else true)))))
(\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if ((\ e : Bool . true) (if a then false else true)) then (if c then b else true) else (\ e : Bool . c)) ((true c) (if true then (\ b : Bool . c) else (a c)))))
(if (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (true c)) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ b : Bool . b) then a else (true b))) else (((c true) a) ((b true) true)))
(((if (if b then b else false) then b else b) (\ a : Bool . (if false then a else a))) (if (\ e : Bool . false) then (if (\ a : Bool . a) then false else false) else (\ e : (Bool -> Bool) . (\ a : Bool . a))))
((((c (\ b : Bool . c)) (if c then (if true then a else b) else c)) (true true)) (if (c a) then (if false then b else a) else (\ e : (Bool -> Bool) . true)))
(if (\ e : (Bool -> Bool) . (b a)) then ((if (\ d : Bool . a) then (if false then c else true) else (a b)) (\ c : (Bool -> Bool) . (if (true c) then b else false))) else ((\ b : (Bool -> Bool) . (if (if false then c else true) then (false b) else (false false))) (if (\ b : Bool . c) then (b (if c then b else b)) else (true b))))
((\ c : ((Bool -> Bool) -> Bool) . (\ d : Bool . c)) ((((a b) c) ((b a) (\ b : Bool . b))) (if (if (\ e : Bool . false) then (true b) else (c b)) then (\ e : Bool . b) else (if (\ b : Bool . false) then (\ b : Bool . a) else c))))
(if (\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . ((if false then (if false then c else c) else (\ e : Bool . a)) (if a then (\ d : Bool . c) else (if a then c else a)))) then (if (if c then false else true) then (if true then a else c) else (if c then true else true)) else (if (if b then a else true) then (\ d : Bool . (if b then false else b)) else (if false then c else b)))
((\ b : (Bool -> (Bool -> Bool)) . ((if (a false) then true else (true true)) (c c))) (\ c : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ c : Bool . a))))
(\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ e : Bool . (a false)) then (\ c : Bool . c) else ((if true then a else false) (if a then b else b))))
((\ d : (Bool -> (Bool -> Bool)) . (\ b : Bool . (a true))) (if (if b then true else a) then (c a) else (\ a : Bool . (if false then b else b))))
(\ e : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ e : Bool . b) then (if c then a else true) else (c false))))
(if (if (if c then (\ a : Bool . a) else b) then ((if false then c else b) false) else (\ b : Bool . (c a))) then ((if false then true else c) (\ d : Bool . true)) else (if (if (if (if b then c else false) then (false c) else false) then (if (c b) then (true false) else b) else (false b)) then (a (\ a : Bool . true)) else (true (\ d : Bool . c))))
(if ((if (\ d : Bool . false) then c else (\ d : Bool . c)) (true false)) then ((\ d : (Bool -> Bool) . (if c then (if c then b else a) else (if true then true else a))) (if (\ d : (Bool -> Bool) . (if true then true else c)) then ((if false then b else a) (if a then c else c)) else (\ a : Bool . true))) else (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (if (\ a : Bool . true) then (if b then c else b) else (\ d : Bool . false))))
((\ d : (Bool -> Bool) . (c true)) (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (if c then b else false))))
((if (\ d : (Bool -> Bool) . ((\ a : Bool . true) b)) then ((if c then false else true) (a (if b then b else true))) else (\ b : (Bool -> Bool) . (if a then c else true))) (if (if c then c else c) then (\ e : (Bool -> Bool) . (\ d : Bool . a)) else (\ a : Bool . true)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool))) . ((\ e : Bool . b) (if (\ e : Bool . b) then (\ d : Bool . c) else b)))
(\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : Bool . (a b))))
(if (if (\ d : (Bool -> Bool) . (if a then b else false)) then (\ b : (Bool -> Bool) . a) else (if (if c then (if a then c else a) else b) then (\ c : (Bool -> Bool) . c) else (\ d : Bool . c))) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : Bool . true)) else (if (if (if c then c else b) then (\ b : Bool . false) else c) then (\ c : Bool . c) else (if a then (b c) else (if b then c else false))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if b then (\ e : Bool . b) else (true false)) (if (\ d : Bool . false) then (c false) else (true a))))
((\ e : (Bool -> (Bool -> Bool)) . (if b then a else b)) (if (if (true b) then false else c) then (if false then a else b) else (c a)))
(if (((if b then a else true) (if (c a) then a else (\ a : Bool . a))) ((if a then (a b) else a) (if (a a) then c else a))) then (((true c) (\ b : Bool . a)) (\ b : Bool . b)) else (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ a : Bool . b))))
(if (((if true then c else true) ((if b then b else false) b)) (\ e : Bool . c)) then (\ e : (Bool -> Bool) . (\ a : Bool . c)) else (if (if (false c) then false else (if a then true else a)) then (if b then (\ c : Bool . false) else false) else ((a b) (b false))))
(\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (((a false) (\ e : Bool . (\ e : Bool . c))) (c c)))
((if (\ e : Bool . true) then (a b) else (false a)) ((if false then false else b) (a c)))
(if (if (\ b : Bool . a) then (\ d : Bool . a) else (if a then true else (b a))) then (\ c : (Bool -> Bool) . (\ d : Bool . b)) else (if (c b) then (\ e : (Bool -> Bool) . a) else (b c)))
(((c b) (a c)) (\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (a true) then b else (\ c : Bool . b))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . ((c b) (if a then true else b))))
(if ((\ d : Bool . b) (if (false c) then (\ d : (Bool -> Bool) . (false b)) else ((\ d : Bool . a) a))) then (\ d : (Bool -> (Bool -> Bool)) . ((\ c : Bool . a) (if b then false else b))) else ((\ d : Bool . false) (\ e : Bool . (if b then false else true))))
((\ c : (Bool -> (Bool -> Bool)) . (if a then false else false)) (\ a : (Bool -> Bool) . (b b)))
(if (\ c : (Bool -> Bool) . (\ a : Bool . c)) then (\ d : ((Bool -> Bool) -> Bool) . (\ a : Bool . false)) else ((c false) (\ d : (Bool -> Bool) . (if false then c else true))))
(((\ c : (Bool -> Bool) . (if false then c else true)) (\ d : (Bool -> Bool) . true)) (\ d : (Bool -> Bool) . (\ a : Bool . true)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (a true) then (if false then false else b) else (\ e : Bool . c)))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((if b then c else true) (\ d : Bool . (a c))))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . ((if (c false) then (\ e : Bool . false) else (\ d : Bool . false)) (if c then b else true)))
(if (if (if true then true else a) then (if true then b else c) else (if b then true else true)) then (if (false c) then (if (\ d : Bool . b) then (b (if true then b else a)) else (\ e : Bool . false)) else (\ d : (Bool -> Bool) . (\ d : Bool . b))) else (\ c : (Bool -> Bool) . ((\ b : Bool . a) (if c then c else c))))
(((\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . a)) (\ a : (Bool -> Bool) . (\ c : Bool . false))) (\ b : (Bool -> (Bool -> Bool)) . (if a then b else true)))
(if (if (b false) then (false b) else (\ c : Bool . false)) then (\ e : (Bool -> Bool) . (c false)) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (((a b) false) (\ b : Bool . (true b)))))
((\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (true c))) ((\ e : Bool . true) (true b)))
(((if ((if b then a else false) (if c then true else a)) then (false b) else (if a then c else true)) ((if (b c) then b else a) (if b then false else c))) ((false b) (\ c : (Bool -> Bool) . true)))
(if (if (\ d : (Bool -> Bool) . a) then ((if false then b else true) (if c then true else a)) else (\ b : Bool . c)) then (if (true false) then (if a then false else b) else (\ c : Bool . c)) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (true c))))
((\ a : (Bool -> (Bool -> Bool)) . (b c)) ((\ d : Bool . a) (if c then true else c)))
(if (if ((a a) (\ c : Bool . true)) then ((if b then (\ b : Bool . c) else (\ c : Bool . c)) (if b then true else false)) else (\ e : (Bool -> Bool) . c)) then (if (if (\ b : Bool . b) then ((if a then true else b) (\ c : Bool . false)) else (if c then b else true)) then (\ b : (Bool -> Bool) . (true true)) else ((\ a : Bool . c) (\ a : Bool . false))) else (\ c : (Bool -> Bool) . ((\ c : Bool . true) false)))
(if (\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if ((if true then c else c) (true true)) then ((b false) (if a then a else true)) else (if c then c else (\ d : Bool . a)))) then ((b false) (\ d : Bool . a)) else (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (a a)))
(if (\ e : ((Bool -> Bool) -> Bool) . (\ d : (Bool -> Bool) . (if (if a then a else c) then c else b))) then (if (if b then b else (if false then b else b)) then ((\ c : Bool . (if b then a else true)) (if false then a else a)) else (\ b : (Bool -> Bool) . (a a))) else (if (((true true) c) (if a then a else b)) then (if (if c then a else c) then b else (b false)) else (if false then a else false)))
(\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (a c) then (if true then b else c) else (\ c : (Bool -> Bool) . a)) then (\ a : (Bool -> (Bool -> Bool)) . ((\ c : Bool . b) (\ e : Bool . false))) else (\ c : Bool . true)))
(if (if (if a then b else false) then (\ a : Bool . c) else (a true)) then (\ b : (Bool -> Bool) . (\ d : (Bool -> Bool) . (\ c : Bool . (if b then false else true)))) else (if ((\ c : (Bool -> Bool) . (\ a : Bool . c)) (if true then true else true)) then (if (if true then (b b) else a) then (\ d : Bool . false) else (if (if true then true else true) then c else (\ a : Bool . b))) else ((if (\ c : Bool . c) then b else c) (true a))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (\ d : (Bool -> Bool) . (true (\ a : Bool . c))))
(\ a : ((((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ d : ((Bool -> Bool) -> Bool) . (if (c true) then (if (if c then c else true) then (b b) else c) else ((a a) (true b)))))
(if (\ b : (Bool -> Bool) . (if (if true then false else c) then c else (if a then b else c))) then ((b (if false then false else b)) (if false then a else c)) else ((c a) (if a then (true true) else false)))
(if ((if (b c) then (true false) else (\ e : Bool . true)) (\ d : ((Bool -> Bool) -> Bool) . (if a then a else false))) then (\ e : (Bool -> Bool) . (b (\ e : Bool . true))) else ((if (\ b : (Bool -> Bool) . true) then (if false then b else false) else (if b then c else true)) (\ a : (Bool -> Bool) . (b b))))
((if (true (\ a : Bool . false)) then (\ b : Bool . a) else (if true then a else true)) (if (\ b : Bool . b) then (b true) else (a (\ d : Bool . true))))
(\ a : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (if (if b then a else a) then (\ d : (Bool -> Bool) . c) else (\ a : (Bool -> Bool) . (if c then a else true))))
((if (\ b : (Bool -> Bool) . (\ a : Bool . c)) then (b c) else (if (if c then true else true) then (if a then true else c) else (\ d : Bool . b))) (\ e : (Bool -> (Bool -> Bool)) . (if (\ c : Bool . b) then b else (b a))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (if (\ e : Bool . (false false)) then (if true then true else c) else (if c then true else false)))
((\ d : (Bool -> Bool) . (\ b : (Bool -> Bool) . (\ d : Bool . b))) ((false false) (c true)))
(if (if (\ c : (Bool -> Bool) . b) then (\ d : Bool . b) else (if true then true else true)) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (b a))) else ((if (if (if b then b else true) then true else true) then (b c) else (\ b : Bool . c)) ((b true) (if true then b else false))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ d : Bool . c) then (\ e : (Bool -> Bool) . b) else (\ a : Bool . false)))
((\ e : (Bool -> Bool) . (c (\ e : Bool . false))) (\ e : (Bool -> (Bool -> Bool)) . (\ a : Bool . false)))
(if (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (a a)) then ((true b) (if true then (\ c : Bool . true) else (false c))) else (\ c : (Bool -> Bool) . (\ e : Bool . false)))
(((false (if c then a else b)) (c (a true))) ((\ d : (Bool -> Bool) . (\ b : Bool . true)) (\ a : ((Bool -> Bool) -> Bool) . (\ b : Bool . (b c)))))
(((if (if b then a else a) then true else (if false then c else false)) (\ b : (Bool -> Bool) . (if c then (if false then false else c) else a))) (\ d : (Bool -> (Bool -> Bool)) . (\ c : Bool . false)))
(\ a : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((\ b : (Bool -> Bool) . false) (c b)))
(if ((if (if b then true else a) then (\ c : Bool . (if b then a else c)) else (\ d : Bool . b)) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . c))) then (\ d : (Bool -> Bool) . (b a)) else (if (\ d : Bool . false) then (if (a false) then c else (if a then b else a)) else (true true)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (\ e : (Bool -> (Bool -> Bool)) . (if true then b else (true false))))
((\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (true false))) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . ((if a then false else c) (if a then true else false)))))
(\ b : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ e : (Bool -> Bool) . (\ a : (Bool -> Bool) . (true true))) then (b (a true)) else ((\ a : Bool . b) (a true))))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . ((\ d : Bool . false) true)))
((\ b : (Bool -> (Bool -> Bool)) . (if (if c then b else b) then ((\ e : Bool . false) (if b then a else a)) else (true a))) ((if (if a then b else false) then a else (\ a : Bool . b)) (a (\ b : Bool . false))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((b false) (if c then a else c)))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ a : Bool . a) (if (\ c : (Bool -> Bool) . (if a then false else a)) then ((\ d : Bool . a) c) else ((\ c : Bool . true) true))))
(\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (((false false) (a true)) (\ d : (Bool -> Bool) . (if b then (if b then b else b) else (\ a : Bool . a)))))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if ((\ b : Bool . (\ e : Bool . c)) (\ b : Bool . (\ e : Bool . false))) then (\ d : (Bool -> Bool) . (true b)) else (\ b : (Bool -> Bool) . (if false then a else false))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((b b) (\ a : Bool . a)))
(if ((if true then false else true) (\ c : (Bool -> Bool) . true)) then (\ d : (Bool -> Bool) . (\ c : Bool . true)) else (if (\ c : (Bool -> Bool) . (\ c : (Bool -> Bool) . b)) then (\ a : Bool . (if true then b else a)) else (((if a then true else b) (c a)) (\ c : Bool . b))))
((\ b : (Bool -> Bool) . (\ e : (Bool -> Bool) . (\ a : Bool . a))) ((true (if a then false else false)) ((if true then b else b) (if true then c else b))))
((if (if false then c else b) then (\ d : Bool . false) else (if (\ e : Bool . a) then c else (\ c : Bool . c))) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((if b then a else true) b)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> Bool) . (\ b : (Bool -> (Bool -> Bool)) . (\ e : Bool . (\ d : Bool . b)))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (if (b false) then (\ a : Bool . true) else (true c))))
(\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if ((\ c : (Bool -> Bool) . (true b)) (\ a : Bool . b)) then (if (c (if true then c else false)) then (\ b : (Bool -> Bool) . (\ d : Bool . false)) else (if false then false else c)) else ((\ a : (Bool -> Bool) . (\ d : Bool . true)) (a b))))
(if (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (a (\ b : Bool . false))) then (if (\ e : Bool . (\ b : Bool . false)) then (if (\ c : Bool . false) then (c true) else b) else (if a then (if c then a else b) else (if a then false else false))) else (\ b : ((Bool -> Bool) -> Bool) . (\ c : (Bool -> Bool) . a)))
(\ a : ((((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if false then a else c) (\ d : Bool . false)))
((\ e : ((Bool -> Bool) -> Bool) . ((\ e : Bool . false) (if a then (if false then a else b) else b))) (if (if (if b then c else b) then (if false then (false true) else a) else (c a)) then (\ b : Bool . (false b)) else ((a b) true)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if ((\ b : Bool . c) false) then (if a then (if true then a else false) else true) else ((\ d : Bool . a) false)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (\ d : (Bool -> Bool) . (\ d : Bool . c)) then ((\ e : Bool . a) b) else (false false)))
(((if b then false else (\ d : Bool . true)) (((if true then c else false) (false b)) (c false))) ((c (if c then true else b)) (\ e : Bool . true)))
(if ((true b) (if c then a else false)) then (if (\ a : (Bool -> Bool) . (\ b : Bool . true)) then (\ a : Bool . (a b)) else (if c then (\ c : Bool . a) else true)) else (\ b : ((Bool -> Bool) -> Bool) . (if b then c else false)))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((if (b a) then false else true) (c b)))
(\ a : ((((Bool -> Bool) -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ a : (Bool -> (Bool -> Bool)) . (b false)))
(((if (false false) then (b c) else (\ a : Bool . b)) (\ e : Bool . (c a))) (if (if c then (c b) else false) then ((if c then a else c) (\ a : Bool . false)) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (c true))))
((\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if b then (if true then b else false) else a)) (((if c then false else true) (if true then b else false)) (if (if false then a else b) then (\ d : Bool . b) else (\ e : Bool . true))))
(\ c : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (b b)))
(if (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : Bool . a)) then (if (\ e : Bool . true) then (c c) else (if true then (\ a : Bool . false) else true)) else (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if true then (\ d : Bool . a) else (a c))))
((if (false true) then (\ a : Bool . true) else (\ e : Bool . b)) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . (c true))))
(if (\ b : (Bool -> Bool) . (if ((if false then true else c) true) then (\ e : Bool . (if false then b else c)) else (if a then a else a))) then ((if false then b else (b a)) (if c then true else (\ b : Bool . b))) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (true (\ a : Bool . b))))
(if (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((if true then c else false) (\ d : Bool . false))) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (\ e : Bool . false) then c else (a c)) (\ e : Bool . b))) else (if (\ d : Bool . (if a then c else false)) then ((if c then b else (if true then true else a)) (if a then true else false)) else (if (if b then c else false) then (if (c false) then (\ a : Bool . a) else (\ e : Bool . true)) else (\ e : Bool . false))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if (if c then (if c then true else b) else true) then (if false then true else b) else (if (\ b : Bool . a) then (a false) else (if b then false else false))) ((c true) b)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((if b then (if b then c else true) else c) (\ b : (Bool -> Bool) . (\ b : Bool . a))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((false b) (if true then false else a)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ e : (Bool -> (Bool -> Bool)) . (c (\ c : Bool . a))))
(if (\ c : (Bool -> Bool) . (if true then c else a)) then (if ((\ a : Bool . false) c) then (if (if false then c else a) then c else (false a)) else ((a b) true)) else ((if false then b else (if false then true else true)) (((false false) c) (\ b : Bool . c))))
((\ d : (Bool -> Bool) . (a true)) ((if false then c else (\ d : Bool . b)) ((\ e : (Bool -> Bool) . true) (if (\ b : Bool . c) then c else true))))
(if (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if c then false else false) then true else (\ c : Bool . c))) then ((\ e : (Bool -> Bool) . false) ((true false) (if false then a else false))) else ((\ c : (Bool -> Bool) . a) (if (b true) then (b c) else (c false))))
(\ e : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ e : Bool . c) then (\ d : (Bool -> Bool) . (\ a : Bool . a)) else (if false then b else true)))
(if ((true a) (a a)) then (if (\ d : (Bool -> Bool) . (\ d : (Bool -> Bool) . (\ b : Bool . c))) then (\ b : (Bool -> Bool) . (false b)) else (\ a : (Bool -> Bool) . (if a then b else a))) else (\ a : (Bool -> (Bool -> Bool)) . (false b)))
(((true a) (\ b : Bool . (\ a : Bool . c))) ((\ e : (Bool -> Bool) . false) (\ e : Bool . b)))
(if (if ((\ b : Bool . a) (if false then (if false then b else b) else true)) then (if (\ d : (Bool -> Bool) . (if a then true else c)) then (if (if b then true else a) then b else true) else (if (\ a : Bool . c) then (\ e : Bool . b) else (true b))) else (if (\ d : Bool . true) then ((if true then a else c) false) else (\ d : (Bool -> Bool) . (c c)))) then (if (\ d : Bool . b) then (a true) else (if c then b else true)) else ((true c) (a a)))
(if (if (((\ d : Bool . b) b) (\ c : Bool . a)) then (if c then b else a) else ((if true then c else true) c)) then ((false b) (c false)) else (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . ((if b then c else b) false)))
(if (\ d : (Bool -> Bool) . (if false then b else b)) then (if (false (if c then c else a)) then (if true then false else false) else (true true)) else (if ((if a then false else b) c) then (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . false)) else (if (if (\ a : Bool . false) then (c b) else a) then (if (\ e : Bool . c) then (a true) else true) else (if (\ c : Bool . false) then (true c) else true))))
((((if b then a else a) c) (if (a true) then (\ e : Bool . a) else (a c))) (if (\ e : (Bool -> Bool) . (b (\ a : Bool . a))) then ((if false then true else a) (\ a : (Bool -> Bool) . (\ c : Bool . c))) else (if (\ d : Bool . b) then (\ b : Bool . a) else true)))
(if (if ((\ c : (Bool -> Bool) . (b true)) (true b)) then (\ b : (Bool -> Bool) . true) else (\ b : (Bool -> Bool) . (true false))) then (\ b : (Bool -> Bool) . (true (\ c : Bool . c))) else (\ d : (Bool -> Bool) . (\ c : (Bool -> Bool) . b)))
(((\ b : (Bool -> Bool) . (b a)) (\ c : Bool . (\ c : Bool . a))) (\ b : (Bool -> Bool) . (\ b : (Bool -> Bool) . a)))
(if (if (c b) then (\ c : Bool . true) else (\ b : Bool . a)) then (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (b false)) else (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ e : Bool . (\ a : Bool . a)) (\ c : Bool . true))))
(if ((\ a : Bool . false) (if c then a else c)) then (if (if (c b) then (\ a : Bool . a) else false) then (if b then false else c) else (\ b : Bool . b)) else (\ d : (Bool -> Bool) . (false false)))
((\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (((true true) c) (\ d : Bool . (if c then a else true)))) (if (a true) then (\ d : Bool . b) else (if false then a else (false false))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ a : ((Bool -> Bool) -> Bool) . (if a then c else a)) then (\ d : (Bool -> Bool) . (b false)) else (if (if false then false else (if b then true else c)) then (b true) else (if (c false) then true else (if false then true else true)))))
(if (if (\ b : Bool . (false true)) then (false false) else (if c then (if b then true else a) else true)) then (if ((\ b : Bool . c) b) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (b a)) else ((\ e : Bool . false) (\ e : Bool . b))) else (\ d : ((Bool -> Bool) -> Bool) . (\ b : (Bool -> (Bool -> Bool)) . (true true))))
(if (if (\ e : (Bool -> Bool) . (\ c : (Bool -> Bool) . c)) then (if (if true then true else false) then false else (c a)) else ((a b) (\ d : Bool . c))) then (\ b : ((Bool -> Bool) -> Bool) . (if (if b then b else true) then (\ e : Bool . (\ c : Bool . false)) else (if c then true else a))) else (((true b) a) (b b)))
(if ((if true then false else a) (a b)) then (((\ a : Bool . a) (\ d : Bool . c)) (if (\ b : Bool . true) then (\ d : Bool . c) else (c a))) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (a (if c then false else false))))
(if (if ((if a then b else false) true) then (\ d : Bool . true) else (\ d : Bool . false)) then (\ d : (Bool -> Bool) . (if b then true else true)) else (if ((b false) (if false then (if b then a else a) else c)) then (\ a : Bool . (if true then c else false)) else (if (\ e : Bool . c) then c else b)))
(((if true then (a a) else (\ c : Bool . c)) (\ a : (Bool -> Bool) . (\ d : Bool . a))) ((if a then c else false) (if (if b then false else false) then ((false b) (if a then c else false)) else (\ c : (Bool -> Bool) . true))))
((\ c : (Bool -> Bool) . (if false then c else true)) ((if b then b else (if true then false else true)) (if (c true) then true else (\ c : Bool . true))))
(\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (b a)))
(if (if ((true c) (\ e : Bool . a)) then (if true then a else false) else (\ d : Bool . a)) then ((\ b : (Bool -> (Bool -> Bool)) . (b c)) ((if c then c else b) (b b))) else (if (true true) then (if a then (if a then c else a) else (\ e : Bool . a)) else ((false c) true)))
(\ c : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> (Bool -> (Bool -> Bool))) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ d : Bool . c) then (c b) else (\ a : Bool . a))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (if a then true else (true true))))
(\ e : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . ((\ e : Bool . c) (a false)))
(if ((if a then c else b) (if false then true else a)) then (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if ((if c then b else c) b) then (false b) else (b b))) else (\ c : ((Bool -> Bool) -> Bool) . (if a then c else c)))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if (b true) then (\ a : Bool . true) else (\ e : Bool . true)) then (\ b : (Bool -> Bool) . c) else (if c then true else b)))
((if (if false then true else a) then (\ d : Bool . a) else (\ d : (Bool -> Bool) . (\ e : Bool . true))) (if (true (\ d : Bool . c)) then (\ a : (Bool -> Bool) . (\ c : Bool . (true true))) else ((if c then true else true) (if c then (b a) else (\ a : Bool . c)))))
(((\ e : (Bool -> Bool) . (if c then true else true)) (if (if false then false else a) then true else b)) (((if a then c else true) (false a)) (\ d : (Bool -> Bool) . (\ b : Bool . a))))
((((b a) (\ c : Bool . c)) (if false then c else true)) (\ d : (Bool -> Bool) . (if false then (true true) else c)))
(if ((if true then b else (\ d : Bool . c)) (if (if (\ b : Bool . false) then (c false) else (if c then a else true)) then (a false) else (if b then b else b))) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (b (if false then false else false)) then (\ a : (Bool -> Bool) . b) else (if true then false else c))) else (\ a : ((Bool -> Bool) -> Bool) . (\ b : Bool . b)))
(\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (if false then a else c) then (\ d : (Bool -> Bool) . (\ b : Bool . b)) else (false a)))
(\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : (Bool -> (Bool -> Bool)) . (if (if a then true else (false c)) then (\ c : Bool . true) else (a true))))
((\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (b b)) ((\ d : Bool . (b c)) (if (if c then a else a) then (false b) else false)))
(if (\ e : (Bool -> Bool) . (if c then a else b)) then (if (\ c : Bool . true) then (c b) else (\ c : Bool . false)) else ((if (if true then a else a) then (\ e : (Bool -> Bool) . (\ c : Bool . b)) else (if (a false) then (true c) else a)) (if true then c else (if false then c else a))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . (\ a : (Bool -> Bool) . (if a then (c false) else a))))
(if (if (\ e : (Bool -> Bool) . (if true then a else a)) then (if (b b) then (b false) else (a b)) else (\ a : (Bool -> Bool) . (c false))) then ((if b then c else c) ((\ a : Bool . c) (true false))) else (\ d : (Bool -> (Bool -> Bool)) . (true (c c))))
((\ b : ((Bool -> Bool) -> Bool) . (b (\ e : Bool . false))) (\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ a : (Bool -> Bool) . (if (\ d : Bool . c) then a else c))))
(if ((\ c : Bool . true) (\ b : (Bool -> Bool) . (a b))) then (\ b : ((Bool -> Bool) -> Bool) . (b false)) else (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if true then a else b)))
((\ a : (Bool -> (Bool -> Bool)) . (if c then c else a)) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (\ c : Bool . a)))))
(if (\ a : ((Bool -> Bool) -> Bool) . ((if b then c else false) (\ c : Bool . (true true)))) then (if (if true then c else a) then (b a) else (true true)) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (c false) then (if a then b else b) else (\ b : Bool . c))))
((if (true a) then (b a) else (\ e : Bool . (\ b : Bool . a))) (\ a : (Bool -> Bool) . (\ e : Bool . c)))
(if ((\ c : (Bool -> Bool) . (\ e : Bool . a)) (if (if (true a) then (if a then a else false) else (\ c : Bool . false)) then (false a) else (\ e : Bool . true))) then (if ((\ d : Bool . true) c) then (b false) else ((if c then c else true) (a false))) else (\ e : (Bool -> Bool) . (if a then b else a)))
((if (if (\ c : Bool . false) then b else (b a)) then (\ b : Bool . c) else (b c)) ((\ b : (Bool -> Bool) . b) (if (\ b : Bool . false) then (if (if b then a else true) then (b false) else c) else (false false))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ d : (Bool -> Bool) . (if c then b else false)) ((if a then a else b) (false c))))
((if (true true) then (if c then false else a) else (if c then c else b)) (\ c : (Bool -> Bool) . (a false)))
((\ e : (Bool -> Bool) . (b true)) ((if true then c else c) (if false then true else a)))
((\ e : (Bool -> Bool) . (if true then (if c then true else b) else a)) ((\ b : (Bool -> Bool) . b) ((false false) b)))
(if (\ a : (Bool -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (\ a : Bool . b))) then (\ c : ((Bool -> Bool) -> Bool) . (\ d : (Bool -> Bool) . (\ b : Bool . true))) else (if (a c) then ((\ e : Bool . b) false) else ((a c) false)))
(if (if (if (if b then true else c) then (\ a : (Bool -> Bool) . (\ c : Bool . c)) else (true c)) then (if c then (\ b : Bool . c) else (\ b : Bool . b)) else ((\ c : (Bool -> Bool) . c) (if c then false else false))) then (((a c) (b false)) (\ c : (Bool -> Bool) . (if (a c) then (if true then false else true) else (true b)))) else (((if (if c then a else c) then (\ a : Bool . false) else b) ((c b) b)) (if ((if false then a else a) (\ e : Bool . true)) then (c b) else (c false))))
((\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then (if a then a else false) else (\ e : Bool . c))) (if (if (if (b b) then (\ b : Bool . a) else (a false)) then (b b) else (a a)) then ((false c) (\ a : Bool . c)) else ((\ e : Bool . a) false)))
(if (((if true then a else false) (b b)) (\ d : (Bool -> Bool) . (c a))) then (if (b (b false)) then ((if false then b else true) (if c then false else false)) else (\ b : Bool . false)) else (((b c) (\ d : Bool . a)) (if (if false then a else c) then c else true)))
(if (\ b : (Bool -> Bool) . (b c)) then (if ((b b) (if false then a else b)) then (if true then true else (if true then false else b)) else (if (if c then (\ a : Bool . c) else a) then (if true then false else b) else (\ b : Bool . c))) else ((if c then a else a) (if (\ b : Bool . c) then b else (if false then true else false))))
(if ((if b then (c false) else (\ a : Bool . false)) (\ a : Bool . false)) then ((if a then a else c) (true a)) else (if (b (\ c : Bool . c)) then (if c then b else c) else (\ d : Bool . c)))
(if ((if (\ a : Bool . c) then true else (a b)) (((if c then c else b) b) (\ a : Bool . b))) then (if ((if c then a else true) ((\ b : Bool . b) (if b then false else false))) then ((\ b : Bool . a) false) else (\ d : Bool . (b b))) else (if (\ a : Bool . (if c then false else a)) then ((\ e : Bool . false) b) else (if c then c else b)))
(((false (\ e : Bool . b)) (c b)) (if (\ c : Bool . (if false then false else c)) then (\ c : (Bool -> Bool) . (if c then (\ d : Bool . a) else false)) else (if (if a then a else true) then (\ b : (Bool -> Bool) . c) else (if false then c else a))))
(if ((if (b true) then true else (true b)) (c true)) then (if (if a then c else (if a then c else true)) then (\ c : Bool . false) else (false a)) else (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (\ a : Bool . true))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (if a then (true b) else c)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (c b)))
(((\ c : Bool . (if true then b else false)) (\ e : (Bool -> Bool) . a)) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (true c)))
(\ b : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((false c) true)))
(if ((if (if (if false then true else false) then (\ b : Bool . false) else (c c)) then ((\ d : Bool . c) false) else (true true)) ((if false then (a c) else b) (a a))) then (\ c : (Bool -> Bool) . (if false then true else true)) else ((if (b (a c)) then ((true b) b) else (\ e : (Bool -> Bool) . (c false))) ((false true) (\ d : Bool . true))))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if c then false else a) then true else (b b))) (if (\ d : (Bool -> Bool) . b) then (if (if b then (c b) else false) then (\ c : Bool . false) else (c true)) else (if (\ e : Bool . false) then (\ a : (Bool -> Bool) . true) else (false b))))
(if (\ e : ((Bool -> Bool) -> Bool) . (true (if true then c else true))) then ((if true then a else b) (false a)) else (((true (if true then false else false)) (\ c : Bool . c)) (if b then b else false)))
((if (\ d : Bool . (\ c : Bool . b)) then (if ((true a) (if false then c else b)) then (if c then (\ b : Bool . true) else c) else (\ c : Bool . false)) else (\ d : (Bool -> Bool) . (c c))) (if (true c) then (if (if a then false else true) then (if true then true else a) else b) else (if (\ b : Bool . false) then (\ b : Bool . b) else b)))
(if (\ c : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ c : Bool . (true b))) then (\ c : (Bool -> (Bool -> Bool)) . (if true then false else false)) else (if (\ d : (Bool -> (Bool -> Bool)) . (if b then b else a)) then (\ d : (Bool -> Bool) . true) else ((false b) c)))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> Bool) . ((if (false a) then a else b) (if false then c else false))))
(if (if (false c) then (if c then b else a) else (if b then a else true)) then ((true a) (c (if false then c else c))) else (\ a : (Bool -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (if a then true else false))))
((if (if c then c else true) then (if a then (\ d : Bool . b) else (b true)) else ((if b then b else true) (\ a : Bool . a))) (if (\ a : Bool . a) then (c b) else (\ d : Bool . true)))
(if (if (\ e : (Bool -> Bool) . (if true then a else false)) then ((\ a : Bool . false) (\ c : Bool . false)) else (if (\ e : Bool . a) then ((if c then false else b) true) else (\ a : (Bool -> Bool) . c))) then (\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (true (\ c : Bool . false))) else (if ((b a) (false false)) then (if c then false else b) else (c false)))
((if ((\ c : Bool . c) false) then (\ e : Bool . false) else (c (\ d : Bool . b))) (if (if (\ e : Bool . true) then (\ a : Bool . true) else b) then (\ b : Bool . true) else (c b)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . ((\ e : (Bool -> Bool) . (if true then false else (\ c : Bool . false))) (if (if a then c else true) then true else (false b))))
((\ d : ((Bool -> Bool) -> Bool) . (if false then a else false)) ((if ((\ e : Bool . true) (c b)) then (\ d : (Bool -> Bool) . (\ d : Bool . c)) else (if a then true else false)) (if (if b then true else c) then (\ d : (Bool -> Bool) . (\ d : Bool . false)) else ((if a then true else true) b))))
(if (\ e : (Bool -> (Bool -> Bool)) . (c (if false then a else false))) then (((c c) (\ c : Bool . (if true then false else c))) (\ b : (Bool -> (Bool -> Bool)) . (false false))) else ((if b then true else c) (a false)))
(if ((\ d : Bool . c) (if a then false else c)) then (if (if c then c else true) then (if false then false else true) else (\ b : Bool . (if true then true else c))) else (if ((false b) (\ b : Bool . (a b))) then ((false c) (if c then c else false)) else (if (false (if a then false else a)) then (if c then b else c) else (\ d : Bool . false))))
((\ e : (Bool -> Bool) . (\ b : (Bool -> Bool) . (if (false b) then (if true then a else a) else c))) (if (if true then false else (if true then false else a)) then (if (if true then false else true) then (\ d : Bool . b) else b) else (a b)))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (c a)) (\ a : (Bool -> (Bool -> Bool)) . (if (false b) then (if false then true else a) else a)))
(if (\ d : (Bool -> (Bool -> Bool)) . (if (\ e : Bool . a) then a else (false a))) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then true else (if b then c else false))) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> Bool) . (false true))))
((((true a) (true (if c then a else a))) (if (\ b : Bool . false) then (if b then false else c) else (c true))) ((\ a : Bool . a) (if a then true else b)))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ b : Bool . (if false then true else false)) then ((if true then c else c) (if c then b else b)) else (b true)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (if (if false then false else c) then (\ a : Bool . true) else (true false)) then (\ e : Bool . false) else (\ a : (Bool -> Bool) . (a true)))))
(if (if ((true c) (if false then b else false)) then ((\ d : Bool . true) (\ e : Bool . a)) else (if (\ c : Bool . a) then c else a)) then (if ((if false then (if c then true else c) else b) (if (\ e : Bool . c) then b else (\ c : Bool . false))) then ((\ a : Bool . false) false) else (if (a b) then (\ e : Bool . c) else (if c then c else true))) else ((if true then b else a) (\ e : (Bool -> Bool) . true)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : Bool . true) (if b then false else b)))
(((c b) (\ d : (Bool -> Bool) . (\ a : Bool . true))) ((if b then c else (if true then true else c)) (\ c : (Bool -> Bool) . (if b then b else c))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ e : Bool . c) (if (b b) then (c b) else b)))
(if (\ c : (Bool -> Bool) . (if (b c) then a else a)) then ((\ b : ((Bool -> Bool) -> Bool) . (\ e : Bool . false)) (false true)) else (if (\ b : Bool . false) then (\ e : Bool . b) else (\ d : (Bool -> Bool) . true)))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (((if true then c else a) (false b)) (if (if a then true else c) then (c a) else (b b))))
(\ d : (((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) -> (Bool -> Bool)) . (if (if false then a else true) then (\ c : (Bool -> Bool) . (b true)) else (if (if c then c else a) then c else (if c then b else false))))
(if (if (if true then c else c) then (\ a : Bool . c) else (c a)) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (c false)) else (if (\ e : Bool . (true b)) then (\ e : (Bool -> Bool) . b) else (false false)))
(if (if (\ e : Bool . false) then (\ b : Bool . false) else (b (if c then false else true))) then (\ e : (Bool -> Bool) . (if c then c else (if a then true else true))) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ b : Bool . c) then b else true)))
(if (if ((if c then true else true) (c true)) then (\ a : Bool . true) else (\ b : Bool . a)) then (((if true then false else b) (\ e : (Bool -> Bool) . (c c))) (if (b a) then (false false) else (\ d : Bool . a))) else (if (((if c then c else b) a) (\ d : Bool . c)) then (\ b : ((Bool -> Bool) -> Bool) . (\ b : Bool . b)) else (false b)))
(((b false) (\ b : (Bool -> Bool) . (if (true c) then a else (false false)))) ((\ d : (Bool -> Bool) . (if c then false else false)) ((if c then a else b) (c false))))
((((\ c : (Bool -> Bool) . (if false then a else b)) (false (a b))) (if (if false then b else true) then (\ c : (Bool -> Bool) . (if b then false else b)) else ((\ a : Bool . false) b))) ((b (if true then c else b)) (\ d : Bool . a)))
(if (((if a then true else true) (if b then c else c)) (if a then b else b)) then (if (if b then a else c) then (\ b : (Bool -> Bool) . (a false)) else (if (\ c : Bool . true) then (if true then c else true) else a)) else (if ((\ a : Bool . c) (if true then true else false)) then ((a (\ c : Bool . true)) (c (\ d : Bool . b))) else (if b then true else b)))
((if ((c true) true) then (if (\ c : Bool . b) then (if c then a else c) else (\ a : Bool . a)) else (\ d : (Bool -> Bool) . (\ b : Bool . false))) (((a a) (false false)) (if false then (\ c : Bool . a) else (b true))))
(if (if (a true) then ((if b then b else false) (\ c : Bool . false)) else (if c then false else c)) then ((if true then c else a) (if b then c else c)) else ((if (\ b : Bool . b) then c else (\ a : Bool . c)) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ a : Bool . a) then (true b) else a))))
((\ d : ((Bool -> Bool) -> Bool) . (if (if (\ d : Bool . b) then false else (\ d : Bool . c)) then (\ c : Bool . c) else ((if a then c else b) b))) (if (if a then (\ c : Bool . false) else (\ d : Bool . b)) then ((\ d : Bool . b) (if a then b else false)) else ((\ d : (Bool -> Bool) . (\ c : Bool . c)) ((\ b : Bool . false) c))))
(if (\ e : (Bool -> Bool) . (b true)) then (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (if c then false else a) then (if b then a else c) else (if false then true else (\ e : Bool . false)))) else (\ a : ((Bool -> Bool) -> Bool) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (b true))))
(if (\ a : (Bool -> Bool) . (if c then c else b)) then (if (if ((a false) (c false)) then (if a then false else true) else (a c)) then (if (\ d : Bool . c) then true else (\ d : Bool . b)) else ((c b) (if b then a else b))) else (if ((if b then c else c) true) then (\ a : Bool . c) else (\ e : (Bool -> Bool) . true)))
(if (if (if a then b else a) then (false b) else (if (if true then b else a) then true else (\ e : Bool . false))) then (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ d : Bool . a) (c c))) else (\ d : (Bool -> Bool) . (\ a : Bool . false)))
(if (if (\ e : (Bool -> Bool) . (if (if true then a else false) then true else c)) then (\ a : (Bool -> Bool) . (b a)) else ((\ a : Bool . a) (\ e : Bool . a))) then (\ b : (Bool -> Bool) . (\ c : (Bool -> Bool) . false)) else ((false true) (if b then (\ d : Bool . a) else a)))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ a : (Bool -> Bool) . (\ b : Bool . b)))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if true then (\ c : Bool . true) else (c true)) (if (if false then false else c) then (\ a : Bool . c) else false))))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . b)) (\ d : (Bool -> Bool) . (if c then false else c)))
((\ d : ((Bool -> Bool) -> Bool) . (if (false true) then c else a)) ((\ b : Bool . false) (\ b : (Bool -> Bool) . true)))
(if (\ d : (Bool -> Bool) . ((if c then c else c) true)) then (\ b : (Bool -> (Bool -> Bool)) . (true b)) else (if (if a then b else (\ b : Bool . a)) then (\ e : (Bool -> Bool) . (if b then c else false)) else (if (if c then (a b) else true) then (\ e : Bool . (if b then false else a)) else (\ a : Bool . false))))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (if b then (a true) else (if b then false else c))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if ((\ b : Bool . true) b) then (if b then b else c) else (\ a : Bool . c)))
(if (\ c : (Bool -> Bool) . (if (\ a : Bool . a) then (if b then false else true) else false)) then (if (\ a : (Bool -> Bool) . (b b)) then (if false then (false c) else (if true then c else c)) else (if a then a else a)) else ((\ e : Bool . (\ c : Bool . true)) (\ c : ((Bool -> Bool) -> Bool) . (\ c : Bool . (a true)))))
(if (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((if true then b else b) (if a then false else true))) then (\ c : (Bool -> Bool) . (b a)) else (if (if a then a else true) then (if b then (\ a : Bool . c) else false) else (\ e : Bool . (if c then c else true))))
((if ((\ a : (Bool -> Bool) . b) (a a)) then (if false then (\ b : Bool . b) else (\ d : Bool . b)) else (\ e : (Bool -> Bool) . (\ a : Bool . false))) ((c false) (false c)))
(if (\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (if (true false) then (true true) else (\ c : Bool . a)) then (if true then false else false) else (b false))) then (\ c : (Bool -> Bool) . (\ e : Bool . false)) else (if ((if c then b else (c b)) (\ e : Bool . a)) then (if (true (true false)) then (if false then false else true) else (a b)) else (if a then true else a)))
(\ a : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((\ a : (Bool -> Bool) . false) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (a c))))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if ((\ d : Bool . a) (if true then false else (if true then b else b))) then (b (if c then true else a)) else ((if a then b else b) (c false))))
((\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((if c then b else false) false)) (if (if false then b else true) then (if true then false else true) else (c true)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if ((true a) (\ c : Bool . false)) then (if (\ d : Bool . (if b then a else true)) then (if b then false else true) else (false false)) else (false (if false then c else b))))
(if (\ c : (Bool -> Bool) . ((if c then a else c) (\ b : Bool . false))) then (\ c : (Bool -> Bool) . (\ c : Bool . c)) else ((\ e : Bool . b) (b false)))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ d : (Bool -> (Bool -> Bool)) . (if (if true then true else false) then (if true then b else b) else (\ a : Bool . b))))
(if (((if c then c else b) false) (if ((\ a : Bool . false) b) then (if a then (c true) else a) else (if (if false then b else b) then c else (a true)))) then (if ((true false) (\ c : Bool . true)) then (if c then false else true) else (\ c : (Bool -> Bool) . (\ d : Bool . false))) else (if (if false then (a false) else (\ c : Bool . c)) then (if b then b else c) else (true true)))
(if (if (\ c : Bool . (if c then b else false)) then (\ d : (Bool -> Bool) . (\ a : Bool . true)) else (a (true false))) then (\ b : (Bool -> Bool) . (true (true false))) else (if (\ b : Bool . false) then (if false then (a false) else c) else (\ d : (Bool -> Bool) . (if b then c else true))))
(\ b : ((Bool -> Bool) -> (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ d : ((Bool -> Bool) -> Bool) . (\ d : Bool . (if true then a else false))))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : Bool . a) (if b then true else true))))
(if (if (if false then true else b) then (\ d : Bool . (\ a : Bool . a)) else (false b)) then (\ e : (Bool -> Bool) . (\ c : Bool . true)) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . (\ d : Bool . a))))
(if (if (\ d : (Bool -> Bool) . ((if c then a else b) (true a))) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . false)) else (false (\ a : Bool . b))) then ((if c then (\ c : Bool . true) else (if b then b else b)) (if (if true then true else c) then (false true) else ((false a) c))) else (((b c) true) (if (\ a : Bool . false) then (if false then false else true) else (\ a : Bool . false))))
(if (if (false (if c then c else b)) then ((false true) (a b)) else (if (\ e : Bool . b) then b else (c c))) then (\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (false c) then (if (false true) then (if c then false else true) else (if c then a else a)) else (if false then true else b))) else (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if true then true else (if a then false else c))))
((if (\ c : Bool . a) then (if (\ d : Bool . b) then (b c) else (\ c : Bool . (if c then false else c))) else (if (\ b : Bool . b) then (a false) else true)) (if (if (\ d : Bool . false) then (\ a : Bool . c) else (\ a : Bool . a)) then ((\ b : (Bool -> Bool) . (\ e : Bool . false)) (\ e : Bool . false)) else (if (true false) then ((false a) c) else (if a then (c c) else c))))
(\ d : ((Bool -> Bool) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . ((false b) (b (if a then false else false))))
(if (\ e : ((Bool -> Bool) -> Bool) . (\ c : (Bool -> Bool) . (\ d : Bool . a))) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (c a)) else (\ e : (Bool -> Bool) . (c true)))
(if ((if c then a else b) (\ e : (Bool -> Bool) . b)) then (if ((if a then true else b) (\ b : Bool . false)) then (if (if (\ d : Bool . b) then false else (false a)) then ((if true then c else b) a) else (b a)) else (\ a : (Bool -> Bool) . (b false))) else (if (\ c : (Bool -> Bool) . a) then (if false then (if a then c else c) else (\ a : Bool . a)) else (false a)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (false a) then b else (\ a : Bool . false)) (if c then true else (b false))))
(if (\ c : ((Bool -> Bool) -> Bool) . (if (c c) then (\ b : Bool . (if false then a else false)) else (if true then false else c))) then ((if (\ b : Bool . c) then a else (if c then true else b)) ((if a then a else c) false)) else (\ e : (Bool -> (Bool -> Bool)) . (true (if a then b else c))))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((if (\ a : Bool . c) then (\ c : Bool . (if c then false else b)) else ((false a) (c true))) (\ e : Bool . (\ d : Bool . c))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> (Bool -> Bool)) . (\ e : (Bool -> (Bool -> Bool)) . (\ a : Bool . false))))
(\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (c true) then (if a then c else true) else (\ e : Bool . a)))
(\ d : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . ((\ d : (Bool -> Bool) . (if b then b else b)) ((if false then c else false) (if a then false else c))))
(if ((\ c : Bool . b) (\ a : Bool . b)) then ((\ e : (Bool -> Bool) . a) (true c)) else (if (if false then a else false) then (\ d : Bool . c) else (if c then false else b)))
(((if b then c else b) ((if c then b else b) a)) (\ a : (Bool -> Bool) . ((\ a : Bool . b) (b a))))
(if (((if a then true else c) true) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . c))) then (\ c : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> Bool) . (b a))) else ((\ d : Bool . c) ((if false then (\ e : Bool . a) else (\ c : Bool . false)) ((\ c : Bool . b) true))))
((if (b false) then (if (\ b : Bool . c) then (if b then b else true) else true) else (\ b : (Bool -> (Bool -> Bool)) . (if b then (if a then false else c) else b))) (if (true (if b then a else c)) then (b a) else (\ c : Bool . (\ d : Bool . true))))
((\ b : (Bool -> Bool) . (\ c : (Bool -> Bool) . c)) ((\ e : (Bool -> (Bool -> Bool)) . (\ a : Bool . c)) (\ e : Bool . (false a))))
(if (if (c b) then (\ e : Bool . a) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if a then b else c) then (if a then c else true) else (if a then false else true)))) then ((false true) (if c then b else b)) else (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (\ d : Bool . false))))
(if (if (c false) then (if (if true then a else true) then (if true then c else a) else (if b then false else a)) else (if (\ d : Bool . b) then (\ a : Bool . b) else (if true then false else false))) then ((if false then false else c) (\ c : (Bool -> Bool) . (false a))) else (if (false (\ d : Bool . true)) then (\ a : Bool . (if c then true else a)) else (if (false false) then (\ b : Bool . c) else true)))
((if (c (if a then b else true)) then (\ c : Bool . false) else (\ e : Bool . true)) (if (if (true c) then c else a) then (b c) else (if true then true else (b false))))
(\ d : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ b : Bool . true) then (if c then b else c) else (if c then true else a)))
((\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . false)) (if (\ e : Bool . true) then (if b then c else false) else (if b then c else true)))
((if (if (b b) then (if c then c else true) else (if (c c) then c else (if a then b else a))) then ((if c then c else true) (\ e : Bool . c)) else (if a then (if a then a else a) else a)) ((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . false)) ((if (\ c : Bool . c) then (\ c : Bool . false) else (if a then true else c)) (\ e : Bool . c))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ e : ((Bool -> Bool) -> Bool) . ((a c) (b false))))
(((if false then a else (if b then a else false)) (if (\ a : Bool . c) then (\ a : Bool . b) else (if (\ e : Bool . b) then (c c) else a))) (if (\ c : Bool . true) then ((if true then true else c) false) else (if (true false) then (\ c : Bool . b) else a)))
((if (if true then b else true) then (\ e : Bool . true) else (\ a : (Bool -> Bool) . b)) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (true false)))
(((\ c : Bool . true) (if ((false c) (\ e : Bool . b)) then ((if b then true else true) c) else ((if b then true else true) true))) (if (\ a : Bool . false) then (\ e : Bool . a) else (if b then false else true)))
((\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((false (\ c : Bool . b)) (if b then false else c))) (if ((\ c : Bool . a) a) then (\ b : Bool . a) else (c true)))
((\ c : ((Bool -> Bool) -> Bool) . (if ((\ b : Bool . true) c) then (\ a : Bool . true) else (if c then a else (if a then false else b)))) ((if (if c then false else (\ a : Bool . false)) then (if b then false else true) else (\ d : (Bool -> Bool) . false)) (\ c : (Bool -> Bool) . (\ d : Bool . true))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (((true false) c) (\ d : Bool . b)))
((if ((if a then true else a) false) then (if a then (\ d : Bool . b) else (b b)) else ((\ e : Bool . (if true then c else b)) (a b))) (if (true false) then (if (if b then true else true) then a else (if b then true else a)) else (false b)))
((\ e : (Bool -> Bool) . (if (if c then true else b) then (\ d : Bool . false) else (if false then false else true))) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (b (if false then c else a))))
((if (a b) then (\ d : Bool . a) else (if (false c) then (b a) else (\ d : Bool . c))) (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (true c) then (\ d : (Bool -> Bool) . a) else ((b c) true))))
(if (if (if (\ d : Bool . true) then (true true) else (\ a : Bool . false)) then (if c then true else b) else (if c then true else b)) then (if (\ c : (Bool -> Bool) . (c true)) then (if false then (if c then true else true) else (a c)) else (true true)) else ((b b) (if (true a) then false else (if true then a else a))))
(if (\ b : (Bool -> Bool) . (\ a : (Bool -> Bool) . (\ a : Bool . a))) then (\ d : (Bool -> (Bool -> Bool)) . (c c)) else (if ((if true then a else false) ((a a) c)) then ((if a then c else false) (if true then a else a)) else (if false then (\ d : Bool . true) else (b b))))
(if ((b (if b then b else b)) (\ a : Bool . false)) then (\ c : (Bool -> Bool) . (a false)) else (\ d : (Bool -> Bool) . (if c then true else b)))
(if (if ((\ d : Bool . c) (\ e : Bool . a)) then ((\ e : Bool . a) (\ c : Bool . b)) else (if (a c) then ((if b then c else a) a) else (if c then a else b))) then ((if true then false else a) ((if true then b else a) a)) else (if ((if true then c else false) b) then (if b then b else true) else (\ a : (Bool -> Bool) . true)))
((\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if c then false else (if c then c else c)) (\ d : Bool . true))) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((if a then a else (if true then true else a)) (\ c : (Bool -> Bool) . true))))
(((if (if c then true else false) then (a false) else (false c)) (\ d : (Bool -> Bool) . (\ e : Bool . a))) (if ((if (a c) then (\ b : Bool . true) else a) (\ b : Bool . (true a))) then ((if false then (a a) else (\ a : Bool . b)) (a true)) else ((c b) (if b then (if false then true else c) else true))))
(((if (true c) then (c b) else (b (true c))) (\ e : (Bool -> Bool) . (\ d : Bool . a))) (if (\ d : (Bool -> Bool) . false) then (if (a a) then (if true then a else c) else (if c then false else true)) else (if false then false else false)))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> (Bool -> Bool)) . (if (if (if a then b else a) then true else a) then (\ c : Bool . (if false then c else a)) else (\ e : Bool . true))))
(if (if (\ c : Bool . c) then (if (\ c : Bool . false) then true else true) else (if true then b else false)) then (if (a a) then (\ e : Bool . true) else (\ e : Bool . (\ d : Bool . false))) else (if (\ c : (Bool -> Bool) . (if a then false else (if b then false else false))) then (true true) else ((\ d : (Bool -> Bool) . (c a)) (if (if b then c else b) then (if c then b else true) else true))))
(if (\ a : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (if (\ e : Bool . c) then (if true then a else b) else c))) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (b false))) else (\ d : (Bool -> Bool) . (if c then c else true)))
(\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if true then false else (\ d : Bool . b))))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (\ d : Bool . b))) (\ a : (Bool -> Bool) . (b c)))
(if (\ d : (Bool -> Bool) . (if (b false) then (\ a : Bool . c) else false)) then (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ d : Bool . (false c))) else ((if false then b else a) (\ b : Bool . true)))
(\ e : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : ((Bool -> Bool) -> Bool) . (if (if c then c else c) then false else b)))
(if ((\ b : Bool . (\ b : Bool . b)) (c c)) then (\ b : (Bool -> Bool) . (if b then false else false)) else ((\ c : Bool . (c false)) (if (\ a : Bool . false) then (if a then false else b) else c)))
(if ((if (b c) then a else (true b)) ((\ a : Bool . a) true)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . a)) else (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if b then (\ b : Bool . true) else (false c))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> Bool) . (if true then c else (c b))))
(if (if (if b then (c c) else (\ b : Bool . a)) then (b (true c)) else (\ c : Bool . b)) then (\ b : (Bool -> Bool) . (\ d : Bool . true)) else (if (a false) then (if true then a else true) else (if (if true then false else false) then b else false)))
(if (if (if true then c else (b true)) then (if (true c) then c else b) else (if (if false then a else false) then (if a then true else c) else b)) then ((\ d : (Bool -> Bool) . a) (if false then b else a)) else (if (b true) then (true true) else (if c then (\ c : Bool . b) else (false a))))
(if (\ e : (Bool -> Bool) . (\ b : Bool . a)) then ((\ a : Bool . b) (if b then b else b)) else (if (\ d : Bool . false) then (\ d : (Bool -> Bool) . true) else (true true)))
((\ e : (Bool -> Bool) . (\ e : (Bool -> Bool) . (if b then a else true))) (\ a : ((Bool -> Bool) -> Bool) . ((if c then false else false) (\ d : (Bool -> Bool) . (\ e : Bool . false)))))
(\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (if true then false else c) then (\ d : Bool . false) else (\ b : Bool . true))))
(if ((\ b : Bool . false) (c b)) then (\ e : ((Bool -> Bool) -> Bool) . ((\ b : Bool . c) true)) else (\ a : (Bool -> Bool) . (if b then a else a)))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . ((\ a : (Bool -> Bool) . b) (if true then (if true then a else b) else (\ d : Bool . c))))
(if (((false true) c) (if a then (\ a : Bool . false) else (\ c : Bool . b))) then (if (((if false then a else false) false) (true true)) then (c a) else (if b then false else b)) else (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . b)))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool)))) . (if (\ d : Bool . false) then (b (if a then false else true)) else (\ e : (Bool -> Bool) . c)))
((\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((if b then b else c) (if a then (\ a : Bool . c) else (\ d : Bool . a)))) ((if (\ e : Bool . false) then false else (\ a : Bool . true)) (if b then (c false) else b)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (if b then b else false) then (\ e : Bool . a) else (c true)) (if (c b) then (if (a b) then (\ c : Bool . b) else (\ e : Bool . b)) else (\ c : Bool . a))))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : ((Bool -> Bool) -> Bool) . ((\ b : Bool . b) false)))
(if ((\ a : Bool . b) (if (if false then c else true) then (\ b : Bool . a) else a)) then (if (if true then true else b) then ((if false then a else c) b) else (\ a : Bool . b)) else (if (\ e : (Bool -> Bool) . (if (\ b : Bool . a) then c else false)) then (if b then b else b) else (if (if b then a else false) then (if false then true else a) else (if c then c else true))))
(if (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (if b then b else (c b))) then (\ e : (Bool -> Bool) . (\ d : Bool . a)) else (\ a : ((Bool -> Bool) -> Bool) . (\ a : Bool . false)))
(if ((\ e : Bool . a) (if false then c else a)) then (((true (if true then a else false)) (\ c : Bool . c)) (if (\ e : (Bool -> Bool) . (if true then a else false)) then (a (false b)) else (true true))) else ((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ c : Bool . a) then (a a) else b)) (\ a : (Bool -> Bool) . ((\ a : Bool . true) (if a then a else a)))))
(if (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((c a) (a a))) then (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : Bool . c)) else ((if (if a then b else b) then (c true) else (true a)) (if (\ d : (Bool -> Bool) . (\ a : Bool . c)) then (if true then c else a) else (if (if c then false else a) then (a a) else (b a)))))
(if (\ c : ((Bool -> Bool) -> Bool) . ((\ d : (Bool -> Bool) . b) (\ e : (Bool -> Bool) . false))) then ((\ e : (Bool -> Bool) . false) ((a false) c)) else ((if c then b else true) (\ d : Bool . b)))
(if ((if (c c) then true else (if a then a else c)) (if true then (a false) else (c c))) then (if (((c true) (if c then a else a)) (c (b b))) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if false then (if a then c else true) else (c c))) else (if (if b then false else false) then (false b) else (if a then a else b))) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (c false) then (if a then c else true) else (b b))))
((if (c (\ e : Bool . false)) then (c (b a)) else (c false)) ((if a then true else a) (if false then (\ d : Bool . a) else (\ e : Bool . c))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . a)))
((\ b : (Bool -> (Bool -> Bool)) . (\ e : Bool . true)) (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (((false a) (false c)) (\ e : Bool . false))))
(if (\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (\ d : Bool . true))) then ((false true) (a false)) else (((if (if true then b else a) then (if c then true else true) else false) ((if a then a else b) (if a then c else b))) ((false (true c)) (true false))))
(if (((if c then true else true) ((\ a : Bool . false) (a true))) (\ e : (Bool -> Bool) . (if b then (true a) else (if true then true else true)))) then ((a (a c)) (if false then b else b)) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (true a)))
((\ a : ((Bool -> Bool) -> Bool) . (true true)) ((b a) (if b then b else true)))
(\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if ((\ c : Bool . (a false)) (\ d : Bool . a)) then ((false a) (false c)) else ((if true then c else true) (\ a : Bool . a))))
(((false b) (b false)) (if (\ a : (Bool -> Bool) . true) then ((true c) (a c)) else (false (c a))))
((if (\ a : ((Bool -> Bool) -> Bool) . (false true)) then (if false then (a a) else (\ d : Bool . a)) else (if (true b) then (if (if false then c else c) then b else (\ d : Bool . c)) else (a (if a then a else true)))) (\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (((c true) a) ((\ e : Bool . b) b))))
(if ((\ e : (Bool -> Bool) . true) (if (if a then a else c) then (if false then b else a) else (\ a : Bool . a))) then (if ((a a) ((\ a : Bool . b) (c a))) then (if (\ c : Bool . b) then (\ d : Bool . c) else (b c)) else ((\ b : Bool . c) (a (c true)))) else ((\ c : (Bool -> Bool) . a) (if (a a) then (if a then c else c) else (if c then (if b then a else b) else a))))
(if (((\ d : Bool . b) (if c then a else c)) (if b then b else false)) then ((if a then true else b) (c c)) else ((\ e : Bool . b) (if (\ e : Bool . true) then true else (if b then true else c))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ b : (Bool -> Bool) . (if c then false else true)) then ((\ a : (Bool -> Bool) . (\ a : Bool . false)) (a true)) else ((\ d : Bool . (if a then a else b)) (if false then a else (true c)))))
((if (\ e : Bool . (a true)) then ((if c then false else true) (\ d : (Bool -> Bool) . true)) else ((true c) (if (c b) then (\ e : Bool . b) else (if b then a else a)))) ((if (if a then c else b) then (\ e : (Bool -> Bool) . true) else (a b)) (if (if false then false else false) then (if (a true) then b else false) else (if (\ c : Bool . false) then (c false) else (if false then a else c)))))
((if (if (a false) then (\ d : Bool . a) else (if (a true) then c else (if b then true else a))) then (if (if a then b else c) then (\ a : (Bool -> Bool) . (c b)) else (if (if false then true else c) then (if c then true else b) else false)) else ((false true) (if false then false else c))) (if (if (true a) then a else (if c then false else false)) then ((\ b : (Bool -> Bool) . (if a then a else b)) ((\ c : Bool . b) (false c))) else (\ a : (Bool -> Bool) . (\ d : Bool . b))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . ((false b) true)))
((\ b : (Bool -> Bool) . (if (\ d : Bool . b) then (if true then true else a) else false)) (\ b : (Bool -> Bool) . (true false)))
(if (\ b : (Bool -> Bool) . (if false then true else true)) then ((\ c : (Bool -> (Bool -> Bool)) . (if a then false else c)) (if (a a) then ((\ d : Bool . a) (\ b : Bool . c)) else (\ b : Bool . a))) else (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (if ((c true) (if false then true else b)) then (false false) else (if (if false then a else c) then false else (if true then a else true)))))
((((\ e : Bool . a) (false false)) (if a then (\ a : Bool . a) else (\ d : Bool . b))) ((if true then b else b) ((\ c : Bool . b) a)))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ b : (Bool -> Bool) . a) (if false then (if false then a else true) else true)))
((if (\ b : (Bool -> (Bool -> Bool)) . (false a)) then ((\ e : Bool . b) (\ a : Bool . a)) else ((false a) (false (\ a : Bool . true)))) ((\ a : ((Bool -> Bool) -> Bool) . (if a then a else c)) (if (\ d : Bool . c) then (\ a : Bool . true) else (true true))))
(if (\ b : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (c c))) then (if (\ e : (Bool -> Bool) . (a false)) then (if true then c else false) else (\ c : Bool . b)) else (\ a : (Bool -> Bool) . (if c then c else false)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ b : Bool . a) (\ e : Bool . (if b then c else true))))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ d : (Bool -> Bool) . (a true)) then ((if false then a else true) ((\ d : Bool . false) c)) else (if (if (\ a : Bool . a) then c else b) then (b true) else (if b then (if false then c else c) else c))))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((if false then b else b) (if a then true else c)))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((a false) (\ d : (Bool -> Bool) . a)))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if (if false then a else false) then a else false) then ((if (if false then a else a) then (\ e : Bool . a) else false) (\ a : Bool . false)) else ((\ a : Bool . (if c then false else true)) (\ e : Bool . false))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ b : Bool . a) (false a)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((c (false false)) (if (c true) then (if (\ d : Bool . true) then (c false) else true) else (\ e : Bool . c))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ a : (Bool -> Bool) . true) (\ b : ((Bool -> Bool) -> Bool) . (if c then (c false) else c))))
(if (\ b : ((Bool -> Bool) -> Bool) . (if a then true else b)) then ((if a then true else c) (if b then c else b)) else (if (if (false b) then (\ c : Bool . b) else (\ b : Bool . true)) then (if (\ d : Bool . c) then ((c false) (c true)) else (\ a : Bool . a)) else (if true then true else (false a))))
(if (if (a (if c then false else true)) then (\ a : Bool . false) else (if false then (a b) else (\ b : Bool . false))) then ((if (if a then b else false) then (if true then false else (\ a : Bool . a)) else (\ b : (Bool -> Bool) . b)) (\ a : (Bool -> Bool) . (b (\ c : Bool . c)))) else (if (\ c : Bool . c) then (a true) else (\ b : (Bool -> Bool) . (if b then a else c))))
(if (if ((b (b false)) (\ e : (Bool -> Bool) . b)) then ((\ a : Bool . b) b) else (\ b : (Bool -> Bool) . b)) then ((b c) (if c then b else a)) else ((false (\ e : Bool . c)) (if (if true then a else true) then (if c then a else c) else (\ b : Bool . c))))
((((a (b a)) (\ c : Bool . (\ b : Bool . true))) (\ e : (Bool -> Bool) . ((\ c : Bool . a) b))) (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> (Bool -> Bool)) . (if (b false) then a else (a a)))))
(if (\ a : (Bool -> Bool) . (\ d : (Bool -> Bool) . (if c then a else false))) then (\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ d : Bool . c)) else (((if false then true else a) (if b then false else a)) (\ c : Bool . c)))
(if (\ b : (Bool -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (if true then false else c))) then (\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ a : (Bool -> Bool) . (\ c : Bool . b))) else (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> (Bool -> Bool)) . (c true))))
((((a b) (if c then c else true)) (a b)) (\ e : ((Bool -> Bool) -> Bool) . (if false then a else a)))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (((if true then true else c) (if b then false else true)) (\ a : Bool . c)))
(if (\ c : (Bool -> Bool) . (true false)) then (\ a : (Bool -> Bool) . (\ b : Bool . (\ e : Bool . true))) else (\ c : (Bool -> Bool) . (\ d : Bool . b)))
((if (\ c : (Bool -> Bool) . (c true)) then (if b then (\ b : Bool . true) else b) else (\ b : (Bool -> Bool) . (if c then a else false))) (if (if b then b else c) then ((a c) (true false)) else (c true)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (((if b then c else c) false) (if true then (c c) else a)) then ((if c then true else true) a) else ((if true then a else c) (if c then c else false))))
((if (if false then (if c then false else true) else false) then (false (\ e : Bool . false)) else (\ b : Bool . (if false then c else c))) (if (a (if c then b else c)) then (\ a : (Bool -> Bool) . a) else (\ c : (Bool -> Bool) . (a b))))
(if (\ a : (Bool -> Bool) . (if (false true) then true else c)) then ((if (c b) then ((c false) false) else (if c then (true c) else (false b))) (\ d : (Bool -> Bool) . true)) else ((\ c : Bool . a) ((if b then c else true) b)))
(((\ a : Bool . false) (if false then b else c)) ((if (b false) then (\ c : Bool . c) else (if true then true else true)) ((if b then true else c) false)))
(\ e : ((Bool -> Bool) -> ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool))) . (\ b : (Bool -> Bool) . ((\ e : (Bool -> Bool) . false) ((false false) true))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((b a) (false (if a then b else a))))
(\ c : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ e : Bool . b) then (if false then c else (if true then false else false)) else (b (b c))))
(if (\ e : ((Bool -> Bool) -> Bool) . (\ d : (Bool -> Bool) . c)) then (if (\ e : Bool . true) then (\ c : Bool . c) else (a (a a))) else (\ e : (Bool -> (Bool -> Bool)) . (if a then b else b)))
(\ d : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ d : Bool . b) (if (\ c : Bool . true) then (\ c : Bool . false) else c)))
(if (\ a : (Bool -> Bool) . (\ d : (Bool -> Bool) . (a b))) then ((\ e : Bool . (if true then b else a)) (if (\ c : Bool . true) then (b c) else b)) else (\ d : ((Bool -> Bool) -> Bool) . (if true then b else (if true then a else false))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ d : Bool . b) then (a true) else (if c then (\ c : Bool . b) else (true c))))
(if (if ((if (if false then false else false) then c else (if c then b else false)) (\ c : Bool . c)) then (if (if a then c else true) then (\ c : Bool . b) else (\ d : Bool . true)) else ((if c then c else c) (\ d : (Bool -> Bool) . (c c)))) then ((\ a : (Bool -> Bool) . c) (c true)) else (if (\ a : Bool . (c b)) then ((\ e : Bool . c) ((b false) false)) else (if true then (\ e : Bool . c) else (\ e : Bool . b))))
((if (\ d : (Bool -> Bool) . (if c then false else c)) then (\ b : Bool . false) else (if b then true else c)) (\ b : (Bool -> Bool) . (\ a : Bool . a)))
((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (true false) then c else false)) ((if c then b else a) (\ a : Bool . a)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : (Bool -> (Bool -> Bool)) . (if (if false then b else b) then true else true)) ((\ a : Bool . b) (\ a : Bool . (if true then c else true)))))
(if ((\ a : Bool . c) (if b then false else a)) then (\ d : ((Bool -> Bool) -> Bool) . ((if false then false else b) (\ d : Bool . b))) else (if (a (\ c : Bool . true)) then (if true then true else true) else (if b then c else c)))
((if (\ e : Bool . c) then (if a then false else true) else (if c then a else a)) ((a b) (c false)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ b : (Bool -> Bool) . (a false)))
((if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (c b)) then (\ b : (Bool -> Bool) . (\ d : Bool . c)) else (if true then true else (if false then false else a))) (\ b : (Bool -> Bool) . (if a then b else a)))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if ((if true then true else a) (\ d : Bool . true)) then (if (\ b : Bool . true) then b else true) else ((b true) (\ e : Bool . c))))
(if (\ d : (Bool -> Bool) . ((\ c : Bool . a) (if b then false else false))) then (if (if (\ e : Bool . b) then false else (\ d : Bool . false)) then (\ d : Bool . false) else (if b then true else true)) else (if (\ a : Bool . a) then (if (\ c : Bool . b) then a else (if c then c else c)) else (\ b : Bool . b)))
(if (\ d : (Bool -> Bool) . (if (\ b : Bool . b) then (if false then c else b) else (b a))) then (\ e : (Bool -> Bool) . (false true)) else (((if (\ c : Bool . false) then (\ e : Bool . c) else c) (if true then b else a)) ((\ c : Bool . b) (if false then false else false))))
(if (\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((a c) (\ e : Bool . (a b)))) then (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (\ e : Bool . (a false))) else (if (if ((\ e : Bool . b) false) then (if false then (\ d : Bool . c) else (\ c : Bool . a)) else (if a then c else c)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (if true then a else false) then true else (\ e : Bool . c))) else (\ a : Bool . (\ b : Bool . true))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (((true a) (\ c : (Bool -> Bool) . true)) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((c b) (c true)))))
(if (\ a : ((Bool -> Bool) -> Bool) . (\ e : Bool . b)) then (\ a : ((Bool -> Bool) -> Bool) . (if (if (true a) then true else false) then (c true) else (\ e : Bool . true))) else ((b c) (if (true b) then (if c then a else true) else (\ c : Bool . c))))
(if (if (if (if b then b else true) then (\ e : Bool . c) else (\ d : (Bool -> Bool) . a)) then (if (if true then b else true) then (if b then false else a) else (false a)) else (\ e : (Bool -> Bool) . (if false then false else true))) then ((if true then false else b) (if true then (\ b : Bool . false) else a)) else (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (if (c c) then (false true) else true) then (\ a : (Bool -> Bool) . c) else (\ b : Bool . true))))
(if ((\ d : (Bool -> Bool) . false) (if (if true then true else a) then (if false then b else c) else (if true then b else b))) then (if (if b then b else (if b then a else b)) then (c false) else (false true)) else (if (b b) then (if a then c else true) else (if (a true) then false else (b true))))
(\ d : (((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) -> ((Bool -> Bool) -> Bool)) . (if (((b b) (\ a : Bool . true)) (if c then c else b)) then (if (if c then false else true) then (false false) else (false true)) else (if (\ b : Bool . a) then (if (false a) then false else (if a then c else false)) else (if (false true) then a else b))))
((\ b : (Bool -> Bool) . (\ a : Bool . (if a then a else c))) (if (\ c : Bool . true) then (\ d : Bool . b) else (if (if c then b else true) then (if false then c else a) else true)))
(if ((if (\ e : Bool . a) then (true false) else (if false then b else false)) ((true a) (if a then true else false))) then (if ((if (if b then b else false) then (\ b : Bool . false) else true) (\ b : Bool . a)) then (if (if false then a else false) then (if true then a else b) else (\ b : Bool . true)) else (if b then (true a) else a)) else ((if false then a else false) (if c then false else (\ b : Bool . true))))
(\ b : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if ((\ e : (Bool -> Bool) . (if true then true else false)) (\ b : Bool . false)) then ((true false) (c b)) else ((if true then b else a) b)))
(if (if (if c then true else false) then (\ c : (Bool -> Bool) . a) else (\ e : Bool . b)) then (if (\ e : (Bool -> Bool) . (\ a : Bool . (a b))) then (\ d : (Bool -> Bool) . a) else (\ a : (Bool -> Bool) . (a c))) else (if (b a) then (if (if true then (a c) else a) then (\ a : Bool . false) else (false false)) else (if true then (\ e : Bool . b) else (true true))))
(\ b : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> (Bool -> Bool)) . (\ a : Bool . (if a then c else b)))))
(\ c : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ a : (Bool -> Bool) . (a c)))
(((\ d : (Bool -> (Bool -> Bool)) . (b c)) (\ c : (Bool -> Bool) . (\ b : Bool . b))) (\ b : (Bool -> Bool) . (\ c : ((Bool -> Bool) -> Bool) . (c true))))
((((\ c : (Bool -> Bool) . true) (if true then false else false)) (\ e : (Bool -> Bool) . (\ d : Bool . false))) ((if false then b else a) (\ b : (Bool -> Bool) . true)))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then c else (\ d : Bool . false)))))
((\ c : ((Bool -> Bool) -> Bool) . (if (if false then false else false) then false else a)) (if (if (\ b : Bool . false) then (\ a : Bool . true) else a) then (\ c : ((Bool -> Bool) -> Bool) . (if false then b else true)) else (\ e : ((Bool -> Bool) -> Bool) . (\ c : Bool . false))))
(if (if (\ e : (Bool -> Bool) . false) then (\ a : Bool . false) else (true b)) then (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (c (if b then c else false))) else (if (\ e : Bool . c) then (\ e : Bool . (true c)) else (\ c : (Bool -> Bool) . b)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (\ c : (Bool -> Bool) . (c a)))
((if (\ b : Bool . true) then (\ b : (Bool -> Bool) . b) else (if a then (\ d : Bool . a) else a)) (if (if (\ a : Bool . a) then (b a) else c) then (\ a : (Bool -> Bool) . (if c then false else b)) else (true (a false))))
(if (\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if c then false else b) (if true then false else c))) then (if (\ a : (Bool -> Bool) . (if true then false else c)) then (\ e : Bool . true) else (if c then (\ d : Bool . true) else (if false then false else true))) else (if (if ((\ e : Bool . b) b) then (\ d : Bool . c) else (\ a : (Bool -> Bool) . (\ d : Bool . b))) then (a (b c)) else ((\ b : Bool . false) (if b then a else c))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (((if (\ a : Bool . a) then (if a then true else true) else b) (\ a : Bool . c)) (true c)))
((if (\ b : Bool . false) then ((if false then a else true) c) else (b true)) (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((if b then b else true) (if true then true else false)))))
(if (if ((if c then a else true) (\ d : Bool . (if false then a else true))) then (if c then (\ e : Bool . a) else (if true then false else c)) else (\ b : (Bool -> Bool) . false)) then ((c (\ b : Bool . c)) (if ((if a then c else false) (\ b : Bool . a)) then (\ c : Bool . false) else (false b))) else (((if b then true else true) b) (if false then a else a)))
((\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (c b))) ((if a then (if c then b else c) else (if b then c else c)) (\ c : Bool . b)))
(if (\ e : (Bool -> Bool) . ((if a then true else (c false)) ((false false) false))) then ((if (if c then true else c) then (true true) else (true c)) (if (if (\ d : Bool . a) then c else a) then (\ c : Bool . a) else (\ b : Bool . true))) else ((false b) (\ b : (Bool -> (Bool -> Bool)) . (if true then false else (a c)))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if false then a else (if c then a else b)) (if (a b) then (if false then true else a) else (if b then b else true))))
((\ a : (Bool -> Bool) . (if (\ a : Bool . a) then a else (if true then a else b))) (\ d : (Bool -> Bool) . (if b then false else true)))
(if (if ((\ e : Bool . false) true) then ((a true) (\ d : Bool . c)) else (if c then c else a)) then (if (if (\ b : Bool . a) then false else c) then (\ c : ((Bool -> Bool) -> Bool) . (\ b : (Bool -> Bool) . true)) else (if true then (if c then c else false) else true)) else (\ e : (Bool -> Bool) . (if c then a else c)))
((((\ e : Bool . false) (\ b : Bool . true)) ((\ e : Bool . c) ((b false) false))) (\ d : (Bool -> (Bool -> Bool)) . (if a then b else b)))
(\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if ((\ e : (Bool -> Bool) . (false c)) (if false then a else (if a then false else b))) then (if (\ a : Bool . b) then (true false) else (if b then false else b)) else (if c then true else false)))
(((if (if c then b else false) then (true c) else (b c)) (if true then (a b) else c)) (if ((\ b : Bool . a) (if true then b else true)) then ((\ e : Bool . true) c) else (if true then false else false)))
(if (\ e : (Bool -> (Bool -> Bool)) . ((a true) (true c))) then ((if (if false then b else b) then c else false) (if (if b then true else b) then ((c true) (if b then a else true)) else ((\ c : Bool . true) b))) else (\ c : (Bool -> Bool) . ((\ e : Bool . b) a)))
(((if (if true then true else false) then c else (if c then a else true)) (if true then false else c)) (if (if b then true else c) then (if true then a else true) else (if (\ b : Bool . a) then a else (if false then c else b))))
(if ((if (\ c : Bool . a) then (\ e : Bool . a) else a) (if (\ a : Bool . false) then (b a) else true)) then (\ a : (Bool -> Bool) . (\ a : Bool . c)) else (if (if (c b) then (b b) else (\ b : Bool . (\ c : Bool . c))) then (\ b : (Bool -> Bool) . c) else (\ c : (Bool -> (Bool -> Bool)) . (if a then true else false))))
(((if (if c then a else true) then (\ e : Bool . b) else b) (\ e : Bool . (\ a : Bool . false))) (((\ d : Bool . false) ((true false) (\ e : Bool . true))) (\ b : Bool . (if c then b else true))))
(((\ c : ((Bool -> Bool) -> Bool) . (\ e : Bool . b)) (c true)) (if (\ e : Bool . true) then (if false then false else b) else (\ c : (Bool -> Bool) . a)))
((if (true a) then (\ b : Bool . (if b then a else false)) else (\ b : (Bool -> Bool) . true)) (if (\ d : (Bool -> Bool) . b) then (a false) else (true c)))
((if ((\ e : Bool . true) (if b then c else c)) then ((\ e : Bool . b) b) else (\ b : (Bool -> Bool) . (true true))) (if ((\ b : Bool . c) (b c)) then (if (if (if b then c else c) then (\ b : Bool . false) else a) then (\ d : Bool . (false a)) else (true c)) else (\ a : (Bool -> Bool) . (\ c : Bool . a))))
(((if (false false) then true else (c true)) (\ b : Bool . false)) (((\ b : Bool . b) (\ c : Bool . c)) (if (\ a : Bool . true) then (if (\ e : Bool . false) then a else (if c then a else c)) else (b c))))
(if (\ d : (Bool -> Bool) . (if true then c else (\ d : Bool . false))) then (\ b : (Bool -> Bool) . (\ b : (Bool -> Bool) . (\ d : Bool . true))) else (if (\ d : (Bool -> (Bool -> Bool)) . (\ b : Bool . c)) then ((b b) b) else (if a then true else true)))
(if ((true false) (if (\ e : Bool . a) then false else b)) then (if (if a then (a true) else (if a then true else a)) then ((if a then a else true) b) else ((\ d : Bool . false) (\ e : Bool . b))) else (\ d : (Bool -> Bool) . ((\ c : Bool . false) (false c))))
(((\ b : (Bool -> Bool) . (if true then false else b)) (if (b c) then b else b)) (if (if (\ b : Bool . c) then (c (if b then b else c)) else (if true then b else false)) then (\ e : Bool . (if a then true else a)) else (if true then (c a) else c)))
(if ((if (\ e : Bool . false) then (b c) else false) (\ c : Bool . c)) then (if (c b) then (\ b : Bool . false) else (\ c : Bool . (if b then true else true))) else (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((false false) (if b then c else true))))
((if (\ d : Bool . (if b then false else c)) then ((if a then b else a) (if a then true else true)) else (if (if c then a else false) then b else b)) (if (\ c : Bool . false) then (a false) else (true (if b then false else a))))
((\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (true false)) (if (\ a : (Bool -> Bool) . (\ d : (Bool -> Bool) . true)) then ((if true then a else a) (true c)) else (if (\ a : Bool . true) then (c true) else (if false then (b true) else b))))
(((if (a b) then (if c then b else b) else ((true c) c)) (if (\ b : Bool . false) then (\ b : Bool . a) else (if (b true) then (\ c : Bool . b) else b))) (if (if (\ d : Bool . (\ c : Bool . a)) then (b true) else (b true)) then (if (if b then true else false) then a else (if false then b else b)) else (if (true a) then (if b then a else a) else b)))
(((if (if a then b else true) then false else b) (if (a b) then (if b then a else a) else a)) (((a true) true) (\ e : Bool . (\ b : Bool . false))))
(if ((false (if b then c else c)) ((\ e : Bool . a) (if c then a else b))) then ((if (\ d : Bool . true) then c else (true false)) (\ c : (Bool -> Bool) . (c a))) else (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if c then false else b) (\ a : Bool . true))))
(if (\ e : (Bool -> (Bool -> Bool)) . (if (b a) then (\ b : Bool . (\ a : Bool . c)) else ((\ b : Bool . c) c))) then (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((a c) (c c))) else (((if false then b else false) (true a)) (a (false b))))
(if (\ a : (Bool -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (\ b : Bool . false))) then ((\ e : Bool . true) (false (\ e : Bool . false))) else ((c (if true then b else false)) (\ b : Bool . (false false))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (Bool -> (Bool -> Bool)) . (\ a : Bool . b)))
(if ((if true then true else false) (\ c : Bool . true)) then (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((false a) (\ e : Bool . false))) else (if (if (\ b : Bool . a) then true else (\ c : Bool . false)) then (if b then false else c) else (\ c : (Bool -> Bool) . true)))
(if ((\ c : Bool . true) (true b)) then ((false a) (b true)) else (if (if b then true else c) then ((\ d : Bool . true) (b a)) else (false false)))
(((false a) (a c)) (if (\ a : (Bool -> Bool) . ((if c then b else b) (\ d : Bool . c))) then (\ b : (Bool -> Bool) . (\ a : Bool . true)) else (\ b : Bool . (if true then false else false))))
(if ((\ c : (Bool -> Bool) . (\ b : Bool . a)) (\ d : (Bool -> (Bool -> Bool)) . (if (true a) then (if c then b else b) else a))) then ((\ d : (Bool -> Bool) . b) (if b then (b true) else (false a))) else (if ((if false then true else b) (false c)) then (c b) else ((if b then false else true) false)))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (\ d : (Bool -> Bool) . c) then (if false then (\ a : Bool . c) else a) else ((if (a b) then (false false) else true) (if b then c else a))))
(((\ e : (Bool -> Bool) . (a a)) ((if b then true else a) true)) ((if b then c else (true b)) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then c else false))))
(\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ b : Bool . true) then ((\ a : Bool . a) c) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (false false))))
(if (if (\ e : Bool . a) then (\ c : Bool . (\ c : Bool . true)) else ((c true) b)) then (((a a) (\ c : Bool . b)) (\ b : Bool . (if b then b else c))) else ((b false) (a true)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ d : (Bool -> Bool) . (\ d : Bool . (if b then false else b))) then ((if true then false else false) (if (if false then c else a) then false else (\ c : Bool . false))) else (\ b : Bool . (\ c : Bool . true))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (if (true b) then ((true true) true) else ((\ b : Bool . true) (c true))))
(if (\ b : (Bool -> Bool) . (\ b : (Bool -> Bool) . c)) then ((\ d : Bool . c) (if b then b else b)) else ((\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if true then c else false)) (if (if c then c else true) then (\ d : (Bool -> Bool) . (b b)) else (true a))))
(\ e : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ e : (Bool -> Bool) . (\ c : Bool . (\ e : Bool . false))) ((\ c : Bool . b) (if false then c else c))))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ e : (Bool -> Bool) . ((true false) (if true then false else false))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if true then true else b)))
(if (\ c : ((Bool -> Bool) -> Bool) . (\ d : (Bool -> Bool) . (if false then a else b))) then (if ((if c then b else a) (if a then false else c)) then (b b) else (if c then (if false then a else a) else true)) else ((true (c c)) (true (\ c : Bool . false))))
(if (\ e : ((Bool -> Bool) -> Bool) . (((\ a : Bool . false) (if b then true else c)) (\ b : Bool . false))) then (\ b : ((Bool -> Bool) -> Bool) . (\ a : Bool . b)) else ((b false) (\ e : Bool . (if b then false else true))))
(((if (a c) then true else a) (false b)) (if (if (if a then c else (if a then false else a)) then (if c then b else (if b then b else c)) else (\ b : Bool . (true true))) then ((c b) (if false then a else a)) else (if b then c else (if true then false else false))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((b b) (\ a : (Bool -> Bool) . true)))
(if ((if a then (if a then true else b) else c) (if b then a else a)) then (if (if (false c) then (if b then a else a) else b) then (false c) else (\ d : Bool . b)) else (\ a : (Bool -> Bool) . (if (\ d : Bool . false) then a else c)))
(\ b : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (if (if a then false else true) then false else false) then (c c) else (if c then b else false))))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (if true then a else b)))
(if ((if a then c else true) (if true then true else c)) then ((true true) (\ a : Bool . false)) else (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ e : Bool . c) (if c then a else c))))
(if (\ d : (Bool -> (Bool -> Bool)) . (if (\ b : Bool . b) then c else a)) then (\ a : (Bool -> (Bool -> Bool)) . (if (false false) then (if b then a else c) else b)) else (\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . ((if a then c else b) (a c))))
(\ e : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> Bool) -> (Bool -> Bool))) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((if true then a else b) b)))
((((if false then c else a) (if (\ e : Bool . true) then (b a) else a)) (\ e : (Bool -> Bool) . (\ c : Bool . true))) (\ d : ((Bool -> Bool) -> Bool) . (\ b : Bool . false)))
(if (if (if c then a else (if true then true else a)) then (if true then b else (false false)) else ((\ b : (Bool -> Bool) . true) (if true then c else a))) then (if (if b then (\ a : Bool . a) else c) then (if a then c else c) else (true (\ e : Bool . true))) else (\ c : (Bool -> Bool) . (\ b : Bool . false)))
(\ b : (((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (\ c : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : Bool . true)))
((\ e : (Bool -> Bool) . (true false)) (if (\ a : (Bool -> Bool) . c) then (c a) else (\ e : (Bool -> Bool) . (\ c : (Bool -> Bool) . (b true)))))
(((if false then b else false) (\ e : (Bool -> Bool) . (if true then (a c) else (\ b : Bool . b)))) (if ((a b) (\ e : Bool . b)) then (if true then (a c) else (\ c : Bool . a)) else (b (\ d : Bool . c))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> Bool) . ((if true then true else false) (if a then a else false)))))
(\ c : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : (Bool -> (Bool -> Bool)) . (\ a : Bool . c)))
(\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((c true) ((c a) c)))
(\ b : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> Bool) -> (Bool -> Bool))) . (\ d : (Bool -> Bool) . (\ d : (Bool -> Bool) . (a false))))
(\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (if b then (if b then a else c) else b) then (true false) else (((if c then true else true) c) (if c then b else b))))
(\ d : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ b : Bool . true) then (\ a : Bool . false) else (if c then true else false)))
(((false a) (c true)) ((\ d : Bool . true) (if c then c else c)))
(\ c : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ d : (Bool -> Bool) . a) then ((false b) (a a)) else (\ a : Bool . false)))
(\ b : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (\ e : (Bool -> Bool) . (\ a : (Bool -> Bool) . (\ b : Bool . a))))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((true (c true)) (if (false true) then (if (if a then true else false) then (if a then true else false) else (\ e : Bool . c)) else (a false))))
(if (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . ((if c then c else c) (if c then true else b))) then (\ d : (Bool -> Bool) . (\ e : Bool . c)) else (\ e : (Bool -> Bool) . (\ a : Bool . c)))
(((\ e : Bool . true) (b a)) ((\ d : (Bool -> Bool) . (if (if false then a else true) then (\ a : Bool . a) else b)) (\ c : Bool . c)))
(\ d : (((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) -> ((Bool -> Bool) -> Bool)) . (\ d : (Bool -> Bool) . ((if b then b else a) (a (if a then a else b)))))
(if (if ((if false then a else b) true) then (\ a : (Bool -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . a)) else (if (c (if true then a else a)) then (\ c : Bool . c) else (\ c : (Bool -> Bool) . a))) then ((\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (\ b : Bool . b)) (\ a : Bool . (a c))) else (\ e : (Bool -> Bool) . (if (\ e : Bool . true) then ((if true then c else false) false) else (a a))))
(if (((\ b : (Bool -> Bool) . (a a)) (\ e : Bool . true)) ((if (\ d : Bool . a) then a else (\ a : Bool . b)) (\ c : Bool . (if a then b else false)))) then (\ d : (Bool -> (Bool -> Bool)) . (\ a : Bool . c)) else ((b true) (a true)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((if false then true else (\ d : Bool . c)) (if a then (if false then true else a) else false)))
(\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ c : Bool . c) then a else (if a then a else c))))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (if a then b else c) then (if c then false else c) else (false (if b then false else c))))
(if (if (if (if a then (if c then false else b) else (c false)) then (a a) else (\ e : Bool . false)) then ((c (\ b : Bool . b)) (if (if true then a else b) then c else b)) else (if c then c else true)) then ((\ a : Bool . a) (false (if a then false else true))) else (if (true a) then (\ d : (Bool -> Bool) . false) else (\ a : (Bool -> Bool) . (\ d : Bool . false))))
((\ d : ((Bool -> Bool) -> Bool) . ((\ e : Bool . a) (\ e : Bool . a))) (if (\ e : Bool . b) then (if (b a) then false else true) else (a b)))
(if ((if (if c then true else c) then false else true) (if (true b) then (if c then b else false) else (if false then a else true))) then (if ((if c then true else a) c) then (if (a a) then (b c) else b) else ((\ e : Bool . b) (false a))) else ((if (c a) then false else (c false)) (\ e : Bool . b)))
(\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (\ c : (Bool -> Bool) . ((a false) (\ e : Bool . c))) then (if (true b) then (a b) else false) else (\ d : (Bool -> Bool) . (if a then false else c))))
(if (if (true false) then (if (true false) then true else c) else (if (b true) then false else (\ c : Bool . b))) then (\ a : (Bool -> (Bool -> Bool)) . (if a then b else true)) else (if (if c then a else (true b)) then (\ b : Bool . false) else (\ c : Bool . false)))
(\ b : ((((Bool -> Bool) -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . ((false b) (((true true) true) (if b then (\ e : Bool . a) else b))))
((\ b : (Bool -> Bool) . (b a)) (\ d : (Bool -> Bool) . ((if true then b else b) c)))
(\ d : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (if b then b else c) then (\ b : Bool . true) else (if b then b else a)))
((if (\ a : Bool . b) then (if true then c else true) else (true b)) ((true b) (if false then true else false)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ e : Bool . (\ c : Bool . true)) (if a then b else true)))
(if (if (\ e : (Bool -> (Bool -> Bool)) . (a b)) then (if b then false else true) else (\ d : (Bool -> Bool) . (\ d : Bool . (if c then a else b)))) then ((\ b : Bool . true) (b (b false))) else (\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (if false then c else false))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((if c then b else false) (if c then b else true))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . ((if (false a) then (\ e : Bool . false) else (\ b : (Bool -> Bool) . (\ b : Bool . c))) (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (true b))))
((\ c : (Bool -> Bool) . (\ e : (Bool -> Bool) . (if c then true else a))) ((if false then true else c) (false c)))
(((false false) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . a))) (if (\ c : (Bool -> Bool) . (a a)) then ((\ a : Bool . a) (true false)) else (\ d : (Bool -> Bool) . b)))
((\ a : (Bool -> Bool) . (true a)) (if (\ d : (Bool -> Bool) . a) then ((c a) (\ b : Bool . a)) else (\ e : Bool . c)))
(\ c : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if (if c then a else false) then a else (if true then false else c)) then (\ a : (Bool -> Bool) . (\ c : Bool . c)) else (true false))))
((if (if (\ d : Bool . b) then (\ b : Bool . true) else (a (b b))) then (if (a (a b)) then (\ c : (Bool -> Bool) . true) else (if true then c else b)) else (\ e : (Bool -> Bool) . (if false then true else true))) (if ((if false then (\ d : Bool . true) else true) (b true)) then (\ b : (Bool -> Bool) . (b (if false then a else b))) else ((b c) (\ a : Bool . a))))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (if a then c else false))) then ((b (true c)) (c true)) else ((\ e : (Bool -> Bool) . false) (((if a then c else a) b) (\ d : (Bool -> Bool) . (a true)))))
(if ((c c) (\ c : (Bool -> (Bool -> Bool)) . (b true))) then ((\ d : Bool . true) (if (a c) then b else (b true))) else (if ((\ c : Bool . b) (b a)) then (\ e : (Bool -> Bool) . (\ c : Bool . a)) else ((b false) (\ c : Bool . true))))
(\ e : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ a : Bool . a) then (\ e : Bool . (if false then b else true)) else (if (\ e : Bool . false) then false else (\ e : Bool . false))))
((((if b then b else c) (if false then true else a)) (\ d : (Bool -> Bool) . (\ c : Bool . (false a)))) (if ((if c then b else a) (if false then true else b)) then ((if false then a else b) c) else (\ a : Bool . a)))
(\ e : ((((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (\ d : (Bool -> Bool) . (\ d : Bool . b)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> (Bool -> Bool)) . (b true)))
(if (if (if a then (\ d : Bool . a) else b) then (\ b : (Bool -> Bool) . c) else (c true)) then (\ b : (Bool -> Bool) . (c c)) else ((a a) (if false then (b c) else (a a))))
(\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (((if a then true else (\ b : Bool . false)) ((c false) b)) (if (true c) then (if b then a else c) else (if a then c else a))))
((if (\ e : (Bool -> Bool) . false) then (\ e : Bool . (if false then c else false)) else ((\ c : Bool . (true c)) (\ e : Bool . true))) (if (c b) then (\ d : Bool . (if a then a else false)) else (b c)))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : ((Bool -> Bool) -> Bool) . (if (false false) then (\ b : Bool . true) else b)))
(((\ c : (Bool -> Bool) . true) (if c then (a false) else (if false then a else b))) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ d : (Bool -> Bool) . a) then (if false then a else (b a)) else (if (if b then true else b) then b else (if false then true else a)))))
((if (\ c : (Bool -> Bool) . (a b)) then (false (if true then a else b)) else ((\ d : (Bool -> Bool) . a) (if (\ a : Bool . true) then (a c) else c))) (if ((\ b : Bool . b) b) then (\ a : (Bool -> Bool) . (false false)) else (if c then b else (if false then b else true))))
(\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if c then (if b then c else false) else (c true))))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (b (if true then true else true)) then (\ a : Bool . true) else (true b)))
((((\ b : Bool . b) b) (\ e : Bool . b)) (((if b then a else (\ a : Bool . c)) (if c then true else false)) (if (if c then b else false) then (\ d : Bool . b) else c)))
((if ((if c then false else c) b) then (a false) else (\ c : (Bool -> Bool) . (\ b : Bool . true))) (if (if true then true else c) then (\ b : Bool . false) else (if true then false else true)))
((if (if c then true else (\ a : Bool . true)) then (if a then true else a) else ((true c) (if b then true else (\ b : Bool . b)))) ((\ b : Bool . a) (if a then (if c then false else true) else (c b))))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (if false then true else (if true then false else false)) then (\ d : Bool . false) else (if c then c else true)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : Bool . a)))
((if (true a) then (if false then a else c) else (\ d : Bool . (b c))) ((\ b : Bool . (if c then b else a)) (false b)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if (\ c : Bool . true) then (if false then c else a) else (if a then b else false))))
(((if true then false else a) (if true then b else a)) (if (if a then (a c) else (b true)) then (if (\ e : Bool . a) then c else (\ b : Bool . b)) else (\ d : Bool . (\ a : Bool . c))))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . a) (a false)))
((if (if (if true then (\ d : Bool . b) else (if true then c else b)) then (if a then false else a) else (\ a : Bool . c)) then (if c then c else (if b then c else c)) else (false (\ b : Bool . a))) ((if c then true else (c true)) (\ a : Bool . c)))
(if ((if c then true else true) ((if true then b else a) b)) then ((\ c : (Bool -> Bool) . (true a)) ((if a then false else b) (\ a : Bool . b))) else (if (\ a : Bool . true) then (if c then a else (if c then a else false)) else (if false then false else c)))
(((\ e : Bool . c) (if a then (if true then false else a) else (b false))) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . c)))
((if ((\ c : Bool . b) (\ e : Bool . b)) then ((\ a : Bool . a) (if false then a else false)) else ((\ c : Bool . false) (if a then (true b) else c))) ((if (false c) then false else (if true then a else c)) (\ e : (Bool -> Bool) . false)))
(if (\ c : ((Bool -> Bool) -> Bool) . (if (if b then true else false) then b else (\ b : Bool . true))) then (if (if (b (\ d : Bool . true)) then (false true) else (\ a : Bool . b)) then (\ d : (Bool -> Bool) . (\ a : Bool . true)) else (if b then (if b then false else a) else a)) else ((\ b : Bool . b) (\ c : (Bool -> Bool) . a)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . ((\ d : (Bool -> Bool) . c) (true b)))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ c : (Bool -> Bool) . (false c)) (if (if false then c else false) then true else c))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ b : Bool . false) (\ d : Bool . a))))
((\ c : ((Bool -> Bool) -> Bool) . (b (false a))) (\ a : (Bool -> Bool) . (\ a : (Bool -> Bool) . a)))
(if (((\ d : Bool . c) (if (true b) then c else b)) (a true)) then (\ c : (Bool -> Bool) . ((c false) (\ a : Bool . a))) else (if (if (a b) then ((if true then a else true) (if a then a else c)) else (if (if false then false else a) then false else c)) then ((\ a : Bool . false) (if true then a else c)) else (if (if (c b) then b else (if false then c else false)) then (\ e : Bool . true) else (\ c : Bool . false))))
(((if c then b else false) (false c)) ((if false then (\ e : Bool . true) else a) ((\ d : Bool . true) (if true then false else (if false then true else b)))))
(((if b then c else a) (\ d : (Bool -> Bool) . (if true then b else c))) (if (if a then (\ a : Bool . a) else (c false)) then (if (if true then c else a) then false else false) else ((false true) (\ d : Bool . true))))
((if (if c then b else c) then (b false) else (a (if true then false else c))) (if (if a then a else true) then (\ e : Bool . false) else ((if true then c else a) (\ e : Bool . true))))
(\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((if a then (if true then a else c) else b) ((if a then true else b) (\ c : Bool . true))))
(if ((if (c true) then ((false c) (\ c : Bool . a)) else (\ e : Bool . (\ b : Bool . false))) (\ e : (Bool -> Bool) . b)) then (\ d : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : (Bool -> Bool) . (c c))) else (if ((if (\ b : Bool . false) then a else a) (a c)) then (\ c : (Bool -> Bool) . (if c then a else b)) else (\ a : (Bool -> (Bool -> Bool)) . (\ a : (Bool -> Bool) . (if a then c else a)))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (\ e : Bool . (c true))))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if (\ b : Bool . true) then (if (true false) then (\ d : Bool . true) else a) else (if a then a else true)) then (\ e : (Bool -> Bool) . (\ c : Bool . false)) else (\ d : ((Bool -> Bool) -> Bool) . (b (true b)))))
(\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((if (\ b : Bool . true) then (\ a : Bool . false) else a) ((\ c : Bool . (true true)) ((if false then false else c) (\ e : Bool . true)))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if true then true else (a b))))
(((((\ d : Bool . c) c) (c a)) ((\ a : Bool . false) (\ e : Bool . a))) ((if (if (c true) then (true false) else (if c then c else b)) then (c a) else (b (\ b : Bool . b))) (\ c : (Bool -> Bool) . (if c then a else a))))
(if (\ a : (Bool -> (Bool -> Bool)) . (\ d : Bool . false)) then ((true (\ d : Bool . c)) ((false c) true)) else (if (\ d : (Bool -> Bool) . (if false then a else true)) then (\ b : (Bool -> Bool) . (if (\ d : Bool . a) then (if a then true else b) else c)) else ((\ b : Bool . b) (\ c : Bool . a))))
(if (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((a a) (false a))) then (\ b : (Bool -> Bool) . (c b)) else (\ c : (Bool -> Bool) . (\ b : (Bool -> Bool) . (\ a : Bool . b))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : (Bool -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . a)))
(\ c : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((\ c : (Bool -> Bool) . (\ d : Bool . (if true then false else b))) ((\ a : Bool . b) (a false))))
(if (((\ c : Bool . b) (a b)) (if false then (if true then a else b) else (false a))) then (((if c then false else false) (if false then true else b)) (\ a : (Bool -> Bool) . (if true then false else (a true)))) else (if ((\ d : Bool . false) false) then ((if false then a else b) (\ c : Bool . c)) else (if (if true then true else b) then c else (true true))))
(if (((if (\ b : Bool . b) then (\ b : Bool . a) else false) (if true then true else a)) (\ b : (Bool -> Bool) . (if (if a then true else b) then (\ a : Bool . true) else (c c)))) then ((\ a : Bool . true) ((a a) (b a))) else (\ c : ((Bool -> Bool) -> (Bool -> Bool)) . (if false then false else false)))
((if (\ c : Bool . c) then (if (false a) then (\ a : Bool . b) else (b c)) else (if (a c) then (if a then true else a) else (\ a : Bool . b))) (\ d : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if (\ c : Bool . c) then (if b then b else (if c then false else true)) else ((c true) (\ a : Bool . false)))))
(\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . ((\ c : (Bool -> Bool) . (\ d : Bool . b)) (if (if (if b then false else true) then true else (if a then true else a)) then (b a) else (\ d : Bool . (if a then a else b)))))
(if ((\ e : Bool . a) (c b)) then (if (if (if c then (if c then c else a) else (if true then c else true)) then (if c then true else false) else (if b then a else true)) then (if (if false then c else false) then (\ a : Bool . b) else (false true)) else (\ c : (Bool -> Bool) . (\ d : Bool . a))) else (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (a c)))
(if (\ c : (Bool -> Bool) . (if (b c) then false else (a b))) then (if (if (false a) then (c b) else true) then ((false b) (\ c : Bool . a)) else (if (\ b : Bool . c) then (if (\ b : Bool . false) then (b false) else (if c then b else c)) else (if b then c else a))) else (if (\ a : Bool . (if false then false else true)) then ((\ b : Bool . true) (if a then true else c)) else ((b b) c)))
(if ((true (\ c : Bool . true)) (if (a false) then (\ a : Bool . b) else b)) then (if (\ a : ((Bool -> Bool) -> Bool) . (if true then a else b)) then (if (\ a : Bool . b) then false else (if false then true else false)) else (\ d : (Bool -> Bool) . (\ d : Bool . c))) else (if (\ b : (Bool -> Bool) . false) then (a (true c)) else (if b then (c b) else (a true))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool)))) . (if (false (b b)) then (if c then false else (if b then b else c)) else (if b then a else false)))
(if (if (if (if false then true else b) then (if b then a else c) else (true a)) then (if (if true then false else b) then (true c) else (if false then a else (if c then false else c))) else ((if (\ b : Bool . false) then (if true then c else true) else c) ((\ a : Bool . true) true))) then (\ e : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if c then c else c) then (b b) else (false c))) else ((a b) ((if a then b else a) (c a))))
(((if (\ d : Bool . false) then b else b) (false a)) (\ e : (Bool -> Bool) . (\ d : (Bool -> Bool) . (\ e : Bool . a))))
(if ((if (if (if true then false else false) then (if b then false else b) else b) then (\ d : Bool . c) else (\ d : Bool . a)) (\ d : (Bool -> (Bool -> Bool)) . (if true then (if false then b else true) else c))) then ((if a then b else false) (\ e : Bool . a)) else (if (\ c : (Bool -> Bool) . c) then (\ c : Bool . false) else ((\ c : Bool . a) true)))
(if (\ c : (Bool -> (Bool -> Bool)) . (c true)) then (if (\ c : Bool . a) then (\ c : (Bool -> Bool) . (if false then false else b)) else (\ d : (Bool -> Bool) . b)) else (\ e : (Bool -> Bool) . (\ a : Bool . false)))
((if ((if b then (\ a : Bool . b) else (if a then false else c)) (true (\ e : Bool . b))) then (if (if b then a else false) then b else c) else (\ c : (Bool -> Bool) . (if (true false) then true else a))) (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (a true))))
(if ((if true then a else true) (if a then b else a)) then ((\ d : Bool . (if b then b else a)) (if (\ a : Bool . (if true then false else false)) then (b true) else (if a then (if c then c else a) else c))) else ((a true) (\ c : Bool . a)))
(\ c : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ d : (Bool -> Bool) . (false false)))
((\ b : (Bool -> Bool) . (a false)) ((if b then (\ d : Bool . false) else (if b then c else a)) (if b then a else false)))
(if ((\ e : (Bool -> Bool) . c) ((b true) (if b then false else b))) then ((if (if b then b else true) then b else true) (\ d : (Bool -> Bool) . (\ c : Bool . c))) else ((if false then false else c) (\ d : (Bool -> Bool) . (\ c : Bool . c))))
(\ a : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . (if ((if false then false else a) false) then ((if false then a else (if c then b else false)) (\ e : Bool . false)) else ((if c then c else c) (b b))))
(\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if a then false else a) (\ e : (Bool -> Bool) . (\ e : Bool . b))))
(if ((if c then (false false) else c) (if (b c) then c else b)) then ((if b then (\ a : Bool . b) else a) (c true)) else (if (if b then true else false) then ((if true then a else (if true then c else true)) (if a then false else c)) else (if c then b else (\ d : Bool . false))))
(\ b : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ c : Bool . b)))
(\ c : (((Bool -> Bool) -> (Bool -> (Bool -> Bool))) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . ((if a then true else true) ((if false then b else a) (\ c : Bool . a))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> (Bool -> Bool))) . (if (if ((if a then c else b) (if a then true else a)) then (if (\ a : Bool . b) then (\ c : Bool . b) else (if b then b else false)) else (c c)) then (if (if false then (\ b : Bool . false) else (if false then a else c)) then (b a) else (if true then false else c)) else ((a a) (if false then false else false))))
((if (false false) then (b b) else (a c)) (\ a : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (\ c : Bool . b) then a else (if false then true else false))))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (\ d : (Bool -> Bool) . (c false))) then ((if true then c else true) (\ b : Bool . (b b))) else (\ e : (Bool -> Bool) . (c (false true))))
(if ((a a) (if true then true else (false b))) then (if (\ b : (Bool -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . b)) then (if b then a else a) else (if ((\ c : Bool . b) (if false then true else c)) then (\ d : Bool . a) else (\ a : Bool . false))) else (\ c : (Bool -> Bool) . (c b)))
(\ a : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> ((Bool -> Bool) -> Bool))) . (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if b then (if c then c else a) else (\ b : Bool . false))))
(if (if (\ c : Bool . (if a then b else a)) then (\ a : (Bool -> Bool) . ((if c then false else a) (\ c : Bool . a))) else (if true then a else b)) then (\ c : ((Bool -> Bool) -> Bool) . (\ c : Bool . (\ a : Bool . false))) else ((if c then a else (if c then c else c)) ((\ c : Bool . false) (\ b : Bool . a))))
((\ c : (Bool -> Bool) . (if (\ e : Bool . false) then false else true)) (if (\ e : Bool . c) then (c false) else (c b)))
(if (if (if false then false else b) then (\ a : Bool . b) else (b true)) then (\ d : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ b : (Bool -> Bool) . (\ b : (Bool -> Bool) . (c a)))) else (if (a (\ e : Bool . false)) then (if true then false else (\ d : Bool . true)) else (if (\ d : Bool . false) then (\ a : Bool . c) else true)))
(((\ b : Bool . false) (true a)) ((b (a c)) (if c then a else false)))
(((true (\ b : Bool . c)) (\ d : Bool . b)) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (true (if b then a else a))))
(\ e : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : Bool . (if a then a else false)) (\ c : Bool . true))))
(if (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . ((c b) (if false then (\ d : Bool . b) else (c a)))) then (if (if a then b else (\ b : Bool . true)) then (\ c : (Bool -> Bool) . (\ e : Bool . b)) else (\ c : (Bool -> Bool) . (if true then c else b))) else (((if c then true else false) (\ a : Bool . false)) (a a)))
(if (if (if (b true) then (\ b : Bool . a) else (\ b : Bool . c)) then ((true b) (if a then true else a)) else ((\ a : Bool . b) (false b))) then (if (if (if true then a else true) then (b a) else (if true then false else false)) then (\ c : Bool . (\ d : Bool . b)) else (\ a : Bool . (c a))) else ((\ c : Bool . true) (\ b : (Bool -> Bool) . (\ b : (Bool -> Bool) . true))))
(\ c : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (if ((if false then false else a) a) then (\ d : (Bool -> Bool) . (if c then b else false)) else (\ b : Bool . (a b))))
((if (false b) then (b a) else (\ e : (Bool -> Bool) . true)) (if (if (c b) then (b a) else ((if a then b else c) (\ e : Bool . false))) then (\ d : (Bool -> Bool) . (\ c : (Bool -> Bool) . false)) else (b a)))
(if ((false (b a)) (if false then a else c)) then (\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : Bool . a)) else (if (if (c true) then true else (\ b : Bool . true)) then (if (\ c : Bool . false) then (a c) else (if a then a else false)) else (if a then false else c)))
(\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (if (if (a a) then (false (\ c : Bool . b)) else (if (\ a : Bool . true) then b else (if c then c else b))) then ((false false) ((\ a : Bool . b) (if true then false else false))) else ((if (\ a : Bool . false) then (\ a : Bool . c) else (true true)) (if b then true else c))))
(if (\ b : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (if ((\ c : Bool . true) (\ d : Bool . false)) then (\ b : Bool . (\ a : Bool . a)) else (\ c : (Bool -> Bool) . (c c)))) then (if (if c then false else (\ e : Bool . a)) then (((c false) false) (\ d : (Bool -> Bool) . true)) else (true (if false then c else b))) else (if (true (\ b : Bool . a)) then (if true then a else c) else (c b)))
((if (if (c a) then (true true) else c) then (\ a : Bool . (if b then b else a)) else (if true then b else a)) ((\ b : (Bool -> Bool) . (\ c : (Bool -> Bool) . b)) (true b)))
(\ b : ((Bool -> Bool) -> (Bool -> Bool)) . ((\ d : Bool . true) (true b)))
((\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if c then a else true)) (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> (Bool -> Bool))) . ((\ e : Bool . false) (\ a : Bool . false))))
(\ a : (((Bool -> Bool) -> Bool) -> (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool))) . (\ b : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (if c then (if a then true else b) else c)))
(((\ e : (Bool -> Bool) . c) (c true)) (if (\ a : Bool . false) then (b false) else ((a a) (if c then b else true))))
(((if false then (\ a : Bool . false) else true) (if true then a else false)) (\ a : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . (\ c : Bool . c)))
((if (c c) then (c c) else (\ b : Bool . true)) (if ((\ d : (Bool -> Bool) . (c false)) (\ e : Bool . false)) then (if (if a then false else true) then (\ c : (Bool -> Bool) . false) else (\ c : Bool . true)) else (if ((b c) (\ b : Bool . true)) then (\ b : Bool . true) else (\ b : Bool . false))))
((((if c then a else a) true) (\ d : Bool . c)) (if (\ d : Bool . true) then (\ b : (Bool -> (Bool -> Bool)) . (c (\ e : Bool . c))) else (if c then false else b)))
(if (if (if a then (false c) else a) then (\ a : Bool . false) else (\ e : Bool . false)) then (if ((\ d : Bool . true) b) then (\ d : Bool . a) else (if c then false else false)) else ((\ c : Bool . (\ c : Bool . b)) (if b then true else false)))
((if (if false then b else true) then (\ e : (Bool -> Bool) . b) else (\ e : Bool . a)) (((if c then (c false) else (\ a : Bool . c)) (if (\ d : Bool . b) then (\ b : Bool . false) else (if c then a else false))) ((if (a false) then a else true) (c (\ e : Bool . b)))))
(\ c : ((Bool -> Bool) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (((if c then (if c then b else c) else (\ e : Bool . a)) (\ e : (Bool -> Bool) . (\ a : Bool . true))) (if (b a) then false else false)))
((if (if (a (\ d : Bool . c)) then (\ c : Bool . false) else (c a)) then (if c then (if false then b else a) else c) else (\ a : (Bool -> (Bool -> Bool)) . (if b then b else (if false then true else true)))) ((if (if b then (a c) else (\ b : Bool . c)) then (\ d : Bool . (\ c : Bool . c)) else (if (b c) then (false b) else (if true then true else false))) ((if false then (\ d : Bool . a) else true) (\ b : Bool . c))))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : (Bool -> Bool) . (\ b : (Bool -> Bool) . a)))
(\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (c true) then (((if c then c else false) true) (\ b : Bool . (a c))) else (true c)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ d : (Bool -> Bool) . (if false then c else c)))
((if (c false) then (\ a : Bool . a) else (true c)) ((if b then (if a then true else a) else true) (if (a b) then (\ c : Bool . (\ e : Bool . a)) else (\ d : (Bool -> Bool) . (true c)))))
(\ e : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ a : (Bool -> Bool) . (if true then true else c)) (\ c : Bool . (if a then b else b))))
((if (if (\ c : Bool . b) then c else a) then (if (true true) then a else a) else (\ c : (Bool -> Bool) . (a false))) ((true c) (if false then true else (if false then true else b))))
(if (if (b (if b then a else a)) then (\ b : (Bool -> Bool) . (\ b : Bool . true)) else (\ e : (Bool -> Bool) . c)) then (if (\ b : (Bool -> Bool) . (if c then false else false)) then (false a) else (if (c true) then (if (false b) then (c true) else (if true then true else false)) else (\ c : Bool . a))) else (if (((true a) (\ a : Bool . false)) (false true)) then ((if a then (\ e : Bool . a) else (b false)) (true true)) else ((\ b : Bool . b) (if a then a else true))))
((if (if (false b) then false else (a a)) then (\ d : Bool . a) else (b b)) (((if c then c else b) (if a then b else false)) (\ e : (Bool -> Bool) . (\ a : Bool . c))))
(if (((\ d : Bool . false) (\ e : Bool . true)) (if (false a) then (a c) else true)) then (if (b a) then (\ c : Bool . c) else (if (true c) then (if true then true else b) else (if (if b then b else b) then (c c) else a))) else (\ e : (Bool -> Bool) . (if (b a) then (if c then a else b) else false)))
(if ((\ c : Bool . (b a)) (\ e : Bool . (if a then c else false))) then (if (a (if true then c else c)) then (if (if c then true else a) then a else b) else (if (if b then a else false) then (if false then a else true) else (a a))) else ((\ a : Bool . a) (if a then c else a)))
(((false (a c)) (if (if true then c else true) then (if b then true else (\ a : Bool . b)) else (if (\ c : Bool . b) then (true b) else (b false)))) (if (if (if b then b else c) then false else (\ d : Bool . a)) then (if (\ e : Bool . a) then (\ a : Bool . true) else c) else ((if true then a else false) (false b))))
((\ c : (Bool -> (Bool -> Bool)) . (if (true false) then true else (false a))) (((if (a false) then (if c then a else c) else (\ e : Bool . true)) (\ c : (Bool -> Bool) . (if false then b else b))) (if false then (true true) else c)))
(\ d : ((Bool -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . (\ e : Bool . a)))
(if (if (if b then c else c) then (if (\ e : Bool . c) then (if b then c else false) else false) else (true a)) then (if (if (\ e : Bool . true) then a else (\ d : Bool . b)) then (\ a : (Bool -> Bool) . (if false then b else true)) else (a b)) else (\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . (if (if c then false else a) then b else (\ b : Bool . true))))
(((if (if c then b else b) then true else (if false then true else false)) (if (\ a : Bool . true) then (if (\ e : Bool . b) then (a false) else c) else (if a then c else false))) ((\ e : (Bool -> Bool) . (\ a : Bool . true)) (if (b true) then (\ e : Bool . c) else ((b c) c))))
(\ e : ((Bool -> (Bool -> Bool)) -> ((Bool -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (c b) then (false (if true then false else c)) else (if true then true else a)))
(\ e : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> (Bool -> Bool)))) . (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . (if (a true) then false else (a b))))
(\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (\ c : (Bool -> Bool) . (false false))))
(((if false then c else (a true)) ((\ c : (Bool -> Bool) . false) (if (true b) then b else b))) (\ a : ((Bool -> Bool) -> (Bool -> Bool)) . (if (\ c : Bool . c) then (if false then false else c) else (c c))))
(((if true then (true a) else c) (\ e : (Bool -> Bool) . a)) (\ a : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . ((if true then false else b) (if c then b else false))))
(\ b : (((Bool -> Bool) -> Bool) -> ((Bool -> Bool) -> Bool)) . ((\ a : (Bool -> Bool) . (if false then c else c)) (\ d : (Bool -> Bool) . (\ c : (Bool -> Bool) . (c b)))))
((\ a : (Bool -> Bool) . (\ e : Bool . b)) ((if c then true else false) (\ e : (Bool -> Bool) . b)))
(if (if (c (if false then b else c)) then (if (c (\ c : Bool . false)) then (if a then (c b) else a) else (if c then c else b)) else (if (if false then c else (\ d : Bool . false)) then (\ d : Bool . (\ d : Bool . false)) else (if true then false else b))) then (\ e : (((Bool -> Bool) -> Bool) -> (Bool -> Bool)) . ((a (\ a : Bool . false)) ((\ c : Bool . false) true))) else ((\ c : Bool . (\ a : Bool . false)) (if (true b) then (if (a a) then (if c then a else c) else false) else (c (if b then c else b)))))
((if (if (if b then b else a) then c else c) then (if c then b else b) else ((\ c : Bool . true) (c b))) (if ((\ e : Bool . b) (if false then c else true)) then (\ c : Bool . (\ e : Bool . true)) else (\ b : (Bool -> Bool) . (true c))))
(\ c : (((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) -> (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool))) . (if (if (if false then true else false) then false else (if c then a else false)) then (b c) else (\ a : Bool . a)))
(\ b : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . ((\ d : Bool . false) (c c)))
(\ c : ((Bool -> (Bool -> Bool)) -> ((Bool -> Bool) -> (Bool -> Bool))) . (if (\ d : (Bool -> Bool) . (if a then b else (\ e : Bool . a))) then (\ d : Bool . true) else ((false a) (\ c : Bool . a))))
((if (if true then false else false) then ((true a) b) else (false c)) (\ d : (Bool -> Bool) . ((\ b : (Bool -> Bool) . (a c)) (false (if true then true else true)))))
(if (if (if false then (if c then a else b) else (\ b : Bool . b)) then (\ a : Bool . false) else (b a)) then ((true c) (if b then a else c)) else (\ c : (Bool -> Bool) . (true b)))
(\ a : ((Bool -> Bool) -> ((Bool -> Bool) -> (Bool -> Bool))) . (\ e : (Bool -> Bool) . (\ b : Bool . b)))
(if ((if false then false else true) (\ e : Bool . false)) then (\ a : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (if (if true then a else (if c then a else true)) then (if true then false else true) else (c false))) else (if (\ e : (Bool -> Bool) . true) then ((if false then true else b) b) else (\ a : Bool . false)))
((if (if (if a then true else b) then a else (if a then b else a)) then (if (if true then a else false) then (a c) else (a false)) else (true b)) (if (\ e : Bool . c) then (\ b : (Bool -> Bool) . true) else (if a then b else c)))
((if (if true then false else c) then (\ a : Bool . (\ a : Bool . false)) else (false false)) (if (if (b b) then (\ b : Bool . true) else (c b)) then (\ b : Bool . c) else (if true then (\ e : Bool . a) else (\ e : Bool . c))))
(((\ a : Bool . c) (\ a : Bool . (if c then a else a))) (\ a : (Bool -> Bool) . (if (a true) then (c c) else false)))
(if (\ b : ((Bool -> Bool) -> (Bool -> Bool)) . (if ((if true then true else b) (if false then true else b)) then (if true then b else b) else (true false))) then ((\ d : Bool . b) ((\ b : Bool . c) a)) else ((if true then (\ b : Bool . true) else (a a)) ((b b) c)))
(\ a : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ d : ((Bool -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ c : Bool . true)))
((if (if true then false else c) then (false (if c then b else false)) else (if (if a then false else true) then (\ a : Bool . false) else false)) ((\ d : Bool . b) (true b)))
(if (if (\ d : Bool . (false a)) then (true true) else (if true then b else false)) then (\ d : (((Bool -> Bool) -> (Bool -> Bool)) -> ((Bool -> Bool) -> Bool)) . (\ e : (Bool -> Bool) . (if a then false else true))) else (if (\ b : (Bool -> (Bool -> Bool)) . (true false)) then (if (\ c : (Bool -> Bool) . (\ c : Bool . a)) then ((\ e : Bool . b) false) else (\ a : Bool . true)) else (if c then (b false) else (if a then c else a))))
(if (\ a : (Bool -> (Bool -> Bool)) . (if false then (if a then false else b) else false)) then (if (\ a : (Bool -> Bool) . (if true then b else true)) then (if false then (\ b : Bool . false) else (\ d : Bool . c)) else ((if c then false else c) (\ d : Bool . true))) else ((\ a : (Bool -> Bool) . a) (\ a : (Bool -> Bool) . (if a then true else a))))
(\ e : ((Bool -> Bool) -> (Bool -> Bool)) . (((a a) b) (if c then a else b)))
(if ((if c then true else true) (b b)) then (if (\ c : (Bool -> Bool) . false) then (\ c : (Bool -> Bool) . (if true then (\ a : Bool . b) else c)) else (if (if c then false else false) then b else (if false then false else b))) else ((\ d : ((Bool -> Bool) -> Bool) . (\ b : Bool . a)) (\ e : (Bool -> Bool) . (false c))))
(\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (\ c : (Bool -> Bool) . ((if false then a else false) (\ a : Bool . true))))
((\ b : ((Bool -> Bool) -> ((Bool -> Bool) -> Bool)) . (\ c : (Bool -> Bool) . (if false then c else a))) (\ d : ((Bool -> Bool) -> (Bool -> Bool)) . ((if b then false else true) (if (if b then b else a) then (if a then a else b) else (if a then true else b)))))
(if (\ e : ((Bool -> Bool) -> (Bool -> (Bool -> Bool))) . (a true)) then (\ c : (((Bool -> Bool) -> (Bool -> Bool)) -> (Bool -> Bool)) . (\ e : (Bool -> (Bool -> Bool)) . (a c))) else (if (if (false false) then c else (\ b : Bool . b)) then (if (if b then a else c) then (\ d : Bool . true) else (c false)) else (\ d : Bool . a)))
