(\ b . (iszero (iszero 1)))
({ b = (iszero (let d = (let a = c in "boy") in (pred (\ a . a)))) , e = ({ e = (pred c) , d = (if (iszero 0) then 1 else "boy") }) })
(let a = (let a = ((if ({ d = false , a = "apple" }) then 0 else (let c = false in a)) . c) in (iszero 0)) in ((({ c = c , e = (let d = b in "apple") }) (pred (succ b))) ((false . d) (let a = b in b))))
((pred (let a = a in b)) . e)
((succ (\ d . b)) . b)
({ d = (succ (iszero (succ b))) , c = (\ a . (a . c)) })
((iszero (iszero (succ "boy"))) . c)
((let b = (\ d . "apple") in (iszero (pred 2))) . a)
(pred ((succ (let a = (\ d . false) in 0)) ((\ c . "apple") . e)))
((pred (pred false)) . a)
(let e = ((pred b) ((\ a . c) false)) in ({ c = (pred a) , d = (iszero (iszero 2)) }))
((iszero (\ b . a)) . e)
(pred ({ a = ({ c = true , a = true }) , a = (succ 0) }))
(let d = (iszero (let c = "apple" in 2)) in (if ((1 c) . a) then ((if a then "apple" else 1) . d) else (iszero true)))
(\ c . (\ d . (let b = (succ a) in (if a then "apple" else "boy"))))
(\ b . ({ d = (pred 1) , d = (false . b) }))
(({ c = (pred (pred b)) , d = (pred "boy") }) (if ({ d = (pred a) , d = "boy" }) then (\ c . false) else ("boy" (c b))))
(if (let a = ({ e = (iszero 1) , a = true }) in (if ({ c = 2 , c = 2 }) then (true "boy") else (iszero b))) then (if (({ c = "apple" , a = b }) (succ c)) then (let d = "apple" in (\ c . "apple")) else (if ({ a = "apple" , b = b }) then ("boy" false) else 0)) else ({ e = (if false then false else "apple") , c = (if b then (succ false) else (b . a)) }))
({ b = (let a = (succ false) in (let a = c in "boy")) , d = (iszero (pred (({ a = "boy" , c = true }) . a))) })
({ d = (succ (if 2 then c else (if 0 then 2 else 2))) , d = ({ c = ((a 0) (if b then 1 else a)) , e = (pred false) }) })
(pred ((if b then ({ e = 1 , d = c }) else (2 b)) ({ c = true , b = a })))
(\ c . ((succ 2) . b))
(let c = (pred (pred (pred 2))) in (\ b . (succ true)))
((\ e . (pred 2)) . a)
(if (iszero (succ false)) then ((let e = false in ({ c = c , b = b })) (if (pred 0) then (succ "apple") else (pred 2))) else (iszero (if ((\ e . b) . c) then (iszero 0) else (succ 2))))
(iszero (iszero (if (\ e . "boy") then ({ a = "apple" , d = b }) else (\ b . c))))
(pred ({ b = (if (pred true) then 2 else (iszero "boy")) , b = ({ e = ("apple" 0) , a = ({ e = false , d = a }) }) }))
(\ c . ((({ e = 0 , b = c }) . c) (\ c . true)))
(iszero (pred (\ e . 1)))
(\ e . (let a = ("boy" true) in (pred a)))
(if (if (b (\ a . 0)) then (pred a) else (iszero "apple")) then ((pred ({ a = 1 , e = 2 })) ({ e = (let e = 2 in "boy") , b = (\ a . "apple") })) else (if (({ d = c , a = true }) b) then (if (if a then "boy" else false) then (false (succ a)) else (pred b)) else (iszero (succ b))))
((if ((1 . a) . c) then (let a = (let b = 0 in 2) in (succ false)) else ({ b = a , b = "apple" })) . c)
(succ ({ b = (iszero (let b = false in a)) , b = (pred "apple") }))
(if (\ e . (pred (let d = b in c))) then (let a = (let e = 2 in 2) in (if ({ a = "boy" , b = 0 }) then (if true then false else a) else b)) else (\ e . (\ b . a)))
(pred (\ b . (c . b)))
(if (pred (let b = (iszero 0) in (2 2))) then (succ (pred "boy")) else (("apple" . a) . b))
(let a = ((\ e . true) . c) in (\ c . (if (let e = (\ a . 2) in false) then ("boy" a) else (\ e . (succ "boy")))))
(pred (\ e . (\ d . (2 0))))
({ e = (let d = (succ ({ e = false , c = c })) in (succ (let a = "apple" in (succ b)))) , d = (let a = (1 . e) in (let a = a in 0)) })
(let b = (if ({ d = 0 , a = false }) then (let a = 0 in "apple") else (\ b . 1)) in (succ ({ e = 2 , b = 1 })))
(iszero (\ b . (0 (if "apple" then a else b))))
(((succ (if 1 then 2 else "boy")) . a) . b)
({ a = (\ a . (let d = c in 1)) , c = ((iszero c) . b) })
(iszero (((iszero false) (if a then (succ true) else (pred 1))) (let a = (iszero ("boy" . e)) in ((\ e . 0) (\ b . a)))))
({ b = (if (succ 1) then (\ b . ({ e = true , d = b })) else (\ c . "apple")) , e = ({ d = (if (iszero ({ c = c , d = a })) then (\ b . 0) else (b . c)) , b = (pred (if c then 0 else "apple")) }) })
(succ (if (succ (succ 0)) then ((iszero 1) . c) else (iszero (b . d))))
(if ((\ b . (\ a . "apple")) (pred (succ 2))) then (pred (pred (true . b))) else (pred (if "boy" then 0 else 2)))
({ c = ((\ e . (if b then "boy" else b)) ({ e = "apple" , c = (let a = 0 in false) })) , d = (if (false . c) then ((if b then 1 else (pred 1)) . b) else (b "apple")) })
(iszero (pred ((true . e) . a)))
(\ c . (\ c . (c "boy")))
({ a = ((succ "apple") . d) , d = (({ a = (1 . c) , b = (false 2) }) ({ a = (if (b c) then (succ "boy") else (\ a . true)) , a = (if (0 2) then (let e = a in a) else (\ c . c)) })) })
(pred (pred ((iszero (1 . d)) . b)))
(if (iszero (succ "apple")) then (let b = (b . a) in (if 2 then "apple" else b)) else (succ (\ b . true)))
(iszero (pred ("boy" . b)))
(if ({ d = (0 . d) , b = (if false then ("boy" . c) else false) }) then ((if false then b else 0) . e) else (succ (({ b = false , e = true }) "boy")))
(iszero (\ c . (2 . e)))
({ c = ({ c = (let b = b in b) , e = (\ e . b) }) , e = (iszero ({ e = c , a = (let a = false in 2) })) })
((\ a . (\ d . 0)) . a)
((iszero (succ 2)) (iszero (a . b)))
(let c = (let e = (pred 2) in ((pred true) . c)) in (if ((2 . e) . c) then (("boy" . b) . b) else (succ 0)))
(pred (if (({ e = b , e = true }) (pred "apple")) then (succ (if ({ b = "apple" , d = b }) then 1 else 0)) else (pred (succ "apple"))))
(iszero (if (if (\ c . 1) then (\ e . b) else (b . b)) then ((iszero 0) (let c = 2 in 2)) else (iszero "boy")))
((let e = (iszero "apple") in (let e = 0 in 0)) (let c = (if c then false else c) in (pred (succ a))))
({ b = ((succ (if 0 then false else false)) ({ e = a , d = a })) , c = (pred (2 . e)) })
(({ d = (if (let c = "boy" in 2) then ({ d = 1 , e = "apple" }) else (pred b)) , e = (if (let d = 2 in true) then (let c = (if "boy" then "apple" else 0) in 2) else (if (\ b . true) then ("boy" "apple") else (if true then false else 1))) }) (\ b . ((\ c . "boy") . e)))
(\ b . ({ c = (\ a . (let a = false in b)) , d = (pred (succ 2)) }))
({ a = (let b = (let c = 0 in "boy") in (succ "apple")) , d = (((({ c = a , a = 2 }) (let c = c in b)) (if "apple" then b else 2)) . b) })
(\ a . (let d = (pred "apple") in (pred (if 0 then true else "apple"))))
(pred (\ e . (\ a . (succ b))))
(\ e . (iszero ((let d = true in b) . d)))
(if (let a = (b a) in (succ 0)) then (({ c = (let a = false in 1) , c = (\ d . 0) }) (\ e . 2)) else (if (true false) then (succ (iszero true)) else (2 "boy")))
(let c = (succ (let e = (true . c) in (succ "boy"))) in (((\ c . c) . e) (pred (iszero true))))
({ c = (succ (({ b = (if 1 then b else "boy") , b = true }) . a)) , a = (iszero (succ "boy")) })
(iszero ((succ (c 1)) (\ e . 2)))
(((pred (1 . e)) (\ b . (iszero 1))) . e)
(if ((succ (true c)) . e) then (let e = (succ c) in (pred (pred 2))) else (\ b . ({ c = a , d = true })))
(if (if (\ c . (if false then 1 else b)) then (pred (if a then b else b)) else (succ (succ ({ c = "apple" , b = "apple" })))) then (pred (if (succ a) then (\ d . a) else c)) else (let b = (let d = (\ d . (succ true)) in (let a = false in false)) in (\ e . (pred false))))
(({ e = (iszero (0 . a)) , b = (if c then 1 else 2) }) (if (if false then "boy" else ("apple" . a)) then (if (if (let e = false in b) then (succ true) else 1) then (let a = b in 1) else ({ e = "apple" , b = 1 })) else (if (pred (\ a . c)) then (let d = "apple" in 0) else (iszero c))))
(let a = (if (let a = (if "apple" then false else c) in true) then (iszero (succ (\ b . b))) else ((succ false) . e)) in ({ e = ({ c = 2 , e = 0 }) , a = (true "boy") }))
(pred ((pred false) . b))
(pred (succ ((iszero 1) (pred (a a)))))
(iszero (if ({ b = (pred "apple") , e = ({ a = true , b = true }) }) then (pred 0) else (\ a . true)))
(let d = ({ a = (2 . d) , e = (if c then false else c) }) in (let a = (\ e . c) in (if (let e = b in b) then (\ c . 2) else 0)))
(if (iszero ((succ (if false then c else true)) ({ e = 0 , a = 0 }))) then (iszero (let b = 0 in false)) else ((pred (\ a . b)) . a))
(({ a = (\ c . (let a = b in b)) , a = (succ "boy") }) (let d = ({ c = false , b = true }) in (pred (let d = b in "boy"))))
(((succ false) . e) . a)
(iszero ({ e = (succ 2) , c = (iszero true) }))
(({ a = ({ d = (0 . c) , d = ((pred true) . a) }) , d = (succ "boy") }) . e)
(iszero ({ d = (if c then "apple" else 0) , e = (a . e) }))
({ c = ({ a = ((pred false) b) , e = ("boy" b) }) , b = (iszero ((succ a) . b)) })
((pred ((c . d) ("apple" . c))) . e)
(if ({ b = (iszero (2 (if "boy" then 1 else "apple"))) , e = (if true then (let b = a in 0) else a) }) then ((iszero 2) . d) else ((iszero "boy") . e))
(if (({ e = 1 , a = ({ d = 2 , d = b }) }) (({ a = 0 , b = "apple" }) . c)) then (pred (let e = ((let a = false in "boy") . b) in (pred (succ c)))) else (let a = (iszero "boy") in (let e = 2 in (if a then 2 else 2))))
(succ (\ d . (\ d . (iszero 0))))
((iszero ((succ "boy") (c c))) (iszero (let e = (pred "apple") in false)))
({ b = (iszero (true a)) , e = ({ b = (succ (c true)) , d = (if ({ c = c , b = true }) then ({ e = c , d = c }) else ((let e = b in "apple") ({ b = "apple" , b = 0 }))) }) })
((iszero (succ (2 . c))) . a)
(pred (succ ((iszero b) (pred a))))
((succ (\ e . 0)) (let c = (if 2 then false else 1) in (pred 1)))
(succ (if (let c = 0 in true) then (\ d . c) else (iszero (\ d . b))))
(\ c . (pred (pred (let d = true in a))))
((iszero (let d = (succ c) in ({ c = 0 , b = 2 }))) . a)
(if (succ (\ a . false)) then ((0 . c) . e) else (let b = (succ (iszero a)) in (false . a)))
(succ (\ c . (succ ({ e = true , e = 0 }))))
({ c = (if (if c then "boy" else a) then (pred false) else (b . b)) , c = (let e = (\ b . (if false then 2 else true)) in ({ c = true , e = "boy" })) })
(\ d . (\ c . (\ a . (1 "apple"))))
(succ ((succ 0) . d))
(succ (succ (iszero c)))
(iszero (\ a . ((let d = true in true) . b)))
(iszero (pred (\ b . true)))
((\ b . (succ 2)) (let e = (false . e) in ({ c = 2 , b = 1 })))
(succ (iszero (pred (\ a . "boy"))))
(pred (iszero ((pred "apple") false)))
({ c = ((let b = 2 in 0) (succ false)) , c = ({ e = ({ a = 2 , a = 0 }) , a = (\ c . b) }) })
(({ b = (iszero true) , c = (pred (2 false)) }) . d)
(\ e . ({ c = ({ e = false , a = true }) , d = (iszero (pred a)) }))
(iszero (if (a c) then (a . a) else (if (\ d . "boy") then 1 else 2)))
(iszero ((\ b . true) (let b = a in 0)))
({ d = (\ a . ({ b = 0 , d = (let c = c in "boy") })) , b = (\ e . (2 true)) })
(if (if (pred (\ e . c)) then (succ "boy") else (({ d = "boy" , b = a }) true)) then (pred ((let e = 1 in true) . a)) else ((if "apple" then 1 else 1) . d))
(\ b . (succ (if "apple" then 1 else true)))
(\ e . ((iszero (succ c)) (pred 2)))
(let e = (pred ((let c = false in "boy") . e)) in (({ b = 1 , e = (if b then c else 1) }) . a))
(iszero (iszero (b . e)))
(\ d . ((succ (2 a)) (succ a)))
(((let c = (pred b) in (\ b . 2)) . c) (let b = (if ((iszero 0) . d) then (let d = c in false) else (\ c . (if 0 then false else 1))) in ((\ b . true) . e)))
((iszero (if "apple" then false else c)) . a)
((let e = (iszero (iszero 0)) in (succ (if 2 then true else 1))) . a)
(iszero ((iszero ({ c = "apple" , d = c })) . a))
(let c = (if (iszero (iszero 0)) then (({ e = 0 , a = b }) ({ c = 2 , b = c })) else ((iszero "apple") . b)) in (let a = (iszero "apple") in (iszero ("boy" . b))))
(((true c) (pred "boy")) (let d = (succ (pred false)) in ({ b = 2 , c = b })))
(pred (iszero (let c = b in 1)))
({ c = (if (true a) then (\ a . false) else (succ "boy")) , e = (let d = (pred (b (pred "boy"))) in (pred (iszero c))) })
(let c = ({ d = (pred (pred (\ a . b))) , e = (\ c . (succ a)) }) in ((iszero b) (let a = (pred 1) in (succ b))))
(succ (\ c . (let e = (b . c) in (iszero (if "apple" then "boy" else 2)))))
(succ (((\ e . 2) . a) ((pred (succ 2)) (succ 1))))
((iszero (let c = (\ d . a) in b)) (succ (if 1 then (c "boy") else (pred true))))
((((pred 2) 1) . a) . c)
(let d = (if (let e = (let b = b in 2) in "apple") then (if a then (let b = "apple" in "boy") else (iszero "apple")) else (succ "boy")) in ((pred b) . a))
({ b = ({ b = (0 a) , b = (if a then c else "boy") }) , c = ((if 2 then "boy" else 0) ({ a = 1 , d = 0 })) })
(((1 . c) . e) . d)
(if (let a = (let d = (\ b . b) in (\ a . 1)) in (\ a . a)) then (iszero (iszero (pred false))) else (let c = (iszero ({ d = b , c = 0 })) in (true . b)))
({ a = ((if (succ "boy") then (pred c) else (let c = 2 in "apple")) (pred (pred 0))) , b = (iszero (let a = ((\ a . true) . b) in (0 b))) })
(((if ("apple" (true b)) then (let c = 0 in "apple") else ((if "boy" then 2 else a) (pred "boy"))) . c) . d)
((succ (succ (iszero 2))) . b)
(pred ((let a = (\ c . 1) in (0 "apple")) (pred a)))
((({ c = c , b = "boy" }) . d) (succ (succ (1 c))))
(if ((if "boy" then 2 else ({ e = c , e = c })) (\ b . b)) then (if (\ c . (0 2)) then (iszero (let a = true in "boy")) else ((pred false) (1 . a))) else (iszero (succ (let e = true in b))))
({ a = (((pred a) . c) . e) , b = (\ e . (\ d . (iszero c))) })
(succ (\ e . (iszero (iszero 1))))
(let a = (\ b . (succ 1)) in (let b = (\ e . (\ d . 0)) in (if (pred 0) then (let a = 0 in 0) else (let b = "boy" in 0))))
(let b = ((if b then "apple" else c) (iszero false)) in ((iszero (\ a . false)) . d))
(let d = (if (\ a . "apple") then ({ c = b , b = true }) else (if (succ a) then ({ c = a , e = b }) else a)) in ({ b = ({ e = 1 , c = true }) , d = (succ (succ 0)) }))
(pred ({ d = (if false then 0 else 2) , d = (iszero 0) }))
((pred (({ e = c , a = b }) true)) ({ a = (let e = (if (iszero "boy") then (\ d . true) else (if "apple" then true else true)) in (if (iszero 1) then (pred b) else b)) , b = ((succ (\ c . "apple")) (let d = "boy" in 0)) }))
(\ d . (if (iszero true) then (succ "apple") else (\ c . a)))
(if (iszero (iszero "apple")) then (pred (if ((succ 1) (\ e . 0)) then (pred false) else (true true))) else (iszero (if (succ "apple") then a else (\ a . true))))
(succ (iszero (iszero false)))
(succ (iszero (if true then "apple" else (succ 1))))
(if (pred (if (iszero "boy") then (pred "boy") else (succ "boy"))) then (let b = (let c = false in b) in ("boy" "boy")) else (\ c . (iszero "apple")))
(\ b . (((let b = a in (pred "apple")) (let c = c in 0)) ({ c = (succ b) , a = 0 })))
(\ a . (succ ({ b = (1 false) , e = ({ e = c , d = a }) })))
(if ((pred false) (succ a)) then (succ (if b then "boy" else false)) else ({ b = (if "apple" then false else c) , d = (let d = 2 in "apple") }))
({ a = (\ d . ((c . a) . a)) , a = (\ b . (succ (pred c))) })
(let d = ({ a = (succ (succ false)) , e = (iszero (let d = (pred false) in b)) }) in (({ a = (succ false) , c = (if c then c else 2) }) ((succ 1) (a a))))
(((\ c . (succ true)) ((let b = 1 in 1) (succ ({ b = a , a = false })))) (if (if 2 then 1 else "apple") then (let b = false in 0) else (if (if 2 then a else true) then (succ false) else "apple")))
((\ e . (({ b = true , b = b }) 1)) . e)
(((let e = (let c = 0 in "apple") in 0) (if "apple" then (iszero true) else 1)) . e)
(pred ({ d = (0 b) , e = (pred a) }))
({ e = (iszero (\ b . 0)) , d = (succ ({ e = (succ (2 "boy")) , b = (if 1 then 2 else (\ a . a)) })) })
((iszero ({ e = ("boy" (iszero 0)) , c = (false . b) })) . a)
(((succ (if b then "apple" else "apple")) (if (\ a . "boy") then ({ e = "boy" , b = (b 1) }) else (iszero false))) ({ d = (iszero (succ 1)) , d = ({ e = "boy" , e = "apple" }) }))
({ c = ((pred (succ "apple")) . b) , a = (if (pred (succ 2)) then (b "apple") else (false 0)) })
({ a = ((pred a) ({ a = "apple" , c = a })) , a = (iszero ({ b = (c . d) , d = ({ c = "apple" , e = a }) })) })
(let d = (iszero ((true . c) (iszero 1))) in (if (iszero (b . c)) then (succ ((iszero 2) . b)) else ((pred c) . e)))
(iszero (iszero (succ (if "apple" then "boy" else false))))
(iszero (((let b = "apple" in true) "boy") . b))
((\ c . (succ 0)) (iszero (\ e . "apple")))
(pred (if ({ d = (if b then 0 else true) , a = (a c) }) then (\ b . (\ b . false)) else (succ ({ b = (if true then c else 1) , e = (succ 1) }))))
(((\ d . 2) . c) ((iszero ({ a = "boy" , a = true })) . b))
(((let c = (\ b . "apple") in false) (if false then (0 . d) else 1)) (let e = (iszero 1) in (succ 2)))
(let b = (iszero (if "boy" then 1 else c)) in (({ e = 1 , c = 1 }) . c))
(iszero (((succ c) . d) (iszero (succ a))))
(let b = ({ e = (iszero "boy") , a = (pred c) }) in (if (iszero 2) then (succ 2) else ({ a = false , b = b })))
(\ e . (({ a = "apple" , b = (b . e) }) ((\ b . "boy") . a)))
({ d = (iszero (iszero false)) , b = (pred (let b = (true false) in 1)) })
(if (iszero (if false then c else true)) then (if (iszero false) then (true (\ d . a)) else (\ a . "boy")) else ((iszero (pred 1)) (succ 1)))
({ b = (\ a . ((if a then 0 else true) c)) , d = ({ d = (\ e . false) , d = ((iszero "boy") . e) }) })
({ e = (let c = (succ false) in (if 2 then a else 0)) , c = ((succ 0) (succ 1)) })
(\ b . (let b = ("boy" (\ b . "apple")) in ({ a = 1 , c = ({ d = c , c = "boy" }) })))
(if (if (\ b . "boy") then (let b = 0 in false) else (succ "boy")) then ({ e = (pred (if 0 then 1 else 1)) , d = (succ (\ e . (pred true))) }) else (pred (\ e . a)))
(let b = (\ d . (if (let a = "boy" in "boy") then (let c = "apple" in true) else ({ b = a , c = "boy" }))) in (let c = ((2 a) . e) in (pred 1)))
(if (succ (pred (\ a . "boy"))) then (\ e . ((pred c) (iszero "apple"))) else (if (succ b) then (({ b = a , d = false }) . c) else (succ (pred "boy"))))
(\ e . ({ d = (succ 0) , c = ({ a = 2 , a = 2 }) }))
(let d = (pred (iszero b)) in (if (pred ({ a = 2 , e = ("apple" 1) })) then ({ e = ((false . e) . e) , c = ("boy" 1) }) else (iszero (if 1 then a else a))))
(\ b . (succ ({ b = (b 2) , d = (let e = (pred a) in (let c = "boy" in b)) })))
(((iszero (\ a . "boy")) ("boy" false)) (iszero (iszero 1)))
((pred (iszero true)) (if (({ d = 0 , c = 2 }) . a) then ((if true then 1 else a) . c) else (iszero "apple")))
({ c = ({ b = (if c then true else true) , e = (succ false) }) , b = (pred (succ 0)) })
(\ d . ({ c = ((\ d . a) . c) , c = (\ a . (let a = (succ true) in (a true))) }))
({ b = (let a = (("boy" . a) a) in (pred (if "apple" then "boy" else "apple"))) , d = (({ c = (a b) , b = a }) (\ b . (pred 2))) })
(pred (\ e . ({ c = (if 0 then "apple" else a) , c = b })))
(\ c . (({ e = 2 , b = 2 }) . c))
(iszero (iszero (iszero 1)))
(let b = ((if a then 1 else c) (succ a)) in ({ d = (b . e) , d = (\ a . (let c = b in 1)) }))
(((0 false) (let d = c in b)) (\ d . (let d = (pred b) in (\ d . "apple"))))
(\ e . (iszero (b c)))
(iszero (if ((pred a) false) then (0 . a) else (if "boy" then 1 else "boy")))
(({ e = (if ("boy" . e) then (succ c) else ({ c = (1 c) , d = c })) , e = (\ e . 2) }) . a)
(if (({ b = (succ (\ d . c)) , b = (if (if c then a else 0) then c else ({ b = "apple" , e = "boy" })) }) . d) then ((succ a) ((iszero "apple") . d)) else (\ a . (iszero 0)))
(if (let b = (iszero c) in (\ e . 1)) then (pred (let b = "apple" in "boy")) else (iszero ({ b = "apple" , b = true })))
((succ (if (\ d . true) then 1 else (succ c))) (pred (true c)))
(iszero (pred (\ a . (succ true))))
({ c = ((a . e) . c) , a = (let e = (pred 0) in (let a = false in 0)) })
((succ (if true then c else b)) . c)
(iszero (\ e . (({ e = true , a = 2 }) (pred a))))
(\ c . (let c = (let d = false in ({ e = c , b = "apple" })) in (\ b . false)))
(let d = (succ ({ a = (succ b) , d = (if 0 then b else 0) })) in (iszero (pred (let a = b in 0))))
(iszero (\ b . (let c = (iszero 0) in (1 2))))
((({ d = "apple" , d = true }) . b) . b)
(\ c . ((succ false) ((pred b) (if 0 then a else 0))))
(\ c . (let c = (let d = (\ d . a) in (2 . e)) in (if (c b) then ({ a = (succ "boy") , c = "boy" }) else (pred true))))
((\ c . ((iszero (\ a . c)) . a)) (\ e . (if a then (if true then "boy" else 0) else b)))
(let b = ({ b = (false . e) , a = (succ a) }) in (\ a . (true "apple")))
(\ b . (if ({ a = (succ "apple") , d = "boy" }) then (iszero (if (iszero true) then b else "apple")) else (2 . b)))
(let a = (\ c . (if (if ({ e = "boy" , d = false }) then "apple" else "apple") then (succ false) else ((let c = 2 in c) true))) in (\ e . ({ c = ({ d = 1 , e = false }) , d = (pred true) })))
(\ b . (("apple" (succ "apple")) (\ b . true)))
(succ (if ({ b = (iszero c) , d = (\ b . true) }) then (let a = false in (succ false)) else (\ c . (succ 0))))
(succ ((\ d . b) . d))
((succ (iszero "apple")) . e)
(\ d . (if (c . e) then (succ a) else (pred (if 0 then a else "apple"))))
(pred (let b = (0 (pred false)) in (iszero (1 c))))
(let e = ({ d = (succ b) , e = (c . c) }) in (("boy" . c) (let e = b in c)))
(\ e . (iszero (if true then (false 2) else false)))
(succ (pred (succ (if 0 then c else 2))))
(let a = (succ (let e = a in 0)) in ({ e = (succ (iszero false)) , e = (pred c) }))
(let c = ((if (succ a) then 0 else (if 1 then "boy" else b)) (let c = (if false then b else c) in c)) in (pred (\ b . ("boy" c))))
(if (pred (iszero (if "boy" then 0 else true))) then (\ c . (pred false)) else (pred (pred "apple")))
(succ (if (pred true) then (if c then b else b) else ("apple" b)))
(succ (pred (true c)))
(\ c . (iszero (1 . e)))
(succ ((if "apple" then 2 else (iszero 1)) . b))
(\ e . ((iszero (\ e . c)) (pred ("apple" . a))))
(succ (pred ((b false) "apple")))
(succ (\ d . (succ c)))
(({ b = (if ({ d = 1 , c = c }) then (\ b . "boy") else (1 . b)) , d = (succ ((1 1) . b)) }) . a)
(let a = (\ e . (let b = ("apple" a) in (pred 2))) in ((if "apple" then c else b) ({ e = 0 , c = true })))
(({ c = (pred (iszero a)) , b = (let a = "apple" in b) }) . d)
((iszero (pred 1)) (iszero (succ (let c = c in a))))
(\ c . (succ (let e = ({ e = "apple" , b = "apple" }) in 1)))
(\ d . (pred (pred (iszero 0))))
(pred (succ ({ c = (iszero b) , e = (iszero "boy") })))
(succ (pred ((iszero true) . a)))
(pred (\ a . (succ (b . e))))
(pred (iszero (iszero (succ false))))
(let b = (succ ((succ a) c)) in ((pred true) (\ c . a)))
(succ (let b = (succ "boy") in (("apple" . c) . d)))
(((pred "boy") . c) . b)
((iszero (let e = "boy" in (pred true))) . a)
((pred (if a then true else b)) . a)
(let a = (let d = (\ d . (pred b)) in (pred b)) in (succ (if (if c then c else c) then true else (iszero 0))))
(if (({ a = 0 , c = b }) . a) then (succ (true . d)) else (\ e . (a "boy")))
((let e = (pred ("apple" . b)) in (succ (iszero 1))) (pred ({ d = a , e = 1 })))
(let a = (succ (let a = a in false)) in (let e = (succ ((\ a . a) b)) in ({ a = ({ a = b , b = b }) , e = "boy" })))
(pred (iszero ({ d = c , e = 2 })))
({ e = ({ d = ("apple" a) , e = (pred a) }) , a = ((2 . c) ({ e = (let b = c in b) , d = (if "apple" then "boy" else a) })) })
((\ b . (pred a)) (pred (pred (if "apple" then b else b))))
({ e = (succ (pred (iszero c))) , d = (iszero (let d = (if "boy" then "boy" else false) in ({ e = 0 , a = 1 }))) })
(succ (let c = (let d = 2 in true) in (if true then false else a)))
(if (let e = ({ a = ((if "boy" then a else 2) . b) , b = (iszero "boy") }) in ((iszero (pred c)) ({ c = (iszero 0) , b = ({ a = 0 , e = 1 }) }))) then (iszero (\ c . 2)) else (if (iszero (a a)) then ((succ 0) (succ b)) else (iszero b)))
(((let c = ((if false then c else "boy") (if 2 then 0 else "apple")) in (let e = 0 in "apple")) (pred (0 "boy"))) . e)
(\ c . (\ a . (pred b)))
(if (let b = ({ b = (iszero false) , d = (pred (\ a . b)) }) in (\ b . (let c = true in a))) then (\ d . (\ c . (pred ({ e = c , d = "boy" })))) else (\ d . (true . b)))
((if (let e = (succ "boy") in (\ a . b)) then (let e = (let a = (let c = 1 in c) in c) in (pred "apple")) else (iszero (succ 0))) . a)
(((false a) . a) (let a = (pred "apple") in ({ b = 2 , c = 2 })))
(\ a . (let b = ({ d = (pred (\ b . "apple")) , a = ({ b = b , b = a }) }) in (succ (0 false))))
(let c = (succ (if (succ "apple") then (b "apple") else (pred "boy"))) in ({ d = (\ c . (\ b . "boy")) , e = ({ e = (iszero ({ d = false , e = c })) , b = (iszero "apple") }) }))
(iszero (iszero (pred (succ false))))
(succ (pred (let e = (true 1) in (succ false))))
(let a = (if (iszero 2) then (a 1) else (\ b . b)) in (let a = (\ a . (pred b)) in (pred ({ a = a , a = c }))))
(\ c . (if (succ 1) then (\ b . 2) else ({ a = (pred "boy") , c = (pred a) })))
((succ (pred a)) . a)
((pred (({ a = (let d = 2 in 1) , e = false }) (if true then "apple" else (c "boy")))) . d)
(\ e . (let e = ({ b = (pred b) , e = ({ e = "apple" , c = a }) }) in ({ d = c , c = (if b then false else "boy") })))
((let b = (\ b . (pred (\ c . c))) in ((if true then true else b) . d)) . a)
(succ (let a = (if (succ 2) then (if "boy" then 2 else 2) else (\ b . 1)) in ((if b then 2 else c) . c)))
({ a = ({ e = ({ c = ("boy" . c) , b = (\ b . 0) }) , c = (if 2 then "boy" else false) }) , b = (succ (succ a)) })
(\ a . (if (\ b . (let d = 2 in 0)) then ((succ b) 0) else ({ d = b , b = 0 })))
(iszero (iszero (iszero 2)))
(\ b . ((succ (let e = ({ e = 1 , b = false }) in c)) (1 (\ d . true))))
(succ ((pred (succ a)) . e))
(let d = (\ e . (let a = (let c = 0 in (pred c)) in (\ a . a))) in (let a = (\ e . (succ 1)) in (pred 0)))
(if ({ c = (if 1 then a else "apple") , e = (pred false) }) then (iszero (iszero b)) else (if (a . d) then (let a = (0 1) in "apple") else (a . d)))
(\ c . (succ ({ a = (true 1) , b = (iszero c) })))
(\ a . ({ c = ({ b = (iszero "apple") , b = ((succ 0) "apple") }) , a = (let a = "boy" in true) }))
(let b = ((let c = (\ e . ("boy" 2)) in (succ "boy")) ({ e = ("apple" b) , a = (succ b) })) in (\ b . ({ b = ({ c = c , b = false }) , b = (iszero b) })))
(if ({ c = (pred (\ e . b)) , d = (if false then 1 else a) }) then (succ (\ d . "boy")) else (if (iszero b) then (succ (let d = 0 in a)) else (pred 0)))
(if (pred ((b 1) . a)) then (if (a 0) then (let e = (let c = 2 in "apple") in false) else ({ e = "apple" , c = 1 })) else (if ((\ b . b) . e) then (if true then (\ c . false) else 1) else (\ a . (2 . b))))
((if ({ c = false , b = b }) then (\ c . (iszero true)) else (let b = (pred c) in c)) (let b = (if (iszero 0) then 1 else "apple") in (let a = (let a = false in true) in 1)))
(let d = (iszero (\ b . 0)) in ({ b = (iszero 2) , c = (let a = (\ a . (succ true)) in (iszero ({ e = 1 , e = b }))) }))
(pred (if (let d = 0 in 2) then (pred (1 "boy")) else (pred b)))
(let d = (succ (iszero (succ true))) in (let d = ((succ 1) . d) in (\ b . "boy")))
(if (({ e = (succ "apple") , e = (if "apple" then 0 else b) }) (2 . c)) then (iszero ({ c = true , b = "apple" })) else (if (iszero "boy") then (if true then "boy" else (iszero 1)) else (if (\ e . false) then (succ a) else ({ c = true , b = 2 }))))
(iszero ((iszero a) (false false)))
(succ (let c = (if (iszero "apple") then 1 else (pred "boy")) in (let b = (let b = 1 in "boy") in (if a then false else 0))))
((let b = (iszero (0 . d)) in ("boy" . a)) (let d = (b . e) in (let c = ({ c = 0 , c = 2 }) in false)))
({ a = (iszero ((if false then a else 0) (succ "boy"))) , e = (succ (let d = a in b)) })
(\ d . (let e = (false . e) in (({ a = 0 , d = 0 }) . a)))
({ a = (\ d . ("boy" . b)) , a = (let d = ((let a = (if 0 then 0 else true) in (succ b)) . b) in (if (pred 0) then (pred a) else (succ false))) })
(pred ({ c = (pred "boy") , a = (let c = "apple" in "apple") }))
(succ (("boy" ({ e = 2 , a = c })) (succ a)))
(\ e . ({ a = (if 1 then 0 else true) , a = (if false then b else false) }))
(iszero (succ (pred (b c))))
(succ (\ c . ({ c = "boy" , a = a })))
(iszero ((if "boy" then (1 . d) else (false true)) . b))
(\ e . (iszero (iszero "boy")))
(\ e . (if ({ e = "apple" , b = a }) then (iszero (succ true)) else (if (let d = (if "boy" then "apple" else 2) in ("apple" "apple")) then (if "boy" then "apple" else 2) else (iszero c))))
(iszero ((pred 0) . e))
((let b = (pred (pred "apple")) in ({ c = (if false then a else 1) , b = (if b then a else 0) })) ({ c = (succ b) , e = (pred (c "apple")) }))
(\ d . (pred (if b then (succ "boy") else (let b = a in 2))))
(\ e . (succ (false (b a))))
(iszero (succ ({ e = false , c = 2 })))
(\ d . (\ e . ({ d = false , b = "boy" })))
((succ ((succ "boy") . e)) (succ (succ (0 . c))))
(let a = (pred (iszero "apple")) in (pred (pred (succ b))))
((let c = (true "boy") in ({ e = 0 , b = "boy" })) ({ d = (iszero (iszero true)) , e = (pred (pred false)) }))
(\ b . (if (iszero (a 1)) then (pred (c . e)) else (\ e . (let a = a in 2))))
({ e = (pred (pred a)) , b = (\ d . (let b = (\ c . "boy") in (if (if "apple" then 2 else a) then 1 else (succ b)))) })
(let d = (pred ((\ a . b) . e)) in (succ (\ d . "boy")))
((let a = ((let d = (if true then 1 else 0) in (\ a . true)) . c) in (false . c)) . d)
(let c = ((iszero (iszero (true . b))) . e) in (iszero ((if "boy" then (0 . a) else (iszero 1)) . b)))
(iszero (iszero (2 . e)))
(iszero ((succ (\ e . b)) . e))
(\ e . ({ c = ((iszero 0) (if 2 then b else "apple")) , a = ({ c = 1 , c = 1 }) }))
(let a = ({ e = ({ e = "boy" , c = "apple" }) , e = ((pred (let e = "apple" in c)) . c) }) in (\ d . (iszero c)))
({ a = (({ c = ("boy" . b) , e = (c . c) }) (({ c = false , c = b }) "boy")) , d = (pred (iszero (iszero true))) })
(pred (\ e . (let c = "boy" in "boy")))
(if (let d = (\ b . ({ a = true , e = false })) in (let d = ((false a) (false . d)) in (0 . a))) then (({ a = 0 , d = false }) (\ d . b)) else (if (succ a) then (pred a) else (({ b = 2 , d = b }) "apple")))
(if (succ (pred ({ b = "apple" , c = "apple" }))) then ((pred (succ true)) (true 1)) else ({ a = (succ (0 2)) , b = (let a = (let d = 1 in (succ false)) in (succ c)) }))
((let b = (pred false) in (succ 1)) . d)
((iszero (\ c . c)) . a)
(\ d . (let b = (let a = c in 0) in (1 . e)))
(({ e = (({ a = a , b = true }) true) , a = (\ d . 0) }) (succ (\ e . ({ b = c , b = (let c = b in 1) }))))
(\ e . (let e = (if 0 then 2 else b) in (if (a "apple") then (0 false) else (if 2 then false else 1))))
((iszero (pred b)) . c)
((if (b b) then (succ 1) else (let d = 1 in (pred 2))) (let c = (succ true) in (iszero (let d = true in false))))
(iszero ((iszero c) ({ e = "apple" , d = ("boy" . c) })))
(((\ e . 2) . c) (pred (true . a)))
(if (if (pred c) then (\ e . c) else (if (\ b . b) then true else true)) then (\ e . (if (let d = a in true) then "apple" else (succ "apple"))) else (succ (\ c . false)))
(pred (\ d . (iszero true)))
(if (if (pred (false false)) then (2 2) else (iszero false)) then (let e = ({ b = b , e = ("apple" true) }) in (pred false)) else (if ((0 . b) "boy") then (succ 1) else ({ a = (\ b . 1) , e = (0 "boy") })))
(succ ({ a = (\ c . a) , a = (if false then 0 else 1) }))
(\ a . (iszero ({ c = 0 , e = (if true then 1 else 0) })))
(\ d . ({ c = (succ 1) , a = (("apple" . e) . e) }))
(\ a . ((\ d . "boy") . b))
((iszero (succ "boy")) . b)
((((\ e . "boy") (if "apple" then 1 else 1)) (({ d = true , a = true }) (c . a))) . c)
((if (pred 2) then (false b) else (if b then (1 1) else (2 . a))) (\ a . (\ d . "boy")))
(\ d . ({ a = (if false then ({ d = 1 , c = c }) else (0 1)) , e = (if "boy" then true else "boy") }))
({ c = (\ b . (let c = ({ e = true , a = b }) in ({ a = c , d = "apple" }))) , a = (\ d . (succ a)) })
(iszero (iszero (\ d . (if true then false else 1))))
((pred (pred (iszero false))) . d)
((succ (((succ "apple") . e) . b)) (succ (let b = true in 0)))
(pred (succ (1 "apple")))
((iszero (succ (pred 0))) (\ a . (pred (0 . b))))
((\ d . (pred 1)) (iszero (\ a . 2)))
((if ((let a = b in a) (iszero 1)) then (pred (if 1 then c else (c "boy"))) else (succ b)) ({ e = (if (let c = a in "boy") then (let b = 2 in false) else ({ c = 1 , e = 0 })) , d = ({ e = 0 , c = a }) }))
(pred ({ e = (\ e . a) , a = (0 . a) }))
(if (let e = ({ e = a , c = false }) in ({ a = (let a = "boy" in "boy") , c = b })) then ({ a = (if ("apple" b) then (iszero b) else "apple") , e = (false (if true then true else "apple")) }) else ((if (if a then "apple" else (pred false)) then (false . a) else (let e = false in "apple")) (if (pred "apple") then (\ e . (a "boy")) else ({ d = "apple" , c = "boy" }))))
((iszero (if 0 then true else (\ b . 1))) . b)
({ e = (({ d = "apple" , b = b }) (if (succ 1) then ({ c = 0 , c = "boy" }) else 1)) , b = (\ c . ({ b = (iszero (let b = "apple" in 2)) , e = (\ d . c) })) })
(pred (succ ((let c = ("boy" . a) in 0) . c)))
(if (pred (if (if (true b) then b else (iszero a)) then (iszero (succ b)) else (iszero b))) then (pred (pred "apple")) else (((b "apple") . d) . c))
(\ d . (iszero ((\ e . (\ b . 1)) . b)))
(\ c . (iszero (if b then "apple" else c)))
(iszero (if (let b = (a . e) in "apple") then ({ a = ({ d = false , a = b }) , e = ({ c = a , d = false }) }) else (let e = (c . b) in 2)))
({ d = ({ d = (let d = ({ a = "boy" , e = 2 }) in (iszero "apple")) , b = (((succ 2) true) . d) }) , a = (pred (({ b = 0 , c = "apple" }) . a)) })
((pred (iszero a)) (\ b . (iszero "apple")))
({ a = (\ b . (let e = c in "apple")) , e = (pred (pred 1)) })
(iszero ({ d = (\ a . (if 1 then true else true)) , b = (let a = (if true then c else false) in (if 2 then "apple" else 1)) }))
(((let d = b in true) (iszero (if 0 then 1 else true))) (pred (if 2 then b else a)))
(let c = (if (pred (let c = 1 in false)) then (succ (\ b . 0)) else (\ b . (let e = b in a))) in (\ c . (\ d . (let b = 2 in "apple"))))
((succ ({ e = ({ c = 0 , b = 2 }) , d = "apple" })) ({ c = (iszero (let c = 0 in c)) , a = (\ b . true) }))
(\ e . (let c = (\ b . (a . a)) in (let c = "apple" in (c . b))))
(((true false) . e) . b)
(\ c . ({ e = (let b = (2 . a) in (let d = c in b)) , b = (pred 2) }))
(((1 0) . c) (\ d . (let c = 2 in (true b))))
(iszero ((if ({ a = 1 , a = "apple" }) then (iszero a) else (let e = a in "apple")) (if 2 then b else "apple")))
(((succ true) (\ a . "boy")) . d)
({ d = ((succ ((if "boy" then 2 else b) 1)) (pred c)) , b = (iszero (pred false)) })
({ c = (({ a = ((true b) a) , e = (pred 0) }) . b) , e = (pred (succ c)) })
(let b = (iszero (succ (succ false))) in (\ a . (succ 0)))
(iszero (let a = (\ c . b) in (if (pred c) then ("boy" false) else (false . b))))
(\ a . (pred ({ a = ({ b = 1 , d = b }) , c = (\ e . true) })))
((if ({ c = 2 , e = 0 }) then (iszero 2) else (let c = true in 2)) . b)
(pred (succ (succ ({ c = "apple" , a = c }))))
(succ (iszero (\ d . c)))
((\ b . (\ c . (iszero 1))) . c)
(succ (succ ({ c = (\ a . 1) , c = (\ c . a) })))
(if ({ e = ((succ 2) a) , c = (\ e . false) }) then (succ ("boy" (succ b))) else (succ (false "boy")))
(let d = ({ c = ({ c = (b . d) , b = b }) , c = (((let b = 2 in a) . d) (pred "boy")) }) in (iszero (iszero ({ b = "apple" , e = (let a = 1 in false) }))))
(succ (pred (pred false)))
(if (let b = ("apple" b) in (iszero b)) then ((((succ b) (let a = false in 2)) (0 . a)) (iszero (let b = c in "boy"))) else (\ d . (succ (\ b . (if "apple" then c else b)))))
(iszero (succ (succ "boy")))
(let a = (iszero (2 . e)) in (if (\ e . (\ c . false)) then (if (succ "apple") then 1 else a) else (\ e . (let a = "apple" in true))))
(((1 . c) . b) (iszero (if (succ true) then (a . a) else (if a then 2 else false))))
(if ({ d = (2 . a) , b = (false 2) }) then ((if 1 then (let e = "apple" in false) else c) (\ e . b)) else (succ (let c = (pred c) in (\ a . "boy"))))
(\ e . (iszero (pred b)))
(succ ({ c = (\ c . (pred (0 . d))) , d = (succ ({ a = a , b = 0 })) }))
(\ c . ((2 . b) ({ b = (iszero true) , b = b })))
({ e = (succ (iszero (true 1))) , c = (iszero ({ e = 1 , c = 1 })) })
({ b = (\ d . (pred false)) , c = (\ a . (b 1)) })
(succ (\ d . (succ (iszero 0))))
((let c = (0 . d) in (let b = (if 2 then "boy" else c) in false)) . c)
((let d = (succ (iszero "boy")) in (if (if (if false then a else "boy") then 1 else (\ a . 0)) then (\ a . 0) else (false . e))) . b)
(succ (iszero (let b = ({ d = 1 , a = false }) in "boy")))
(iszero ({ e = (iszero (pred 0)) , b = (iszero c) }))
(\ a . (iszero (false 2)))
((\ d . (iszero b)) ({ d = ({ c = a , d = ({ c = c , e = false }) }) , e = (pred 1) }))
(\ d . (((let a = (c b) in 0) . c) (\ e . (1 1))))
(if ({ d = (if "boy" then (iszero 0) else b) , e = (iszero (pred ({ e = false , c = 0 }))) }) then ((succ true) . d) else (({ a = (pred "boy") , a = 0 }) . a))
((iszero (iszero (let b = (pred "boy") in 1))) . c)
((iszero (succ (pred a))) ({ c = (succ 2) , d = (if (let e = ({ b = "boy" , e = 0 }) in c) then (succ ({ d = a , c = c })) else (succ 1)) }))
((iszero (if false then (succ 1) else "apple")) (let a = (if (let a = 2 in a) then (let c = ({ a = 2 , a = c }) in ({ d = 2 , d = "apple" })) else (iszero (pred c))) in ((2 false) (\ b . 2))))
((if (let e = 0 in c) then (a . c) else (iszero (let e = 2 in 2))) . a)
(let e = (pred (iszero 1)) in (((\ d . "apple") (\ a . b)) . a))
(if (pred (succ 1)) then (succ (let b = b in b)) else (iszero ((succ 0) . c)))
(\ d . (pred (if 0 then false else 0)))
(((succ 2) . b) (\ a . (if true then false else c)))
(let b = (\ a . (pred (\ c . ("apple" . a)))) in ({ b = (pred true) , e = (let e = 0 in b) }))
({ d = ((let d = "apple" in 0) ({ a = "boy" , d = (true "boy") })) , e = (let b = (pred a) in (false . b)) })
(({ a = (\ a . ((\ e . true) (if true then true else true))) , e = (\ a . ({ e = 1 , a = 2 })) }) ((succ b) ((b . e) (succ "apple"))))
(iszero (iszero (\ e . (succ "boy"))))
({ d = ({ a = ((1 1) . d) , b = (iszero b) }) , d = (if (if (a 0) then (iszero true) else c) then (iszero (let a = "boy" in c)) else (if (2 1) then (if 0 then true else false) else (\ e . b))) })
(if (if ((0 2) . b) then (\ d . 2) else (if ("apple" 0) then c else "apple")) then ((let b = "boy" in (succ 0)) . c) else (pred (pred (1 false))))
({ e = (let c = (pred (let d = 0 in a)) in (let a = ({ b = (2 . b) , b = (2 true) }) in (false "boy"))) , a = ({ b = (({ c = "apple" , b = false }) . a) , e = (pred (1 . e)) }) })
(succ (let b = ((\ e . 0) (false "apple")) in ({ e = (b . b) , d = (\ a . "boy") })))
(succ (if (succ false) then ({ e = (if a then a else 0) , d = (if a then a else "apple") }) else ((a 1) "boy")))
((let e = ((succ true) . d) in (iszero (a 1))) (\ c . ({ b = (iszero a) , e = (pred 2) })))
(iszero (\ c . ({ c = a , d = c })))
(((iszero c) (if true then "apple" else true)) . e)
((iszero ({ d = ({ a = "apple" , a = true }) , e = "apple" })) (pred ("boy" . a)))
((pred (let e = (1 . e) in (let d = true in (if a then 2 else false)))) . e)
({ a = ((\ d . (pred 0)) (if (let a = "boy" in "boy") then 0 else a)) , a = (iszero (false . c)) })
({ d = (succ ({ e = (let c = c in a) , b = ({ a = 1 , a = 0 }) })) , d = ({ a = (iszero 2) , e = (if 2 then 0 else "apple") }) })
(if (pred (iszero (c b))) then (let c = (iszero ("boy" . b)) in ({ b = (let e = (let b = 1 in false) in (if 1 then 2 else a)) , b = (let e = 1 in true) })) else ((let c = 1 in 1) (let e = ("boy" . e) in "boy")))
(succ ((if (\ d . "apple") then 2 else "apple") . c))
(iszero (pred ({ c = (if "apple" then (true 1) else ({ e = b , e = c })) , a = ({ c = "apple" , b = a }) })))
(pred (if (0 . a) then ({ a = (true . b) , c = (pred false) }) else (succ (false 1))))
((pred (\ b . ((a 1) 2))) . e)
(iszero ((if (pred false) then (let e = 2 in "apple") else (iszero (a . d))) . a))
(if (if (succ (iszero false)) then (let c = (iszero 1) in (succ 0)) else (if (let c = (iszero 1) in 0) then (succ "boy") else (a "apple"))) then ({ b = ({ c = (succ 1) , c = (b . d) }) , e = (1 . d) }) else ((iszero a) (pred a)))
(iszero (({ e = (0 (pred c)) , a = (2 2) }) . a))
(if (succ (\ a . (let a = b in 1))) then ((let e = false in "boy") (iszero b)) else (iszero (pred (iszero (let b = "apple" in c)))))
(pred ((pred 2) (\ d . (if true then false else false))))
((iszero (pred true)) ({ d = (succ (iszero false)) , a = ({ e = ({ d = b , e = c }) , a = (c . e) }) }))
((\ b . (iszero a)) . c)
(if ((succ (succ b)) (if (pred "apple") then (if c then a else 1) else (\ d . true))) then (let b = ("apple" . b) in ((succ b) . e)) else (if ({ c = (let d = 2 in 1) , d = 0 }) then (succ a) else (pred b)))
({ b = (if (if (iszero b) then ({ c = c , d = false }) else (2 . a)) then (iszero false) else ({ e = true , b = false })) , a = (succ (if true then false else 2)) })
(let c = (if ({ a = a , e = a }) then (if b then c else ("boy" c)) else (if b then c else (\ e . "apple"))) in (if (\ e . "boy") then (if c then (\ a . c) else a) else (succ true)))
(if (pred (if false then c else b)) then (iszero (iszero "apple")) else ((\ a . "boy") (pred (succ a))))
(\ d . (iszero (iszero (let a = c in b))))
(succ (\ e . (iszero c)))
(succ (\ b . ({ e = b , c = (\ d . 2) })))
((\ d . (if b then b else true)) . c)
((succ (let a = 0 in "apple")) (\ a . (\ b . (if 1 then (\ b . 1) else (if false then 1 else b)))))
(succ ((\ b . 0) (\ c . "apple")))
(iszero ({ b = (pred (succ 0)) , c = (iszero ({ d = "boy" , c = b })) }))
(iszero (if (let c = (if (\ b . a) then false else true) in (iszero b)) then (((\ b . "apple") b) . e) else (c (let a = "apple" in 0))))
((\ a . (iszero c)) (succ (let a = true in 2)))
({ e = ({ b = ({ a = (iszero 2) , e = (iszero (\ c . a)) }) , c = ({ a = (succ "apple") , d = (iszero b) }) }) , b = (pred (iszero true)) })
(pred (pred (succ a)))
(if (succ (\ c . (1 . e))) then (({ b = 2 , b = 2 }) . c) else ({ d = (\ e . ("boy" . d)) , c = (if false then true else 1) }))
(iszero (succ ({ b = (iszero "boy") , c = (succ "apple") })))
(pred ((("boy" . e) . d) (succ (succ false))))
(if (({ d = 0 , e = 2 }) . c) then (succ (pred (if a then a else "boy"))) else ((iszero ({ b = a , e = 0 })) . e))
((pred (let b = false in a)) . e)
(let a = (succ (2 (b 0))) in (if ({ e = (iszero "boy") , e = (\ d . b) }) then ((iszero b) . b) else ((b false) (0 . c))))
(if (succ (\ c . ({ d = true , b = 0 }))) then (succ (a "boy")) else (if (let e = b in (succ 1)) then (false . d) else (pred (succ b))))
(((\ d . (iszero c)) . b) . d)
(let e = (iszero (let a = (\ a . "apple") in (let b = (if c then false else true) in ({ c = "apple" , c = c })))) in ((({ a = true , e = c }) . d) . c))
(pred (let e = ((\ b . true) . a) in (let a = c in (pred "boy"))))
(iszero (iszero ({ e = false , b = (let e = "apple" in 1) })))
((succ (succ 0)) . b)
({ c = ({ d = (succ (pred c)) , c = (\ d . (pred (0 b))) }) , d = (succ (if (pred "apple") then (if a then false else "boy") else (pred "apple"))) })
(pred (let c = (\ c . 2) in (succ (({ a = 1 , a = a }) "boy"))))
(\ c . (let a = (iszero (if false then 0 else 0)) in (succ c)))
(if (\ a . (pred (true . d))) then (if (if ({ c = "boy" , a = true }) then b else (let c = b in c)) then (pred 1) else (succ false)) else (\ e . (if "boy" then (\ c . 1) else ("boy" . e))))
(({ d = (if 0 then false else (0 . d)) , d = (\ c . (let c = 1 in b)) }) (\ c . (\ b . (pred true))))
({ e = (if ((iszero (if false then true else a)) (iszero a)) then (let e = (pred 0) in (\ e . true)) else (let d = b in (1 . b))) , c = (pred ({ a = (succ (pred 1)) , e = (1 . e) })) })
(let c = (iszero (true . e)) in (if (\ d . (succ true)) then (\ b . (2 "boy")) else (iszero (iszero b))))
(if (succ (b 1)) then (let d = (1 b) in (c 0)) else (let c = ("apple" . d) in (b "boy")))
(if (if ((let d = false in 2) (let c = c in "boy")) then (succ (b . e)) else (\ d . (\ d . true))) then (if (let c = (pred (\ d . b)) in (iszero false)) then (let d = ({ b = true , b = "boy" }) in c) else (let c = ("boy" "boy") in false)) else (iszero ((let e = 1 in false) . a)))
(succ (succ (let b = 2 in a)))
(((({ c = b , e = true }) 2) (succ 1)) (((0 . a) . b) . b))
(((pred b) (\ c . (if a then c else a))) . b)
({ c = (\ b . (\ a . a)) , c = (\ a . (if a then (2 . c) else (\ d . a))) })
((let c = (if (if 1 then false else a) then (\ a . true) else ("boy" . b)) in (\ c . (false 2))) ((\ c . (if 1 then c else 2)) (let d = 0 in (b . e))))
({ a = (succ (\ b . (pred true))) , b = ((let e = 0 in 2) . b) })
({ e = (\ b . (pred (true b))) , b = (pred ({ b = (\ a . true) , c = (pred a) })) })
(succ (iszero (if c then b else 2)))
({ a = (let c = ({ a = (\ b . a) , a = c }) in (if (if 0 then true else a) then (pred true) else (c false))) , b = (let b = (let b = (pred true) in (pred 1)) in ({ b = (succ 1) , a = c })) })
(\ a . (iszero (succ ({ e = 2 , b = false }))))
(\ a . (pred ({ b = b , e = b })))
({ d = (\ b . (let a = false in c)) , a = (pred (pred (if (false . c) then true else 1))) })
(\ e . (if (let d = 0 in true) then ({ e = c , b = true }) else ({ c = 1 , a = 2 })))
(let d = (succ (b . a)) in (let a = ((iszero false) (\ d . "boy")) in (pred (let a = b in a))))
((((\ a . (\ a . a)) (\ c . false)) . e) ((let e = (iszero 2) in (if 1 then a else a)) (\ a . (succ "boy"))))
(if (iszero (iszero true)) then (succ (let a = (pred (\ a . c)) in (true . e))) else ({ e = ((iszero 1) "apple") , a = ("apple" . d) }))
(succ (let e = (pred ({ e = (2 false) , d = 0 })) in ((succ "boy") (if 0 then b else false))))
(succ ({ a = (\ b . 2) , c = ({ a = 2 , c = "boy" }) }))
(\ d . ((let d = (iszero (0 . a)) in (succ b)) (iszero (iszero 2))))
((pred ({ d = 1 , e = (\ b . b) })) . c)
({ c = (\ b . ((if "boy" then false else 2) c)) , d = (pred (\ b . (pred true))) })
(iszero ({ a = (a . d) , e = ("boy" true) }))
(\ d . (pred ({ d = (iszero true) , c = (iszero false) })))
(let d = ({ e = (let b = 0 in "apple") , c = (iszero c) }) in (\ e . (\ d . a)))
(let c = (\ d . (pred b)) in ((let b = 1 in c) . d))
(\ b . (if ("apple" b) then ({ c = b , b = 1 }) else ((\ a . "boy") "boy")))
(\ c . ((let c = c in "apple") (\ a . b)))
(if ({ e = (b . d) , c = (iszero false) }) then (\ e . (let e = (c "boy") in ("boy" . c))) else (\ b . (("apple" true) b)))
(succ (let c = (iszero (true . b)) in (a true)))
(iszero ((if (if "apple" then b else (if a then 0 else "apple")) then (pred "boy") else (0 (1 . d))) (let c = (succ a) in (false . d))))
({ b = (if (iszero (iszero "apple")) then (if "apple" then 2 else true) else (("apple" . a) . e)) , b = (succ (\ d . ({ c = a , c = false }))) })
(((\ c . (\ c . "boy")) . e) . d)
({ a = (iszero ({ c = (1 . e) , d = true })) , c = (if (pred 1) then (pred (\ a . false)) else ("apple" "boy")) })
(if ({ a = (b (let e = b in 0)) , a = ((pred 0) . e) }) then (({ e = c , b = a }) . d) else (pred (if "apple" then false else ("apple" . b))))
({ a = (\ b . ({ c = (iszero 0) , d = "boy" })) , a = (if (((1 . a) . d) . c) then (c . c) else ({ b = (pred (let b = "apple" in 0)) , a = (pred (iszero 2)) })) })
({ e = (\ b . ((pred 2) (let e = b in false))) , e = (if (let a = (pred true) in false) then (pred true) else (iszero true)) })
(succ (({ c = (if (iszero 1) then b else (iszero "boy")) , c = ((iszero 1) a) }) . c))
(succ (let a = (pred (if true then 2 else c)) in ((succ false) . d)))
({ e = ((pred 0) . b) , c = ((if "boy" then c else (iszero false)) . a) })
((\ e . ({ c = (pred ({ b = "apple" , c = false })) , c = (if false then 1 else true) })) (\ a . (succ 1)))
(pred (succ ({ c = (let a = "apple" in 2) , c = 2 })))
({ c = ((if (succ true) then false else "apple") . d) , d = (if ((a . e) b) then (let b = 0 in "boy") else (let d = a in a)) })
(let b = (if (a . c) then ((let d = false in "boy") (succ false)) else (\ a . (let c = "boy" in a))) in (succ (let c = (\ c . "apple") in (let e = b in c))))
(\ e . ({ c = ((let a = (iszero "apple") in 1) . b) , a = ({ d = false , b = ({ e = b , a = "boy" }) }) }))
(pred ({ a = (("apple" 1) . a) , d = (({ d = b , c = (pred 1) }) . d) }))
(if (\ c . (iszero "boy")) then ((iszero 1) . c) else (succ ({ b = (if false then true else false) , e = ({ c = true , d = "boy" }) })))
(pred (if (iszero true) then ((iszero 2) (\ c . c)) else ({ d = (succ (pred false)) , c = ("boy" . e) })))
(if ((if "apple" then ({ b = "apple" , a = true }) else (if true then b else c)) . e) then (iszero (iszero b)) else (if ({ b = true , b = false }) then (succ (\ b . "boy")) else (if "apple" then false else false)))
(let e = ({ a = ({ c = b , c = (\ c . b) }) , d = (if "boy" then 2 else false) }) in ((true b) (succ (let c = false in "boy"))))
({ a = (pred (pred "boy")) , d = (if (iszero a) then (let c = (if "boy" then (a "apple") else ("apple" "apple")) in (\ a . false)) else ({ b = "apple" , e = 0 })) })
(iszero (\ a . (pred 0)))
(iszero (iszero (iszero (let e = c in c))))
(let c = (pred (if (iszero 0) then ("apple" true) else ({ a = "boy" , c = 0 }))) in (if ({ a = ({ d = "apple" , a = false }) , a = a }) then (let b = ({ e = 2 , a = false }) in (let c = b in "apple")) else (iszero 2)))
((\ c . ((succ true) . d)) . e)
(let a = (let b = (iszero false) in (\ e . false)) in ((let b = (if 1 then 0 else false) in ("boy" . d)) . a))
((\ a . ((if (\ a . c) then 2 else "boy") . c)) . b)
(let e = (if (let b = a in a) then (if (true . c) then (pred "apple") else (pred true)) else ({ b = "boy" , b = true })) in (succ (iszero true)))
(iszero (\ e . (iszero (if b then 0 else "boy"))))
(\ d . (succ (\ a . 2)))
(\ d . ((pred "boy") (succ "apple")))
((pred (\ d . (\ c . b))) ({ c = (pred (iszero "boy")) , c = ((succ "boy") (b "apple")) }))
(((((if 2 then "apple" else 0) 2) (a . b)) ((if (\ d . a) then ({ b = b , b = 1 }) else (a 2)) (succ 1))) ({ a = (if (succ b) then ({ d = b , b = "boy" }) else (iszero 0)) , d = (if (pred true) then ("apple" "apple") else "apple") }))
(\ c . (if (if (1 0) then ({ c = 1 , c = 0 }) else "boy") then (succ a) else (\ d . b)))
({ b = (iszero ((iszero "apple") (\ c . 2))) , b = (if (succ 2) then (succ "apple") else ({ b = ("boy" 1) , c = (succ 1) })) })
(let d = (if (let a = false in "boy") then (let b = b in (0 . a)) else ({ c = 1 , e = b })) in (\ d . (succ true)))
(if (iszero (iszero (iszero c))) then ({ a = (\ c . true) , e = (pred (let a = false in 2)) }) else (\ a . (2 true)))
(succ (succ (("boy" . a) . b)))
({ b = (let b = (a 0) in (pred (succ a))) , a = (let e = (if "boy" then (\ a . a) else 0) in (\ c . (\ d . a))) })
(pred (if (let d = false in a) then (pred (\ c . 0)) else (succ true)))
(\ b . ({ a = (if a then c else (let a = 0 in 0)) , b = (iszero (pred c)) }))
(iszero ((if 0 then "apple" else "apple") (succ (pred false))))
(pred (pred (\ a . 2)))
((pred (\ b . ({ d = b , b = "apple" }))) . c)
(if (succ (let e = (succ b) in (iszero (false . b)))) then (\ c . (succ 1)) else (\ b . (succ a)))
(let d = (iszero (succ c)) in (iszero (if c then 0 else b)))
(((true ({ a = b , a = 2 })) . a) . a)
({ c = (if (succ b) then (pred 0) else ({ d = false , c = b })) , e = (\ d . (let a = b in (if true then true else "boy"))) })
({ d = (if (pred (iszero a)) then (succ (succ (pred "apple"))) else (\ e . (pred a))) , b = (pred (pred 0)) })
({ b = ((if (iszero "boy") then a else a) (iszero a)) , a = (succ (if (("apple" c) "apple") then (pred 1) else (let b = "apple" in 0))) })
(succ (pred (succ (true "boy"))))
(iszero (pred (iszero "boy")))
(pred (iszero (iszero (\ b . false))))
(if (if ({ d = (iszero c) , b = (c . d) }) then (let e = (iszero (1 true)) in (c c)) else (succ (false . c))) then ((if 2 then 1 else false) . c) else ({ d = (\ d . b) , c = ({ e = (\ c . "boy") , e = (let a = (if b then false else b) in (pred true)) }) }))
({ a = (let b = (let c = b in "apple") in (\ d . a)) , c = (iszero (iszero c)) })
(\ e . (iszero (iszero 2)))
(succ (pred (succ (if 2 then c else a))))
(pred (\ a . (iszero (iszero b))))
(\ c . (succ (\ a . a)))
((let b = ((\ a . 0) 1) in (\ a . c)) (\ d . (iszero (let d = 2 in "apple"))))
(if (let d = (succ (iszero 0)) in (let c = b in 1)) then ((\ a . 1) (let a = b in b)) else (({ a = (let c = "apple" in b) , b = (succ (if b then "apple" else 2)) }) (succ (succ 0))))
(\ a . (pred ({ a = (let c = (\ c . 2) in ({ c = "apple" , b = "apple" })) , b = (iszero 1) })))
(succ (iszero (succ true)))
(succ ({ c = (succ (let b = 0 in a)) , b = (\ e . (b . c)) }))
(let c = (if (true true) then (iszero "boy") else (if b then "apple" else ("boy" . d))) in (\ b . (iszero ({ c = "boy" , e = 2 }))))
(succ (iszero (if (iszero 2) then (succ 0) else (pred 2))))
({ e = ((pred (succ c)) (pred (succ (\ b . 2)))) , d = (\ e . (succ (\ b . 0))) })
(\ a . (if (iszero (\ b . false)) then (let b = 1 in 2) else ({ a = b , b = false })))
(iszero (iszero ({ b = (if 0 then "apple" else true) , b = (pred "boy") })))
((succ (pred (iszero 0))) . d)
(pred (pred ({ d = ({ b = "apple" , b = 0 }) , b = (1 "boy") })))
(iszero (\ a . (succ b)))
(succ ((let b = (if 1 then true else c) in false) . a))
(let a = (pred ({ c = 0 , a = ({ b = 1 , d = a }) })) in (iszero (b 2)))
(let a = ({ e = (iszero ({ c = a , e = a })) , d = (let d = "boy" in b) }) in (succ (succ ({ a = 1 , c = false }))))
(pred ((if 2 then "boy" else (\ c . "apple")) (if (let b = 1 in 0) then c else (succ true))))
((pred (pred (let e = "boy" in false))) . d)
(iszero (pred ((false 0) . e)))
(\ d . ({ a = ((succ 2) . b) , c = (iszero (let c = true in "apple")) }))
(\ b . ((succ (let d = "apple" in "boy")) (if (if false then true else true) then 0 else ("apple" 1))))
({ a = (pred (let b = a in 1)) , d = ((let a = c in a) . d) })
(let d = (iszero (\ e . (if (pred false) then false else "apple"))) in (iszero (iszero b)))
({ c = ((let e = (\ d . 2) in (succ b)) . d) , a = (\ e . (pred true)) })
(\ a . (succ (let d = (iszero b) in ({ e = 2 , b = false }))))
(((pred 1) . e) . d)
({ c = (pred (succ (iszero (let d = 0 in 1)))) , a = ({ d = (pred (let e = false in 0)) , b = (succ b) }) })
(if (if (succ 2) then (let b = (\ e . "apple") in (\ d . b)) else (succ (0 . b))) then (pred (iszero "boy")) else (if (pred a) then (succ 1) else (0 . e)))
(iszero (pred (if ({ d = 1 , d = true }) then (succ (c . a)) else (succ "boy"))))
(let d = (if ((\ d . c) . a) then ((\ d . a) . d) else (let a = (\ b . 0) in (if 1 then 2 else true))) in (succ (b . a)))
((\ c . (0 . e)) . a)
(succ (succ ((c . e) . d)))
({ c = (\ d . (let c = false in (let a = "boy" in b))) , b = (if (if "boy" then c else "boy") then (let a = (false true) in b) else (succ ("boy" true))) })
(if (({ c = c , a = 0 }) (pred 0)) then (let d = (pred 2) in (0 1)) else (succ (a . d)))
({ b = (\ a . (2 "boy")) , b = (iszero (pred 2)) })
(succ (pred (let a = true in (\ b . "boy"))))
(if (({ d = false , d = 2 }) . d) then (pred ((let e = 0 in b) . a)) else (\ a . (pred (pred 1))))
(if (({ b = (\ a . true) , e = ({ a = b , e = b }) }) . c) then ({ c = ((iszero true) (c a)) , c = (if (let d = 2 in c) then 2 else b) }) else ((if "apple" then 1 else 1) . b))
({ d = ({ b = (true a) , a = ({ d = b , e = (if a then b else a) }) }) , a = (if (iszero (\ b . c)) then (\ e . a) else (iszero a)) })
(succ (\ b . (\ c . (b . e))))
((succ ({ c = (let e = (\ c . false) in ({ e = "apple" , b = 1 })) , a = (pred "apple") })) (\ c . (pred (let d = c in true))))
(let c = ((pred (succ (pred false))) . a) in (let b = ((\ a . 0) . b) in (let a = (if false then 2 else 1) in (let c = 1 in 2))))
(if ({ a = (pred false) , e = (let b = "apple" in false) }) then ((\ e . (iszero 1)) . e) else ((succ (pred c)) . a))
(succ (pred (0 . c)))
(if (succ (pred (true . e))) then ({ d = (\ a . a) , b = ("boy" "boy") }) else ((pred "boy") . e))
(((succ (2 . e)) (let e = false in a)) . d)
((pred ((iszero a) . d)) ((let d = b in b) . c))
(if ((succ c) . c) then ({ a = (\ c . 0) , e = (if (succ (let a = b in a)) then (if 2 then true else false) else (succ 2)) }) else ((\ d . 0) . b))
(iszero (succ (pred false)))
(if (\ e . (succ "apple")) then (pred (\ b . true)) else (succ (iszero (true 2))))
(if ((iszero ({ d = b , d = true })) ({ a = 2 , b = a })) then (\ c . (false . d)) else (if (\ c . 1) then (if (\ c . 0) then (if "apple" then c else 2) else "apple") else (if (pred 1) then (pred "boy") else (let e = 0 in c))))
(let a = (succ (succ b)) in (({ e = (succ 0) , b = a }) (\ c . ("boy" "boy"))))
(if (iszero (({ a = c , e = a }) . d)) then (succ (iszero false)) else (pred (iszero (pred 2))))
(iszero ((0 . d) (\ b . 0)))
(pred (let d = (let e = c in b) in ({ c = (let a = "boy" in "apple") , d = (b 0) })))
((let a = (((pred c) . d) . b) in ({ b = 2 , a = 2 })) (iszero (succ "apple")))
(pred (({ b = false , d = "boy" }) . d))
(succ (succ (succ "apple")))
({ e = ((succ (pred false)) . a) , e = (\ a . (succ ({ a = 1 , d = false }))) })
(iszero (if (if (iszero "apple") then (let d = 0 in b) else (\ a . false)) then (\ c . b) else (if (a . c) then true else true)))
(pred (let d = ({ d = ({ b = 0 , a = "apple" }) , e = (iszero "apple") }) in ({ a = (iszero "apple") , e = "boy" })))
(iszero (({ c = a , a = b }) ("apple" 1)))
({ a = (if ((pred a) . b) then (let b = ({ a = 0 , c = ({ a = 1 , d = false }) }) in (succ false)) else (succ (pred (1 . a)))) , c = (if (pred (let c = c in a)) then (pred false) else (succ 2)) })
({ b = (((pred false) 0) . e) , d = ((succ false) (pred c)) })
(({ c = (iszero (c false)) , d = (if (0 . c) then (b true) else (succ "apple")) }) . a)
({ b = (\ d . ({ d = (a false) , a = ("boy" c) })) , c = ((\ e . (if 0 then b else a)) (iszero (let c = "boy" in false))) })
(if (if (succ (pred 2)) then (iszero b) else (if (pred "apple") then a else (pred b))) then (iszero (iszero 1)) else (let e = (pred (pred b)) in ({ e = false , a = 1 })))
({ c = (pred (let d = ({ e = a , c = "apple" }) in (c . d))) , a = (succ (1 "boy")) })
((("boy" 2) (iszero 1)) . b)
({ d = (\ e . ((succ c) 0)) , d = (pred (succ (if 1 then 1 else false))) })
(((pred c) . d) . c)
((("apple" . a) (if a then (\ c . "boy") else (\ a . true))) . a)
(pred ({ c = (succ c) , e = ((let b = b in true) . c) }))
(iszero (({ e = 2 , b = 0 }) (false (c . a))))
((succ (if 1 then 0 else 0)) (let b = (\ b . 2) in (if c then "apple" else true)))
(iszero ({ c = ((\ e . c) (succ ({ e = 2 , d = true }))) , d = (let a = a in (pred a)) }))
((iszero (if true then (c . b) else (a b))) ((if (\ b . c) then false else "boy") . a))
((succ (pred true)) (({ c = (let b = c in (pred 0)) , a = ({ e = (false 1) , a = "apple" }) }) ((b . c) . b)))
(let b = (\ b . (succ "boy")) in (if (let a = (\ d . true) in "boy") then (if 2 then a else true) else (\ b . (1 false))))
(((let e = c in (2 a)) (\ b . (if 1 then c else 0))) (pred (succ 0)))
(let a = (succ (1 b)) in (pred (1 a)))
(pred (succ (iszero 1)))
(succ (if ({ b = (succ 2) , a = true }) then (iszero (if (false 1) then (if 2 then false else c) else (pred 2))) else ((pred "apple") 1)))
(let a = (\ b . (if (succ false) then (if a then "boy" else "apple") else (0 . e))) in (let c = (1 . b) in (succ (true . d))))
((if (pred false) then (if a then 2 else 0) else (c (\ d . 2))) . a)
(if ({ b = (succ false) , a = (let e = ({ e = c , b = b }) in true) }) then (let a = (\ e . (let a = 2 in "apple")) in ({ a = (c 2) , b = ({ e = false , c = "apple" }) })) else ((\ a . a) (pred (succ "apple"))))
(\ e . (("apple" . a) . e))
(((pred "boy") . c) . c)
(succ (if (pred 0) then ((let a = b in "boy") . c) else (iszero 1)))
({ a = ((let b = (iszero b) in (0 true)) (iszero 0)) , e = ((if ({ d = (succ 2) , d = (true . a) }) then (\ e . 0) else (pred false)) (succ (let e = b in b))) })
({ b = ((iszero b) (let e = 1 in b)) , d = (({ e = 2 , d = "apple" }) . b) })
(pred ((\ d . 2) (false 1)))
((succ (let b = ("boy" . b) in (pred 2))) . e)
(pred (iszero (pred 1)))
((\ b . ({ d = 0 , e = true })) (let a = ("boy" "boy") in (\ b . 2)))
((\ e . (let e = (succ 0) in 2)) ((let a = (succ a) in (false "boy")) . c))
(iszero (succ (pred ("apple" . d))))
(\ a . (iszero (iszero (let b = true in false))))
(iszero ((\ d . (iszero 0)) . e))
((({ a = a , c = true }) . e) . c)
((let c = (iszero (iszero 2)) in (succ c)) (if (iszero "apple") then (succ 2) else (a true)))
(iszero (((succ false) 1) (\ d . c)))
(succ (\ b . (b false)))
((pred (("boy" . b) 1)) . c)
(\ d . (succ ({ e = c , b = "apple" })))
(if (pred (({ a = true , e = 1 }) . d)) then (succ (({ e = 1 , b = "apple" }) (true b))) else ((pred (pred 1)) . e))
(pred ((1 (let c = c in false)) (false . e)))
(iszero ({ e = (succ "boy") , e = (pred c) }))
({ a = (if ((\ a . "apple") . b) then ({ c = (let a = false in 1) , b = (iszero 2) }) else (let c = (a . a) in (if (0 c) then (succ 0) else ({ d = 0 , b = true })))) , a = (pred (if 0 then true else c)) })
(((2 . e) . c) (pred (iszero (succ b))))
((if ((if true then false else "boy") . d) then ((iszero "boy") . b) else (if (iszero true) then (pred false) else ({ b = b , c = 0 }))) ((succ 0) (if "boy" then "boy" else 0)))
(pred (let c = (iszero b) in (pred 0)))
({ e = (if ({ e = (let a = b in 2) , c = (let e = false in (iszero "boy")) }) then (if (iszero 1) then ({ d = (b 1) , a = (pred 1) }) else ({ d = "boy" , c = "apple" })) else (succ (iszero c))) , b = (if ((let b = 0 in "boy") ({ b = (iszero 0) , e = (pred a) })) then ({ e = (pred 2) , d = (succ (let d = false in true)) }) else ((pred "apple") (false . e))) })
(iszero (if (iszero (c . b)) then ({ b = (iszero b) , b = (let b = c in 0) }) else (succ (succ 0))))
(pred ({ d = (pred "apple") , d = (iszero false) }))
((pred ({ b = (pred (succ "apple")) , b = (let a = b in false) })) . e)
(succ (({ b = b , d = (0 false) }) ({ a = true , d = 0 })))
(pred ((\ b . "apple") . d))
((\ e . (\ c . false)) . b)
(pred (pred (pred "boy")))
(\ e . (pred (if c then 1 else (\ a . 1))))
(((c . a) . b) (((if 1 then b else "boy") . d) . e))
((if (a b) then (pred 2) else ("boy" b)) (let e = ({ c = (b "boy") , e = (iszero true) }) in (succ 1)))
(if ((\ e . a) . d) then (pred (iszero c)) else (iszero (if (iszero a) then (c . c) else (pred b))))
(succ (pred (let b = a in (\ a . 0))))
(pred ((if 0 then true else "apple") . d))
((\ c . (iszero (succ true))) . e)
((iszero (succ 2)) ((("apple" true) . a) . c))
(succ (\ c . (succ 0)))
(succ (if (succ (iszero c)) then ({ e = "apple" , d = a }) else ({ c = (\ e . c) , e = (if 0 then false else 1) })))
((if (let c = (let a = c in false) in (false . a)) then ({ c = (iszero false) , e = (("apple" 2) (iszero c)) }) else (if (pred "boy") then (if b then b else ({ e = b , b = "apple" })) else (2 . b))) . a)
(pred (({ e = (let c = 0 in c) , b = (let e = c in ({ b = 0 , d = b })) }) . b))
(succ (let c = ({ b = false , e = a }) in ((\ c . b) . c)))
(pred ((pred (false . b)) . a))
({ e = (if (let c = (pred "boy") in (a . a)) then ({ d = ({ c = true , c = 1 }) , a = (if (pred "apple") then (let a = false in "apple") else b) }) else (pred (iszero 0))) , a = ((iszero (pred 2)) (if "apple" then 1 else "apple")) })
(if (iszero ({ b = true , a = 0 })) then ((iszero (iszero a)) . b) else (if (iszero (pred 2)) then (\ b . (pred 2)) else (\ e . (2 . c))))
(\ b . (if (succ b) then (\ d . (let c = a in 1)) else (\ b . (succ "boy"))))
(pred ((succ a) . a))
(pred (({ e = ({ a = "apple" , e = "boy" }) , a = ({ b = (pred "apple") , d = (pred a) }) }) . b))
((pred (pred false)) ((let d = ({ c = 2 , e = c }) in (false . c)) . a))
(((if (succ c) then (if "boy" then (succ "boy") else ({ c = "apple" , e = false })) else (\ e . ("apple" . c))) ((let b = false in "apple") (iszero true))) . b)
(pred (\ b . (iszero (if c then c else true))))
(if ({ b = (\ e . b) , b = (succ true) }) then (pred ({ c = (\ c . (iszero 2)) , c = (2 . d) })) else ((iszero (let c = c in true)) . a))
(let b = ({ c = (succ (\ b . "boy")) , a = (pred (iszero true)) }) in ((iszero ({ c = 1 , a = false })) (iszero (iszero 0))))
(\ a . (\ b . (if false then c else "apple")))
(pred (let d = (\ d . (let d = true in "apple")) in ({ e = (if 1 then 2 else 1) , b = a })))
(let b = ((pred 0) . a) in (\ e . (if (iszero 1) then 0 else ({ b = "boy" , a = false }))))
(succ (\ c . (succ 0)))
(\ e . (let a = (\ e . true) in ({ d = b , e = (succ false) })))
(pred (pred (pred 0)))
((let b = (a . e) in (0 true)) (succ (succ (iszero b))))
((if (\ b . a) then (succ (\ e . 2)) else (succ 1)) (if (let c = a in a) then (succ (\ b . c)) else (pred (succ true))))
({ e = (((iszero false) . c) ({ d = (succ b) , b = (let e = b in false) })) , b = (succ (\ e . (pred a))) })
(let c = (iszero (iszero (let e = true in a))) in (if (let b = (succ "boy") in 1) then ((iszero "boy") . a) else (pred (pred ("boy" a)))))
(succ ((pred "apple") . b))
((let b = (a a) in (\ e . ({ a = 2 , e = 2 }))) . c)
(pred (\ e . (1 . d)))
(pred (if (\ e . (a 1)) then (true (succ "apple")) else ((if c then 0 else 2) . e)))
(pred ((succ (c 0)) . d))
(if (iszero (iszero ({ b = "boy" , d = true }))) then ((let e = false in b) . b) else (if ((b . b) . a) then ((iszero 2) (succ 0)) else ({ e = (pred 1) , d = (let c = 1 in c) })))
(if (\ a . (pred (if b then a else a))) then (if ((\ a . (if 0 then 1 else true)) . b) then ((if true then ({ a = "boy" , b = 1 }) else c) . c) else ({ e = ({ d = a , d = a }) , b = (pred "boy") })) else ((if (let c = (if a then c else b) in 2) then ("apple" c) else (succ "boy")) . d))
(if (pred (let d = (iszero "boy") in (false . b))) then (let c = (let a = c in "apple") in (iszero (if false then false else ("boy" . b)))) else (pred (\ d . ({ c = 0 , b = (if "apple" then "boy" else "apple") }))))
(\ c . (let b = (if c then b else false) in (b . e)))
((pred ({ c = 0 , c = (true . a) })) (\ d . (1 . a)))
(iszero (iszero ({ d = "apple" , b = true })))
({ c = (\ d . ({ b = (true . e) , c = (\ c . 2) })) , d = (succ (false (iszero 2))) })
(iszero ((\ b . true) (if 0 then 0 else b)))
((\ c . ({ d = (pred 1) , b = (iszero "apple") })) . a)
({ a = (if (if "apple" then (iszero "apple") else false) then ("apple" . d) else (\ d . (pred false))) , e = (\ c . (let d = (c . d) in true)) })
({ d = (if (succ true) then ({ e = "apple" , d = 2 }) else (pred a)) , c = (if (iszero (true . d)) then (pred (succ "apple")) else (let e = c in false)) })
(pred (let a = (iszero a) in (if ({ b = b , d = true }) then ("boy" . b) else (if c then "boy" else 2))))
(succ ({ a = (\ a . b) , b = (iszero "apple") }))
(if (let e = (succ (iszero b)) in (if "boy" then false else (\ d . 0))) then ({ e = (1 . e) , c = ({ b = 1 , b = "apple" }) }) else (if (pred c) then (pred false) else (\ c . true)))
(if ({ c = (if c then 1 else (2 false)) , a = ((if c then (pred a) else (\ b . "boy")) . b) }) then (\ b . (pred true)) else (pred (let a = 2 in "boy")))
(if ({ e = ((pred 2) . c) , c = (iszero 1) }) then (succ (succ (let b = a in (b . e)))) else (let b = (pred (if "boy" then (if 0 then 1 else 2) else (0 . a))) in (false (if "boy" then c else a))))
(if (if (\ c . (pred 0)) then (b . d) else (true . d)) then ((succ (succ b)) (if (succ a) then (a . a) else (\ d . "boy"))) else ((iszero ("apple" "apple")) (if (pred true) then (pred "boy") else (if c then a else a))))
(iszero (((succ true) "boy") (\ b . (let b = 0 in b))))
(if ((1 . a) . d) then (if ((let e = (if 1 then 2 else a) in (\ b . 0)) . a) then (\ c . (succ "boy")) else ({ c = (let e = (iszero "apple") in (\ e . false)) , e = (if c then 1 else true) })) else ((({ e = false , c = c }) . c) . e))
(succ (if (c (\ d . a)) then (if (succ c) then 0 else "boy") else (iszero c)))
(let d = ({ d = ({ e = "boy" , a = 0 }) , c = (iszero (if 1 then a else b)) }) in (({ d = (let b = true in true) , b = (true true) }) (iszero "apple")))
(let e = (let d = (iszero (let a = false in 1)) in ((succ b) (2 b))) in ({ c = (pred 0) , d = ({ c = 2 , e = "boy" }) }))
(let c = (pred (b . b)) in (succ (\ d . ("boy" . c))))
({ e = (iszero (succ (if b then c else 1))) , d = (succ (\ a . (iszero (\ b . "boy")))) })
((iszero ((\ d . (succ "boy")) . d)) . e)
(pred (((2 . d) 0) ({ e = "apple" , b = (false . d) })))
(if (succ ({ d = c , e = (2 . c) })) then (succ (\ d . b)) else (iszero (0 . e)))
((\ e . (\ c . 2)) (pred (succ (\ e . (\ d . "apple")))))
((succ ((succ false) c)) . e)
({ b = (iszero ((2 false) (succ "apple"))) , e = ((let d = (let c = (2 1) in (succ c)) in (if true then true else b)) . c) })
(let d = ((if 0 then 1 else "boy") . a) in (pred ({ b = false , d = (2 . b) })))
(\ d . (\ a . (pred "apple")))
(iszero (pred (let d = 1 in (2 . e))))
(pred (pred (c true)))
((\ b . (pred ((pred 1) . a))) ({ e = (({ d = 2 , a = 0 }) . a) , c = ((succ "apple") . d) }))
({ e = (if (iszero ("apple" . c)) then (let c = (succ true) in 2) else (succ (\ e . b))) , a = (if (pred (pred true)) then (succ (iszero (if 0 then a else b))) else (let c = (\ a . "boy") in (\ b . (a 0)))) })
(succ ((if b then (pred 2) else 0) . d))
({ e = (iszero (if (succ a) then (succ true) else ({ b = a , a = 0 }))) , c = ({ b = ((\ a . 0) . d) , d = ((if true then "apple" else "apple") ((c . e) c)) }) })
({ a = (let d = (2 2) in (succ b)) , b = (if ((pred true) false) then (if c then 0 else ({ a = 0 , c = 2 })) else ({ d = false , a = 1 })) })
(pred ((succ ("apple" . a)) . d))
(succ (\ c . (succ (pred false))))
((if (\ c . (\ d . 0)) then (if c then a else (succ 2)) else ((if c then 1 else c) . c)) . e)
(let d = ((\ d . b) (succ "boy")) in (succ ((c . c) ("boy" . a))))
(succ ({ e = (iszero 1) , d = (iszero ({ e = b , e = a })) }))
(let d = ({ a = ({ b = (succ false) , c = (1 0) }) , c = (let b = ({ c = "apple" , d = true }) in (let a = c in 0)) }) in ({ c = (iszero false) , c = ({ a = 0 , d = b }) }))
(succ (pred (let e = ((let e = a in 1) . b) in (false . b))))
(succ (if (let b = 2 in false) then (iszero a) else (0 . c)))
(let a = (((succ 1) a) (({ c = "boy" , e = "apple" }) (c . a))) in ((iszero (if a then a else c)) . a))
(if (pred (pred (iszero "apple"))) then (((c . a) (pred c)) (let b = b in "apple")) else ((let d = (iszero 2) in (\ a . false)) . e))
(pred (\ d . (iszero (pred (iszero "boy")))))
(let b = (let a = (iszero ({ a = b , e = b })) in ((pred (let b = 1 in 1)) (\ c . c))) in (let b = (if (succ "apple") then 1 else (pred "boy")) in (1 2)))
({ d = (iszero (a a)) , c = (pred (let c = "apple" in a)) })
({ a = ({ b = (iszero (iszero c)) , e = (1 . b) }) , e = (pred (let a = a in "apple")) })
(if (let b = ((iszero "apple") 1) in (if (2 . e) then true else true)) then ({ d = ({ c = (c "boy") , b = (false . e) }) , a = (iszero (\ c . b)) }) else (pred (if (iszero 0) then (let a = a in "boy") else (succ "apple"))))
(iszero (((succ true) true) . a))
(\ d . (succ (\ b . "apple")))
({ d = ({ e = ({ b = "apple" , c = true }) , a = (pred (0 . c)) }) , b = (if (\ b . b) then ({ e = true , a = c }) else ({ d = true , e = 2 })) })
(succ ((succ (if "boy" then 1 else 1)) (true . a)))
(succ ({ c = (let c = (pred ({ c = b , b = 1 })) in (if c then c else (let e = a in 2))) , c = ({ d = (pred false) , d = a }) }))
(let e = (if (let b = (succ a) in (if (succ 2) then "boy" else false)) then (if ("apple" . b) then 1 else true) else (c false)) in ({ b = (\ c . 0) , b = (if b then (\ c . c) else "apple") }))
((let a = (a . a) in ((\ b . 0) "boy")) . b)
({ c = (if ((if "boy" then c else 2) (pred (pred b))) then (pred (if "apple" then 1 else 1)) else (iszero ((if false then a else c) "boy"))) , b = (\ d . (pred c)) })
({ e = (pred (\ c . true)) , b = (iszero (\ d . (iszero 0))) })
({ d = (((\ c . ({ d = "apple" , a = false })) (false "apple")) . c) , b = (succ (if a then a else true)) })
(\ b . (let a = (succ ((succ a) . e)) in (succ 2)))
(if (((1 1) (if (c . c) then "boy" else (pred "boy"))) . e) then (iszero (let e = false in true)) else ((\ d . (let d = "boy" in 1)) (let a = true in b)))
(iszero ((let c = ({ a = a , d = c }) in (if c then b else (pred c))) . e))
({ b = ({ a = (let b = ("apple" true) in (succ "boy")) , d = (\ c . (pred 2)) }) , e = (\ c . (c . d)) })
(let a = (iszero (\ b . (let b = b in true))) in (pred ({ d = 1 , c = (iszero "apple") })))
((\ e . ({ d = ({ e = false , d = a }) , e = ({ b = a , e = 0 }) })) . c)
(succ ((0 . c) (\ c . "boy")))
(if ((iszero ({ a = 1 , d = (false "apple") })) ((succ a) ({ a = ({ a = 1 , c = "boy" }) , a = 2 }))) then ((if 2 then c else c) . e) else (pred (iszero 1)))
(({ c = (let e = "apple" in (iszero false)) , b = (\ d . "apple") }) (let b = ((true b) . d) in ((\ a . a) . b)))
(\ c . ({ b = (succ "boy") , a = (c "boy") }))
(if ({ d = (b . b) , d = (let e = 2 in false) }) then (((pred a) . b) . c) else (\ e . (if 0 then c else a)))
(iszero (\ a . ({ b = true , d = 1 })))
(\ c . ((succ 0) . b))
(((let a = (false . e) in 2) . e) . a)
((succ (iszero (succ false))) ((pred (if 1 then 2 else 0)) (((iszero "apple") 0) (if c then 0 else false))))
(if (iszero (\ e . c)) then (iszero (\ e . (1 . a))) else (iszero (let b = 1 in (a c))))
(pred (\ e . (2 "boy")))
((if ({ c = 0 , e = "boy" }) then (if 1 then 1 else true) else (\ b . ("boy" false))) (pred (if b then 0 else c)))
(let b = (pred (\ b . "apple")) in (let d = (let d = (false false) in ("boy" b)) in (\ e . (2 (true . e)))))
({ d = (iszero (pred (iszero 0))) , c = (if (pred "apple") then ((2 a) (\ c . ("boy" "boy"))) else (iszero (let a = "boy" in c))) })
(succ (\ e . (if (succ 0) then b else ("boy" . b))))
(if (if (a ({ a = false , b = "boy" })) then ({ a = "apple" , d = 2 }) else ((pred false) . a)) then (if (iszero (if 2 then false else 0)) then (if (if false then 1 else 1) then "boy" else (a 1)) else (let e = (iszero (if c then true else true)) in ({ a = (true false) , c = ({ e = 0 , b = false }) }))) else (pred (b 1)))
((pred (if false then "apple" else (let a = true in 1))) . d)
({ a = (succ (if (let e = b in c) then ({ e = a , c = a }) else (2 "apple"))) , b = (({ c = ({ c = 1 , a = (1 . d) }) , b = (iszero (if false then 2 else true)) }) . c) })
((let d = ((iszero c) . a) in ({ e = (succ "apple") , c = (succ 1) })) (\ e . (if true then (\ a . a) else (a . a))))
(pred ({ a = ((\ a . (pred c)) (pred false)) , c = ((pred (\ a . 1)) (if 0 then true else c)) }))
(iszero ((let b = (a 0) in (\ a . 1)) ((1 . e) (iszero true))))
(pred (succ (iszero (b . c))))
({ b = (pred (if c then c else b)) , e = (pred ({ a = (let c = 1 in b) , b = (succ "apple") })) })
(let e = (if ((\ b . "boy") . b) then (if (false . e) then (\ a . c) else (\ d . "boy")) else ("boy" "boy")) in (\ d . (iszero (pred b))))
({ e = (\ e . (succ "apple")) , b = ({ b = (if a then a else false) , c = (succ "apple") }) })
(\ b . (((let a = "boy" in 0) . e) (iszero (succ true))))
({ d = (\ b . ((let a = (\ b . a) in ({ a = true , c = c })) (\ c . a))) , d = ((if "apple" then ({ e = 0 , b = "boy" }) else (iszero 1)) (let b = 2 in (iszero false))) })
({ c = (\ c . (\ c . 0)) , c = (let a = (let d = 2 in c) in (iszero a)) })
(pred (iszero (pred 0)))
(({ e = (succ (iszero 0)) , c = (succ false) }) (pred (if (succ c) then (iszero "boy") else ((if 2 then b else "boy") "apple"))))
({ d = (iszero (if c then (if "apple" then "boy" else "boy") else (c false))) , c = (pred (\ b . a)) })
(let c = ((iszero b) . d) in (if (\ e . (if ({ a = false , a = c }) then c else (pred 1))) then (succ (let e = ("apple" . b) in (succ "apple"))) else ({ d = (\ b . true) , c = (\ b . a) })))
(\ d . (iszero (a . c)))
((\ e . ((iszero "apple") . b)) ({ d = (iszero ({ c = "apple" , d = a })) , b = (c . a) }))
(if (succ (let d = "apple" in c)) then ((if (pred (let c = 2 in 2)) then ({ e = ({ e = a , b = 2 }) , c = (let b = "boy" in b) }) else (succ (c . b))) ((1 2) ({ a = true , b = 2 }))) else (iszero (c c)))
(({ a = (iszero (pred false)) , b = (iszero (c . d)) }) . c)
(pred (pred (succ (if false then "boy" else 0))))
((if (succ (if "boy" then false else 0)) then (pred 2) else (let a = "apple" in b)) . e)
(\ b . (succ (1 (pred "apple"))))
(((pred (pred b)) ({ d = 0 , c = 0 })) . b)
(((pred (b . e)) (succ (succ b))) . a)
(succ (iszero (pred 1)))
(succ (let d = (pred (pred true)) in (1 . c)))
(pred (let b = (iszero (pred 0)) in (\ e . (if ({ b = "boy" , a = 1 }) then ({ c = "apple" , c = "boy" }) else b))))
(iszero (pred ((a c) . b)))
(let d = (let a = (\ b . "boy") in ("boy" . b)) in ((\ e . 0) (let c = (iszero 1) in (succ true))))
(succ (\ b . (\ c . (if a then b else "boy"))))
({ c = (pred (false 2)) , a = ((\ d . 2) . c) })
(let c = (({ c = (0 1) , d = (c . e) }) . a) in ((iszero ((true . a) "boy")) (iszero (iszero true))))
((\ e . (iszero (pred true))) . a)
((if (pred (false a)) then (\ a . (if false then 2 else b)) else (\ c . false)) . e)
(iszero (pred (iszero (a . b))))
(pred (succ ({ c = ((if true then false else false) . d) , d = (iszero 2) })))
(if (\ c . (if (succ (let c = 1 in b)) then ({ c = b , a = a }) else ("boy" . b))) then (succ (pred true)) else ((if (\ a . "boy") then ({ a = c , c = 1 }) else ({ d = (c false) , b = true })) . e))
((\ b . ({ d = true , b = false })) . b)
(let b = (pred (let d = (if c then "boy" else true) in ({ b = ({ e = "boy" , b = 1 }) , e = (pred 1) }))) in (pred (1 . b)))
(if (let a = (if (false false) then ({ b = (\ b . false) , e = c }) else (c . e)) in (\ b . (\ c . 1))) then ({ e = (succ (let a = 0 in 1)) , c = (succ (if 1 then b else b)) }) else ((\ c . "apple") . c))
(\ e . ((succ 0) . a))
(if ((succ (if c then a else false)) . d) then (iszero (if 0 then (succ "apple") else true)) else ({ c = (iszero (iszero c)) , a = (succ (let d = false in true)) }))
(let b = ((if (iszero c) then (pred (let a = false in 2)) else (succ ({ b = a , e = 1 }))) . b) in (let d = (let e = 0 in false) in (pred false)))
(if (pred ((let d = c in "boy") (\ a . "apple"))) then (let d = (\ d . (pred 0)) in (false . a)) else (((if c then b else true) "boy") . b))
({ c = (let d = (iszero 1) in ({ c = (iszero 2) , e = (succ 0) })) , e = ({ e = (b . a) , c = ({ a = 1 , b = false }) }) })
(succ (if ({ b = "boy" , c = "apple" }) then (let c = (a . e) in (pred (succ false))) else (iszero (pred 2))))
(\ a . (succ (succ (\ a . (if c then b else "apple")))))
((\ b . (2 . a)) (if (iszero (b . e)) then (let d = 0 in false) else (let b = (\ d . (if 0 then a else 2)) in (if (iszero c) then c else (1 true)))))
(pred ({ b = (\ a . ({ c = 0 , e = b })) , d = (pred b) }))
({ b = (if (succ (1 (\ d . true))) then (pred false) else ({ d = (true . d) , e = (\ a . a) })) , b = (if ((\ b . a) . e) then (2 1) else ({ d = 1 , a = false })) })
(\ e . (if (\ b . a) then (succ (succ a)) else (pred "apple")))
({ e = (if (\ e . a) then (c . d) else (a false)) , b = (iszero (succ (pred 0))) })
((iszero (let a = (\ c . 1) in (succ false))) (if (if ({ b = "boy" , b = 2 }) then ({ b = 0 , c = ({ b = a , b = 0 }) }) else (if a then "boy" else c)) then (if (let b = "apple" in "boy") then (\ c . a) else (let c = a in false)) else (pred (true "apple"))))
(let a = (let e = (if (let d = c in 1) then ("apple" 2) else (\ a . c)) in (succ 1)) in (iszero (iszero (true . c))))
(({ a = (0 . d) , e = (if "boy" then c else b) }) . e)
(if ({ a = ({ d = 1 , e = "boy" }) , e = ((pred 2) 0) }) then (if (\ b . false) then ((pred 1) . e) else (let b = ((\ c . c) (1 . c)) in (if (if false then true else b) then a else (1 . c)))) else (if (iszero 1) then (let d = (if (iszero a) then (pred false) else true) in (let e = (let d = "apple" in 0) in 0)) else (pred ({ a = (pred b) , c = true }))))
(iszero (({ b = false , b = "apple" }) (succ 1)))
(\ a . (if (("boy" 1) (\ b . 1)) then (if (if "boy" then b else a) then (if "apple" then 0 else a) else (\ b . "apple")) else (pred (if true then c else "boy"))))
((iszero (if b then "apple" else ("boy" . d))) (succ (\ e . (1 . b))))
(\ c . (\ a . (pred b)))
({ e = ((0 . b) . c) , a = (\ b . ({ b = true , b = ("boy" 1) })) })
(succ (if (\ d . 2) then (1 a) else (\ a . (pred 1))))
(succ (({ c = (succ "apple") , b = (pred "apple") }) . c))
(succ ({ b = ((b . a) (succ c)) , e = ({ d = "apple" , a = ("boy" . e) }) }))
(iszero (\ a . (\ c . true)))
(let c = (iszero (2 . d)) in (iszero (succ "apple")))
(iszero ((let d = "boy" in false) . e))
(pred (\ b . ({ e = "boy" , b = "apple" })))
((\ e . (1 2)) . e)
({ a = (let b = (0 . c) in (\ c . (let d = 2 in true))) , b = ({ e = (succ ({ d = c , a = "apple" })) , a = (let b = (pred "apple") in (\ e . (succ a))) }) })
(iszero ({ a = (false . c) , d = (if c then true else b) }))
({ b = (if ({ c = c , a = (a . b) }) then (if "apple" then b else 1) else (iszero a)) , e = (pred ((pred "boy") . a)) })
(let a = (\ d . (pred a)) in (if (iszero (if a then a else b)) then (pred false) else ((let d = 1 in (succ 1)) . d)))
(pred (iszero (succ "boy")))
(\ a . (pred (b . b)))
((iszero ((iszero a) (pred ({ a = true , b = b })))) (\ d . (a true)))
({ a = (let c = ({ c = (succ "apple") , d = (let c = "boy" in 2) }) in (pred 1)) , e = (pred (let d = "boy" in 1)) })
((pred (\ e . c)) (iszero (let b = (let e = true in "boy") in (false . c))))
({ d = (succ (let a = ({ b = 1 , c = false }) in (let c = true in "boy"))) , d = (({ e = a , c = 2 }) . d) })
({ e = (iszero (iszero true)) , a = (let d = (b . d) in (a . e)) })
((iszero (succ c)) (pred (iszero false)))
(if ({ a = (let b = b in 1) , c = ({ e = ({ d = 2 , a = a }) , a = ("apple" b) }) }) then ({ d = (iszero b) , d = (if 2 then c else false) }) else (iszero (let d = ({ d = 2 , b = true }) in (succ (succ true)))))
((pred (("boy" c) . a)) ({ a = ({ a = "apple" , d = b }) , b = ((succ 1) . d) }))
(\ e . (\ c . (2 . a)))
(if ({ c = ({ b = (succ c) , b = false }) , b = ((iszero "boy") . c) }) then ((let c = (\ a . a) in (2 false)) . e) else (pred (iszero 1)))
(pred (pred (b false)))
(let d = (succ (\ a . (pred "apple"))) in (pred (let d = (pred 0) in ({ a = a , b = b }))))
((let e = ({ b = (succ 0) , a = "boy" }) in (\ d . 1)) . e)
((pred (if (let d = 1 in a) then (iszero (succ true)) else (pred 0))) (pred (false false)))
(((c . c) . d) . b)
(let d = ({ b = (succ (pred c)) , e = (if false then false else "apple") }) in ((let b = false in 0) (iszero c)))
(\ e . (iszero (2 (a false))))
(iszero (if (pred (pred true)) then (succ "boy") else (\ d . a)))
(\ d . (iszero ({ b = 0 , d = "apple" })))
((pred (succ (c . a))) (let a = ((1 . e) . b) in ({ b = (iszero "boy") , e = (let d = true in true) })))
(let d = (succ (let b = ({ c = a , d = 0 }) in 2)) in (({ d = ("boy" . e) , d = (iszero "boy") }) . c))
(({ a = (succ 2) , c = (succ ({ d = true , a = c })) }) . e)
(if (iszero (succ (let a = "apple" in 2))) then (iszero ({ a = "apple" , b = 0 })) else (\ a . ({ a = (succ false) , e = (succ false) })))
(succ ((\ d . (iszero 0)) . b))
(pred (iszero (iszero 1)))
(let e = (if (pred 0) then ((\ e . "boy") . c) else (if c then 2 else true)) in (iszero (succ (true false))))
(iszero (iszero (pred (pred 0))))
((if (let b = true in c) then ((let a = ({ a = 0 , c = 2 }) in (c . a)) . d) else ("boy" . b)) (succ (pred (\ c . "boy"))))
(let c = (({ c = (succ (succ 1)) , d = (succ a) }) ({ a = ("apple" c) , a = ({ a = c , b = 2 }) })) in (if (({ c = a , a = b }) (c true)) then ((let e = c in b) (c . b)) else (pred (let b = 0 in "boy"))))
({ a = (\ d . ({ a = c , b = "boy" })) , e = (iszero (let d = 1 in 0)) })
(if (succ (let c = (let a = 0 in a) in "boy")) then (pred (2 "boy")) else ({ c = (if c then (1 . e) else "apple") , c = (succ a) }))
(if (if (\ a . (let a = "boy" in false)) then (iszero (succ "apple")) else (succ ("apple" . b))) then (if (true 0) then (a . e) else (pred b)) else (\ e . (if (\ a . 2) then (b . a) else (iszero b))))
({ d = (let d = (iszero false) in (iszero a)) , b = ({ a = (let e = true in (pred false)) , d = (iszero (\ b . (let e = "apple" in b))) }) })
({ d = (({ c = (succ false) , b = (false . a) }) (if (c "apple") then ({ c = 1 , d = false }) else (iszero c))) , d = (if (\ c . b) then ({ b = "apple" , e = 0 }) else ("apple" . c)) })
({ e = (iszero (let c = (\ c . a) in "apple")) , c = (let b = (succ (if (\ b . 1) then (false . b) else (if 1 then a else c))) in (let b = (let c = (pred a) in (pred c)) in (pred "apple"))) })
(pred (\ b . (\ a . (pred false))))
(succ ({ e = (\ a . ({ b = a , d = 0 })) , b = (if (if (pred "apple") then "apple" else false) then ((pred 0) 1) else (pred (2 "boy"))) }))
(let d = ({ d = ({ e = 0 , e = (succ false) }) , a = (succ (if (b . d) then (\ b . a) else "apple")) }) in (pred (pred (pred 1))))
(let e = (let a = (succ false) in (succ (let d = b in true))) in (\ a . (iszero 0)))
(\ d . (pred (iszero b)))
(let b = ((iszero (let a = (false . a) in "boy")) . a) in (if (pred (succ a)) then (iszero ({ b = a , b = "apple" })) else (if (0 . c) then (let b = true in true) else b)))
(let c = ((succ (iszero (pred 1))) (pred (pred b))) in (pred (succ 2)))
(if (iszero (if ({ e = "apple" , e = (\ e . b) }) then (iszero "apple") else (let e = b in 2))) then (succ ({ d = ({ e = b , b = "apple" }) , a = (if c then false else c) })) else (((false "boy") b) . b))
(\ e . (succ (iszero (\ a . 1))))
((pred (succ c)) . a)
(pred (succ (\ d . b)))
((let e = (pred true) in (if "boy" then ("apple" 0) else a)) (if ({ e = true , b = true }) then (pred a) else (let e = (b . d) in (true 2))))
({ c = (succ (if (if 2 then true else "boy") then a else 1)) , b = (\ c . (succ b)) })
(((if ((succ 1) . b) then (pred b) else (let c = b in c)) . d) ((if (a . b) then b else true) (pred (iszero ({ e = a , e = b })))))
(if (let a = ({ c = (pred "boy") , e = ((\ d . true) . b) }) in ({ e = (("boy" . e) . c) , b = (let c = 1 in c) })) then (iszero (if a then 0 else true)) else (succ (({ e = 0 , a = (if true then a else b) }) (let a = 2 in true))))
(iszero (succ (let a = 2 in "boy")))
(if (\ d . (iszero (\ c . false))) then ({ a = ({ b = "boy" , a = (pred a) }) , d = (iszero 2) }) else (\ c . (iszero "apple")))
(pred (\ b . (iszero (iszero "apple"))))
(if ({ a = (succ 1) , d = ({ c = (succ 2) , b = (pred 1) }) }) then (pred (pred (if true then 2 else c))) else (let e = ({ e = false , c = 1 }) in (iszero 1)))
(iszero (let d = (iszero (succ false)) in (let c = ({ e = (pred c) , d = (b . b) }) in ({ b = c , a = "boy" }))))
(pred (succ (succ 2)))
((("boy" . b) (if (let e = true in false) then true else (if "apple" then 2 else a))) . c)
({ a = (let c = (false . c) in (iszero (if a then 2 else a))) , c = (succ (iszero "boy")) })
(\ c . (let b = ((\ b . "boy") "apple") in (\ b . (iszero c))))
((let c = (succ (succ true)) in ({ c = (if (pred c) then "apple" else (iszero false)) , a = (pred 0) })) (succ ((a 0) . d)))
((succ (let e = c in 2)) . a)
({ a = (iszero (succ (iszero false))) , a = ((iszero false) (succ 0)) })
(succ (if (true true) then ("apple" . c) else (iszero "boy")))
(iszero ((let b = "boy" in "apple") . a))
(\ e . (iszero (pred (succ 0))))
(pred ((iszero 0) . d))
(\ e . (iszero ({ e = (if b then "apple" else false) , a = c })))
(let d = (iszero ((false 1) 2)) in ((let d = (iszero 2) in (b (c . c))) . a))
((pred ((pred c) . e)) (succ (\ c . (if false then false else (let e = b in c)))))
(({ e = (let b = a in ({ e = 2 , b = "boy" })) , a = (succ ({ d = 1 , d = "apple" })) }) (let a = (\ b . "boy") in (if 2 then b else "apple")))
(pred ((let c = (pred (if "apple" then "apple" else 0)) in (succ (pred 0))) . b))
(pred (succ ({ a = (0 . d) , c = (if true then "boy" else c) })))
(iszero (pred (\ a . (if c then a else "boy"))))
(\ b . ({ d = ((succ (if false then 2 else false)) . b) , b = (iszero ({ c = true , a = false })) }))
(((let a = (a . a) in b) (pred (\ b . "apple"))) (\ e . (if ("apple" 1) then (iszero a) else (1 . a))))
(if ((1 2) (let c = a in c)) then (let e = (2 . e) in (if a then a else (pred 0))) else (pred (c b)))
(iszero ({ e = (iszero (iszero 2)) , e = (succ ({ d = 0 , b = false })) }))
({ e = ({ d = (iszero (let e = 2 in "apple")) , d = ((iszero 0) false) }) , c = (if (pred "boy") then (pred 0) else (pred a)) })
((({ a = b , c = true }) . b) . d)
(let a = ({ c = (iszero (succ b)) , d = ((succ "boy") (succ b)) }) in ((let d = (pred c) in (\ d . "boy")) . d))
(succ ((pred 2) (iszero c)))
(pred (pred ({ d = (pred (succ b)) , a = (iszero 1) })))
(iszero ((iszero (let a = a in 1)) . d))
(if (\ c . ({ d = true , c = true })) then ((if (if "boy" then 0 else 0) then (succ (let c = 0 in 0)) else (if false then ({ b = a , b = a }) else (2 1))) . c) else (if (pred (let c = (succ 0) in false)) then (0 ({ d = 2 , c = 0 })) else ((if 1 then "boy" else 2) ({ a = (pred 2) , b = 0 }))))
(succ (if (pred (iszero 1)) then ((if "boy" then 1 else true) (false . d)) else (iszero (let c = a in "boy"))))
(pred (succ (true false)))
({ e = (\ e . (\ c . (succ b))) , b = ((b 2) (iszero false)) })
(pred (pred (\ a . "apple")))
(pred (if (pred 2) then (let e = (pred ({ c = "boy" , d = c })) in (let c = a in false)) else (b (pred c))))
({ b = (let a = (pred false) in (pred 1)) , e = ({ a = (iszero "boy") , a = (iszero false) }) })
((\ c . (pred c)) . d)
((succ (pred (\ c . ({ e = "apple" , c = false })))) (iszero (pred b)))
(if (if (let c = a in "boy") then (1 . e) else (pred 2)) then (succ (pred false)) else (succ ({ a = c , a = "apple" })))
(if (pred (pred (succ (if a then b else "apple")))) then ((let e = (b . d) in (pred 1)) . e) else ({ b = (succ c) , d = (2 . e) }))
(succ (succ (pred 1)))
(if (pred (pred (let c = "boy" in true))) then (iszero (true . e)) else (((pred "boy") false) (succ (1 . e))))
(pred (pred (let a = (succ a) in (iszero c))))
(({ c = ("boy" c) , a = ((iszero 2) . e) }) (({ c = (pred 1) , c = (let e = 0 in b) }) (0 1)))
